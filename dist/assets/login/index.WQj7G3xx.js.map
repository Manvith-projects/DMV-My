{"version":3,"mappings":"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","names":["cn","inputs","twMerge","clsx","ULThemePageLayout","children","className","rest","rootClasses","jsxs","jsx","floatingLabelFieldVariants","cva","FloatingLabelField","React.forwardRef","variant","size","error","helperText","label","startAdornment","endAdornment","props","ref","focused","setFocused","React.useState","hasValue","setHasValue","isDisabled","handleFocus","e","handleBlur","handleChange","isLabelFloating","FieldPrimitive.Root","FieldPrimitive.Label","FieldPrimitive.Control","Form","FormProvider","FormFieldContext","React.createContext","FormField","Controller","useFormField","fieldContext","React.useContext","itemContext","FormItemContext","getFieldState","useFormContext","formState","useFormState","fieldState","id","FormItem","React.useId","FormMessage","formMessageId","body","ulThemeFloatingLabelFieldVariants","ULThemeFloatingLabelField","wrapperClassName","formItemId","effectiveVariant","themeOverrides","BaseFloatingLabelField","ULThemeFormMessage","sdkError","hasFormError","showIcon","AlertCircle","Captcha","name","control","rules","imageUrl","imageAltText","containerStyles","imageContainerStyles","field","alertVariants","Alert","AlertTitle","ULThemeAlert","variantThemeOverrides","themeClasses","ULThemeAlertTitle","linkVariants","Link","underline","extractTokenValue","varName","ULThemeLink","disabled","baseStyles","disabledStyles","linkStyleValue","TooltipProvider","delayDuration","TooltipPrimitive.Provider","Tooltip","TooltipPrimitive.Root","TooltipTrigger","TooltipPrimitive.Trigger","TooltipContent","arrow","side","sideOffset","TooltipPrimitive.Portal","TooltipPrimitive.Positioner","TooltipPrimitive.Popup","TooltipPrimitive.Arrow","ULThemePasswordField","onVisibilityToggle","buttonClassName","showPassword","setShowPassword","useState","handleToggle","newState","passwordButton","EyeOff","Eye","buttonVariants","Button","render","defaultProps","useRender","ULThemePrimaryButton","sizeThemeOverrides","getFieldError","fieldName","errors","err","createIdentifierKey","hasEmail","hasPhone","hasUsername","identifiers","getIdentifierDetails","connectionAttributes","screenTexts","finalLabel","finalType","finalAutoComplete","identifierKey","config","rebaseLinkToCurrentOrigin","originalLink","targetOrigin","url","executeSafely","actionDescription","actionFn","result","useLoginManager","loginInstance","useMemo","LoginInstance","transaction","screen","isSignupEnabled","isForgotPasswordEnabled","passwordPolicy","signupLink","resetPasswordLink","texts","captchaImage","username","password","captcha","options","connectionName","LoginForm","useNativeMarkup","disableCaptcha","handleLogin","isCaptchaAvailable","allowedIdentifiers","form","useForm","togglePassword","s","isSubmitting","buttonText","captchaLabel","captchaImageAlt","forgotPasswordText","usernameLabel","usernameType","usernameAutoComplete","passwordLabel","generalErrors","usernameSDKError","passwordSDKError","captchaSDKError","onSubmit","data","localizedResetPasswordLink","index","Fragment","LoginScreen","useEffect","flattenColors","colors","calculateBorderRadius","style","defaultRadius","fallbackRadius","flattenBorders","borders","buttonBorderRadius","inputBorderRadius","flattenFonts","fonts","processFontType","fontData","fontType","sizePercent","calculatedSize","remValue","flattenPageBackground","pageBackground","layoutMap","flattenWidget","widget","positionMap","alignmentMap","currentThemeCache","PRECEDENCE_VARIABLE_MAPPING","applyAuth0Theme","screenInstance","clearThemeCache","themeData","extractThemeData","applyThemeVariables","theme","settingsVars","extractBrandingOverrides","themeVars","extractThemeVariables","organizationVars","branding","overrides","applyMappedOverrides","source","mapping","authPath","cssVar","value","getNestedValue","obj","path","current","key","newTheme","changedVars","findChangedVariables","updateDOMVariables","updateThemeCache","changed","variables","documentStyle","ULThemeCountryCodePicker","forwardRef","selectedCountry","placeholder","isLoading","fullWidth","widthStyles","ChevronRight","COUNTRY_DATA","transformAuth0CountryCode","countryCode","countryPrefix","countryInfo","isPhoneNumberSupported","identifier","useLoginIdManager","loginIdInstance","LoginIdInstance","isPasskeyEnabled","loginId","p","res","IdentifierForm","handleLoginId","handlePickCountryCode","identifierSDKError","identifierLabel","identifierType","identifierAutoComplete","shouldShowCountryPicker","Card","ULThemeCard","useLoginPasswordManager","loginPasswordInstance","LoginPassword","editIdentifierLink","links","Footer","localizedSignupLink","footerText","footerLinkText","Avatar","AvatarPrimitive.Root","AvatarImage","AvatarPrimitive.Image","ULThemeLogo","altText","themedLogoSrcValue","isLogoHidden","themedStylesAvatar","themedStylesAvatarImg","logoSrc","ULThemeSubtitle","ULThemeTitle","Header","logoAltText","handleLoginPassword","passwordLabelText","LoginPasswordScreen","loadAndSetMockContext","SCREEN_COMPONENTS","lazy","__vitePreload","index$1","index$2","getScreenComponent","screenName","App","setScreen","getCurrentScreen","ScreenComponent","Suspense","initializeApp","rootElement","createRoot","StrictMode"],"ignoreList":[],"sources":["../../../src/lib/utils.ts","../../../src/components/ULThemePageLayout.tsx","../../../src/components/ui/floating-label-field.tsx","../../../src/components/ui/form.tsx","../../../src/components/form/ULThemeFloatingLabelField.tsx","../../../src/components/form/ULThemeFormMessage.tsx","../../../src/components/Captcha.tsx","../../../src/components/ui/alert.tsx","../../../src/components/ULThemeError.tsx","../../../src/components/ui/link.tsx","../../../src/utils/helpers/tokenUtils.ts","../../../src/components/ULThemeLink.tsx","../../../src/components/ui/tooltip.tsx","../../../src/components/ULThemePasswordField.tsx","../../../src/components/ui/button.tsx","../../../src/components/ULThemePrimaryButton.tsx","../../../src/utils/helpers/errorUtils.ts","../../../src/utils/helpers/identifierUtils.ts","../../../src/utils/helpers/urlUtils.ts","../../../src/utils/helpers/executeSafely.ts","../../../src/screens/login/hooks/useLoginManager.ts","../../../src/screens/login/components/LoginForm.tsx","../../../src/screens/login/index.tsx","../../../src/utils/theme/themeFlatteners.ts","../../../src/utils/theme/themeEngine.ts","../../../src/components/ULThemeCountryCodePicker.tsx","../../../src/utils/helpers/countryUtils.ts","../../../src/screens/login-id/hooks/useLoginIdManager.ts","../../../src/screens/login-id/components/IdentifierForm.tsx","../../../src/screens/login-id/index.tsx","../../../src/components/ui/card.tsx","../../../src/components/ULThemeCard.tsx","../../../src/screens/login-password/hooks/useLoginPasswordManager.ts","../../../src/screens/login-password/components/Footer.tsx","../../../src/components/ui/avatar.tsx","../../../src/components/ULThemeLogo.tsx","../../../src/components/ULThemeSubtitle.tsx","../../../src/components/ULThemeTitle.tsx","../../../src/screens/login-password/components/Header.tsx","../../../src/screens/login-password/components/IdentifierForm.tsx","../../../src/screens/login-password/index.tsx","../../../src/utils/screen/mockContextLoader.ts","../../../src/utils/screen/screenLoader.ts","../../../src/App.tsx","../../../src/main.tsx"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import type { HTMLAttributes, ReactNode } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport interface ULThemePageLayoutProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * The content of the layout.\n   */\n  children: ReactNode;\n  /**\n   * Optional class names for additional styling or overriding default styles.\n   */\n  className?: string;\n}\n\nconst ULThemePageLayout = ({\n  children,\n  className,\n  ...rest\n}: ULThemePageLayoutProps) => {\n  // Use theme token utilities for page alignment and background.\n  const rootClasses = cn(\n    \"w-full min-h-screen\",\n    \"justify-page-layout\",\n    className\n  );\n\n  return (\n    <div className={rootClasses} {...rest}>\n      {/* UL top blue header\n          Color/gradient comes from `.ul-topbar` rules in `src/index.css` (uses hard-coded gradient)\n          Logo image is read from the UL theme CSS variable `--ul-theme-widget-logo-url` set in `:root` of `src/index.css`.\n      */}\n      <div className=\"ul-topbar\">\n        <div className=\"container mx-auto py-9 px-6 flex items-center justify-between h-14\">\n          <div className=\"flex items-center\">\n            {/* Logo container\n                Background image reads from CSS variable `--ul-theme-widget-logo-url` (defined in `src/index.css` :root). The sizing/positioning is controlled by `.ul-logo` styles.\n            */}\n            <div\n              className=\"ul-logo bg-no-repeat bg-contain\"\n              style={{\n                backgroundImage:\n                  \"url('https://www.dmv.ca.gov/imageserver/theme_10up/images/logo-ca-gov.svg')\",\n                height: \"36px\",\n                width: \"160px\",\n              }}\n              aria-hidden\n            />\n            <div\n              // remove visual gap by nudging the second logo left\n              className=\"ul-logo bg-no-repeat bg-contain -ml-20\"\n              style={{\n                backgroundImage:\n                  \"url('https://www.dmv.ca.gov/imageserver/theme_10up/images/logo-ca-dmv-white.svg')\",\n                height: \"36px\",\n                width: \"160px\",\n              }}\n              aria-hidden\n            />\n          </div>\n\n          <div className=\"flex items-center gap-4\">\n            {/* Global logo (globe icon) placed before Translate button */}\n            <span className=\"bg-white p-1 rounded-full\" aria-hidden=\"true\">\n              <i\n                className=\"fa-solid fa-globe\"\n                style={{ color: \"#000\" }}\n                aria-hidden=\"true\"\n              ></i>\n            </span>\n            <button className=\"translate-btn\">Translate</button>\n          </div>\n        </div>\n      </div>\n\n      {/* White nav strip with centered Home text */}\n      {/* Navigation strip\n          Background is white set by `.ul-nav` rules in `src/index.css` (keeps the centered white bar below the blue header).\n      */}\n      <div className=\"ul-nav\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"py-4 text-center font-bold\">Home</div>\n        </div>\n      </div>\n\n      {/* Hero/banner area\n          Visual color/illustration is applied via `.ul-hero` rules in `src/index.css` which set gradients and the angled white strip (::after).\n          If provided, the theme token `--ul-theme-page-bg-background-image-url` (in `:root` of `src/index.css` or injected by theme engine) will set a background image via the inline style here.\n          The `hero-title` text color/size is controlled by `.ul-hero .hero-title` rules in `src/index.css`.\n      */}\n      <div\n        className=\"ul-hero\"\n        style={{\n          position: \"relative\", // ensure stacking context for overlap\n          zIndex: 1,\n          backgroundImage: `url('https://www.dmv.ca.gov/imageserver/theme_10up/images/hero-mountains.png')`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n          clipPath: \"polygon(0 0, 100% 0, 100% 69%, 0 98%)\",\n          minHeight: \"400px\",\n        }}\n      >\n        <div className=\"container mx-auto px-9 relative bg-cover\">\n          <div className=\"absolute inset-0 flex items-start justify-start\">\n            <h1\n              className=\"hero-title m-10\"\n              style={{ fontFamily: \"tt-commons-800-italic, sans-serif\" }}\n            >\n              LOG IN\n            </h1>\n          </div>\n        </div>\n      </div>\n\n      {/* Screen content inserted here */}\n      {/* Main content wrapper\n          Make the content overlap the hero by using a negative top margin and higher z-index.\n          You can adjust the `marginTop` value to control how much the content overlays the hero.\n      */}\n      <div\n        className=\"ul-content relative w-full\"\n        style={{\n          marginTop: \"-150px\", // negative margin to lift content over the hero\n          zIndex: 20,\n        }}\n      >\n        {/* Wider container so screens can occupy more horizontal space (now using `max-w-7xl`) */}\n        <div className=\"container mx-auto px-6 w-full max-w-7xl\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ULThemePageLayout;\n","import * as React from \"react\";\n\nimport { Field as FieldPrimitive } from \"@base-ui-components/react\";\nimport { cva, VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst floatingLabelFieldVariants = cva(\n  \"bg-input aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive theme-default:active:scale-[0.99] relative box-border inline-flex w-full shrink-0 cursor-text items-center justify-center text-sm transition-[color,box-shadow] duration-150 ease-in-out outline-none disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"text-input-foreground shadow-input-resting hover:shadow-input-hover focus-within:ring-ring focus-within:ring-4\",\n        error:\n          \"text-destructive-foreground shadow-input-destructive-resting hover:shadow-input-destructive-hover focus-within:ring-destructive-border/15 focus-within:ring-4\",\n      },\n      size: {\n        default: \"h-14 rounded-2xl\",\n        sm: \"h-12 rounded-2xl\",\n        lg: \"h-16 rounded-2xl\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface FloatingLabelFieldProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\"> {\n  label: string;\n  error?: boolean;\n  helperText?: string;\n  size?: VariantProps<typeof floatingLabelFieldVariants>[\"size\"];\n  variant?: VariantProps<typeof floatingLabelFieldVariants>[\"variant\"];\n  startAdornment?: React.ReactNode;\n  endAdornment?: React.ReactNode;\n}\n\nconst FloatingLabelField = React.forwardRef<\n  HTMLInputElement,\n  FloatingLabelFieldProps\n>(\n  (\n    {\n      className,\n      variant,\n      size,\n      error,\n      helperText,\n      label,\n      startAdornment,\n      endAdornment,\n      ...props\n    },\n    ref\n  ) => {\n    const [focused, setFocused] = React.useState(false);\n    const [hasValue, setHasValue] = React.useState(\n      Boolean(props.value || props.defaultValue)\n    );\n    const isDisabled = props.disabled;\n\n    const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n      setFocused(true);\n      props.onFocus?.(e);\n    };\n\n    const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n      setFocused(false);\n      setHasValue(Boolean(e.target.value));\n      props.onBlur?.(e);\n    };\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setHasValue(Boolean(e.target.value));\n      props.onChange?.(e);\n    };\n\n    const isLabelFloating = focused || hasValue;\n\n    return (\n      <div>\n        <FieldPrimitive.Root\n          className={cn(\n            floatingLabelFieldVariants({\n              variant: error ? \"error\" : variant,\n              size,\n            }),\n            \"group relative items-end gap-0.5\",\n            isDisabled &&\n              \"bg-input-muted text-input-foreground cursor-not-allowed opacity-50\",\n            isDisabled && variant === \"default\" && \"bg-input-muted\",\n            startAdornment && \"pl-[5px]\",\n            endAdornment && \"pr-[5px]\",\n            className\n          )}\n        >\n          <FieldPrimitive.Label\n            htmlFor={props.id}\n            className={cn(\n              \"pointer-events-none absolute top-1/2 left-4 z-[10] -translate-y-1/2 text-sm transition-all duration-150 ease-in-out origin-left\",\n              startAdornment && \"left-0\",\n              // Floating state - position within border area\n              isLabelFloating &&\n                \"scale-80 -translate-y-[1.18rem] top-2 z-10 bg-input px-1\",\n              error ? \"text-destructive-foreground\" : \"text-muted-foreground\",\n              focused && !error && \"text-primary\"\n            )}\n          >\n            {label}\n          </FieldPrimitive.Label>\n          {startAdornment && (\n            <div className=\"flex h-full items-center justify-center [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n              {startAdornment}\n            </div>\n          )}\n          <div className=\"relative flex-1\">\n            <FieldPrimitive.Control\n              id={props.id}\n              className={cn(\n                \"h-14 w-full flex-1 rounded-2xl bg-transparent px-3 py-4 outline-none file:border-0 file:bg-transparent file:text-sm file:font-medium\",\n                // Override browser autofill styles without blocking borders\n                \"autofill:bg-transparent\",\n                \"autofill:[-webkit-text-fill-color:inherit]\",\n                \"autofill:[transition:background-color_9999s_ease-in-out_0s]\",\n                isDisabled &&\n                  \"bg-input-muted text-input-foreground cursor-not-allowed opacity-50\",\n                startAdornment ? \"rounded-l-none pl-0\" : \"pl-3\",\n                endAdornment ? \"rounded-r-none pr-0\" : \"pr-3\",\n                size === \"sm\" && \"h-12 py-3 text-sm\",\n                size === \"lg\" && \"h-16 py-5 text-base\"\n              )}\n              // Spread props first, then override with our handlers\n              // This ensures our focus/blur handlers take precedence over React Hook Form's\n              // allowing proper floating label state management\n              {...props}\n              ref={ref}\n              onFocus={handleFocus}\n              onBlur={handleBlur}\n              onChange={handleChange}\n            />\n          </div>\n          {endAdornment && (\n            <div className=\"flex h-full items-center justify-center [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n              {endAdornment}\n            </div>\n          )}\n        </FieldPrimitive.Root>\n        {helperText && (\n          <p\n            className={cn(\n              \"mt-1.5 text-xs\",\n              error ? \"text-destructive-foreground\" : \"text-muted-foreground\"\n            )}\n          >\n            {helperText}\n          </p>\n        )}\n      </div>\n    );\n  }\n);\n\nFloatingLabelField.displayName = \"FloatingLabelField\";\n\nexport { FloatingLabelField, floatingLabelFieldVariants };\n","\"use client\";\n\nimport * as React from \"react\";\nimport {\n  Controller,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n  FormProvider,\n  useFormContext,\n  useFormState,\n} from \"react-hook-form\";\n\nimport { Field as FieldPrimitive } from \"@base-ui-components/react\";\n\nimport { Label } from \"@/components/ui/label\";\nimport { cn } from \"@/lib/utils\";\n\nconst Form = FormProvider;\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName;\n};\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n);\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  );\n};\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext);\n  const itemContext = React.useContext(FormItemContext);\n  const { getFieldState } = useFormContext();\n  const formState = useFormState({ name: fieldContext.name });\n  const fieldState = getFieldState(fieldContext.name, formState);\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\");\n  }\n\n  const { id } = itemContext;\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  };\n};\n\ntype FormItemContextValue = {\n  id: string;\n};\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n);\n\nfunction FormItem({ className, ...props }: React.ComponentProps<\"div\">) {\n  const id = React.useId();\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <FieldPrimitive.Root\n        data-slot=\"form-item\"\n        className={cn(\"grid\", className)}\n        {...props}\n      />\n    </FormItemContext.Provider>\n  );\n}\n\nfunction FormLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof FieldPrimitive.Label>) {\n  const { error, formItemId } = useFormField();\n\n  return (\n    <Label\n      data-slot=\"form-label\"\n      data-error={!!error}\n      className={cn(\"data-[error=true]:text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  );\n}\n\nfunction FormControl({\n  children,\n  ...props\n}: React.ComponentProps<typeof FieldPrimitive.Control> & {\n  children: React.ReactElement<Record<string, unknown>>;\n}) {\n  const { error, formItemId, formDescriptionId, formMessageId } =\n    useFormField();\n\n  return (\n    <FieldPrimitive.Control\n      data-slot=\"form-control\"\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      render={children}\n      {...props}\n    />\n  );\n}\n\nfunction FormDescription({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { formDescriptionId } = useFormField();\n\n  return (\n    <p\n      data-slot=\"form-description\"\n      id={formDescriptionId}\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction FormMessage({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { error, formMessageId } = useFormField();\n  const body = error ? String(error?.message ?? \"\") : props.children;\n\n  if (!body) {\n    return null;\n  }\n\n  return (\n    <p\n      data-slot=\"form-message\"\n      id={formMessageId}\n      className={cn(\"text-destructive text-sm\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  );\n}\n\nexport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n  useFormField,\n};\n","import { cva } from \"class-variance-authority\";\n\nimport {\n  FloatingLabelField as BaseFloatingLabelField,\n  type FloatingLabelFieldProps as BaseFloatingLabelFieldProps,\n} from \"@/components/ui/floating-label-field\";\nimport { useFormField } from \"@/components/ui/form\";\nimport { cn } from \"@/lib/utils\";\n\nconst ulThemeFloatingLabelFieldVariants = cva(\n  [\n    // Layout & Spacing\n    \"mb-2\",\n\n    // Base Background & Colors\n    \"theme-universal:bg-input-bg\",\n    \"theme-universal:text-input-text\",\n\n    // Border Styling\n    \"theme-universal:border-(length:--ul-theme-border-input-border-weight)\",\n    \"theme-universal:border-input-border\",\n\n    // Border Radius\n    \"theme-universal:rounded-input\",\n\n    // Typography - Input Text\n    \"theme-universal:text-(length:--ul-theme-font-body-text-size)\",\n    \"theme-universal:font-body-text\",\n\n    // Placeholder Styling\n    \"theme-universal:placeholder:text-input-labels\",\n    \"theme-universal:[&_input]:placeholder:text-input-labels\",\n    \"theme-universal:placeholder:text-(length:--ul-theme-font-input-labels-size)\",\n    \"theme-universal:[&_input]:placeholder:text-(length:--ul-theme-font-input-labels-size)\",\n    \"theme-universal:placeholder:font-input-label\",\n    \"theme-universal:[&_input]:placeholder:font-input-label\",\n\n    // Floating Label Background\n    \"theme-universal:[&_label]:bg-input-bg\",\n\n    // Floating Label - Base Styling (applies to all labels)\n    \"theme-universal:[&_label]:text-input-labels\",\n    \"theme-universal:[&_label]:text-(length:--ul-theme-font-input-labels-size)\",\n    \"theme-universal:[&_label]:font-input-label\",\n  ],\n  {\n    variants: {\n      themeState: {\n        default: [\n          // Focus States - Default\n          \"theme-universal:focus-within:border-base-focus\",\n          \"theme-universal:focus-within:ring-0\",\n\n          // Focus Label States - Override label color when focused\n          \"theme-universal:focus-within:[&_label]:text-base-focus\",\n        ],\n        error: [\n          // Error States\n          \"theme-universal:text-error\",\n          \"theme-universal:border-error\",\n          \"theme-universal:focus-within:border-error\",\n          \"theme-universal:focus-within:ring-0\",\n\n          // Error Label States - Force override using color CSS property\n          \"theme-universal:[&_label]:text-error\",\n        ],\n      },\n    },\n    defaultVariants: {\n      themeState: \"default\",\n    },\n  }\n);\n\nexport interface ULThemeFloatingLabelFieldProps\n  extends BaseFloatingLabelFieldProps {\n  /**\n   * Additional wrapper class for form field container\n   */\n  wrapperClassName?: string;\n}\n\nfunction ULThemeFloatingLabelField({\n  className,\n  variant = \"default\",\n  size = \"default\",\n  wrapperClassName,\n  error,\n  ...props\n}: ULThemeFloatingLabelFieldProps) {\n  // Get the form field context for proper ID association\n  const { formItemId } = useFormField();\n\n  // Determine variant based on error prop\n  const effectiveVariant = error ? \"error\" : variant;\n\n  // Generate theme classes using CVA - automatically use error state when error prop is true\n  const themeOverrides = ulThemeFloatingLabelFieldVariants({\n    themeState: error ? \"error\" : \"default\",\n  });\n\n  return (\n    <div className={cn(\"w-full\", wrapperClassName)}>\n      <BaseFloatingLabelField\n        id={formItemId}\n        className={cn(className, themeOverrides)}\n        variant={effectiveVariant}\n        size={size}\n        error={error}\n        {...props}\n      />\n    </div>\n  );\n}\n\nULThemeFloatingLabelField.displayName = \"ULThemeFloatingLabelField\";\n\nexport { ULThemeFloatingLabelField };\n","import { AlertCircle } from \"lucide-react\";\n\nimport { FormMessage } from \"@/components/ui/form\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface ULThemeFormMessageProps {\n  /**\n   * SDK error message (takes precedence over form validation errors)\n   */\n  sdkError?: string;\n  /**\n   * Whether there is a form validation error\n   */\n  hasFormError?: boolean;\n  /**\n   * Whether to show the error icon\n   */\n  showIcon?: boolean;\n  /**\n   * Additional CSS classes\n   */\n  className?: string;\n}\n\nconst ULThemeFormMessage = ({\n  sdkError,\n  hasFormError,\n  showIcon = true,\n  className,\n}: ULThemeFormMessageProps) => {\n  // Don't render if no errors at all\n  if (!sdkError && !hasFormError) {\n    return null;\n  }\n\n  // Always render with consistent theming and icon for ANY error\n  return (\n    <div\n      className={cn(\n        \"flex mb-2 items-center text-sm font-medium theme-universal:text-error\",\n        className\n      )}\n      role=\"alert\"\n      aria-live=\"polite\"\n    >\n      {showIcon && <AlertCircle className=\"h-4 w-4 mr-1 flex-shrink-0\" />}\n      {sdkError ? (\n        <p className=\"text-destructive text-sm theme-universal:text-error\">\n          {sdkError}\n        </p>\n      ) : (\n        <FormMessage className=\"theme-universal:text-error\" />\n      )}\n    </div>\n  );\n};\n\nULThemeFormMessage.displayName = \"ULThemeFormMessage\";\n\nexport { ULThemeFormMessage };\n","import { Control, FieldValues, Path, RegisterOptions } from \"react-hook-form\";\n\nimport { ULThemeFloatingLabelField } from \"@/components/form/ULThemeFloatingLabelField\";\nimport { ULThemeFormMessage } from \"@/components/form/ULThemeFormMessage\";\nimport { FormField, FormItem } from \"@/components/ui/form\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface CaptchaProps<T extends FieldValues = FieldValues> {\n  label: string;\n  imageUrl: string;\n  imageAltText: string;\n  name: Path<T>;\n  control: Control<T>;\n  rules?: RegisterOptions<T>;\n  sdkError?: string;\n  className?: string;\n}\n\nconst Captcha = <T extends FieldValues = FieldValues>({\n  name,\n  control,\n  rules,\n  label,\n  imageUrl,\n  imageAltText,\n  sdkError,\n  className,\n}: CaptchaProps<T>) => {\n  // Container styles with theme\n  const containerStyles = cn(\"space-y-2\", className);\n\n  // Image container styles with theme\n  const imageContainerStyles = cn(\n    \"flex justify-center p-8 rounded\",\n    \"theme-universal:bg-input-bg\",\n    \"theme-universal:border\",\n    \"theme-universal:border-input-border\",\n    \"theme-universal:rounded-input\"\n  );\n\n  if (!imageUrl) {\n    return null;\n  }\n\n  return (\n    <div className={containerStyles}>\n      <div className={imageContainerStyles}>\n        <img src={imageUrl} alt={imageAltText} className=\"object-contain\" />\n      </div>\n      <FormField\n        control={control}\n        name={name}\n        rules={rules}\n        render={({ field, fieldState }) => (\n          <FormItem>\n            <ULThemeFloatingLabelField\n              {...field}\n              label={label}\n              type=\"text\"\n              autoComplete=\"off\"\n              error={!!fieldState.error || !!sdkError}\n            />\n            <ULThemeFormMessage\n              className=\"mt-1\"\n              sdkError={sdkError}\n              hasFormError={!!fieldState.error}\n            />\n          </FormItem>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default Captcha;\n","import * as React from \"react\";\n\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst alertVariants = cva(\n  \"shadow-input-hover bg-input relative grid w-full grid-cols-[0_1fr] items-start gap-y-0.5 overflow-clip rounded-3xl p-3 text-sm has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] has-[>svg]:gap-x-3 [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"text-foreground border-b-2 border-transparent\",\n        info: \"text-info-foreground [&>svg]:text-info-foreground\",\n        success: \"text-success-foreground [&>svg]:text-success-foreground\",\n        warning: \"text-warning-foreground [&>svg]:text-warning-foreground\",\n        destructive:\n          \"text-destructive-foreground [&>svg]:text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 flex h-auto min-h-4 leading-4.5 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AlertAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      className={cn(\n        \"absolute top-2 right-2 flex items-center space-x-4\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Alert, AlertAction, AlertDescription, AlertTitle };\n","import * as React from \"react\";\n\nimport { Alert, AlertTitle } from \"@/components/ui/alert\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface ULThemeErrorProps extends React.ComponentProps<\"div\"> {\n  variant?: \"destructive\";\n}\n\nfunction ULThemeAlert({\n  variant = \"destructive\",\n  className,\n  ...props\n}: ULThemeErrorProps) {\n  // Variant-specific theme overrides for Auth0 styling\n  const variantThemeOverrides = {\n    destructive: cn(\n      \"p-4\",\n      \"theme-universal:bg-error\", //background-color\n      \"theme-universal:text-(--ul-theme-color-primary-button-label)\", //text-color\n      \"theme-universal:rounded-button\", //border-radius\n      \"theme-universal:font-body\", //font-weight\n      \"theme-universal:text-(length:--ul-theme-font-body-text-size)\" //font-size\n    ),\n  };\n\n  const themeClasses = cn(variant && variantThemeOverrides[variant]);\n\n  return (\n    <Alert\n      variant={variant}\n      className={cn(className, themeClasses)}\n      {...props}\n    />\n  );\n}\n\nfunction ULThemeAlertTitle({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  // Theme overrides for error title styling\n  const themeClasses = cn(\n    \"theme-universal:text-(--ul-theme-color-primary-button-label)\", //text-color\n    \"theme-universal:font-body\", //font-weight\n    \"theme-universal:text-(length:--ul-theme-font-body-text-size)\" //font-size\n  );\n\n  return <AlertTitle className={cn(className, themeClasses)} {...props} />;\n}\n\nexport { ULThemeAlert, ULThemeAlertTitle };\nexport default ULThemeAlert;\n","import * as React from \"react\";\n\nimport { cva, VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst linkVariants = cva(\n  \"focus-within:ring-ring inline-flex items-center gap-2 rounded-md py-0.5 underline-offset-4 transition-colors focus:ring-3 focus-visible:outline-hidden\",\n  {\n    variants: {\n      variant: {\n        destructive: \"text-destructive hover:text-destructive/90\",\n        muted: \"text-muted hover:text-muted/80\",\n        primary: \"text-primary hover:text-primary/90\",\n      },\n      underline: {\n        none: \"no-underline\",\n        hover: \"no-underline hover:underline\",\n        always: \"underline\",\n      },\n    },\n    defaultVariants: {\n      variant: \"primary\",\n      underline: \"always\",\n    },\n  }\n);\n\nexport interface LinkProps\n  extends React.AnchorHTMLAttributes<HTMLAnchorElement>,\n    VariantProps<typeof linkVariants> {\n  /**\n   * Optional ref for the link element.\n   */\n  ref?: React.Ref<HTMLAnchorElement>;\n}\n\nfunction Link({\n  className,\n  children,\n  variant,\n  underline,\n  ref,\n  ...props\n}: LinkProps) {\n  return (\n    <a\n      ref={ref}\n      className={cn(linkVariants({ variant, underline }), className)}\n      {...props}\n    >\n      {children}\n    </a>\n  );\n}\n\nexport { Link };\n","/**\n *  Extract and return the Token CSS Variable data from the token string\n */\nexport const extractTokenValue = (varName: string): string => {\n  return getComputedStyle(document.documentElement)\n    .getPropertyValue(varName)\n    .trim()\n    .replace(/^\"(.*)\"$/, \"$1\"); // Remove quotes\n};\n","import * as React from \"react\";\n\nimport { Link, type LinkProps } from \"@/components/ui/link\";\nimport { cn } from \"@/lib/utils\";\nimport { extractTokenValue } from \"@/utils/helpers/tokenUtils\";\n\nexport interface ULThemeLinkProps extends LinkProps {\n  /**\n   * The content of the link element.\n   */\n  children: React.ReactNode;\n  /**\n   * Additional class names for custom styling.\n   */\n  className?: string;\n  /**\n   * Optional flag to disable the link.\n   */\n  disabled?: boolean;\n  /**\n   * Optional ref for the link element.\n   */\n  ref?: React.Ref<HTMLAnchorElement>;\n}\n\nconst ULThemeLink = ({\n  children,\n  className,\n  disabled = false,\n  ref,\n  ...props\n}: ULThemeLinkProps) => {\n  // Base component styles\n  const baseStyles =\n    \"text-link-focus text-(length:--ul-theme-font-links-size) font-(weight:--ul-theme-font-links-weight) focus:rounded-(--ul-theme-border-links-border-radius) hover:text-link-focus/80\";\n\n  // Disabled state styles\n  const disabledStyles = disabled\n    ? \"pointer-events-none text-muted cursor-not-allowed\"\n    : \"\";\n\n  // UL theme overrides\n  const variantThemeOverrides =\n    \"theme-universal:focus:outline-none theme-universal:focus:ring-4 theme-universal:focus:ring-base-focus/15 theme-universal:focus:bg-base-focus/15\"; // focus base color\n\n  // Using extractTokenValue utility to extract the link style variant type from the CSS variable\n  const linkStyleValue =\n    extractTokenValue(\"--ul-theme-font-links-style\") === \"normal\"\n      ? \"none\"\n      : \"always\";\n\n  return (\n    <Link\n      ref={ref}\n      className={cn(\n        baseStyles,\n        disabledStyles,\n        variantThemeOverrides,\n        className\n      )}\n      underline={linkStyleValue}\n      aria-disabled={disabled}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n\nexport default ULThemeLink;\n","\"use client\";\n\nimport * as React from \"react\";\n\nimport { Tooltip as TooltipPrimitive } from \"@base-ui-components/react/tooltip\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction TooltipProvider({\n  delay: delayDuration = 0,\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Provider>) {\n  return (\n    <TooltipPrimitive.Provider\n      data-slot=\"tooltip-provider\"\n      delay={delayDuration}\n      {...props}\n    />\n  );\n}\n\nfunction Tooltip({\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Root>) {\n  return (\n    <TooltipProvider>\n      <TooltipPrimitive.Root data-slot=\"tooltip\" {...props} />\n    </TooltipProvider>\n  );\n}\n\nfunction TooltipTrigger({\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Trigger>) {\n  return <TooltipPrimitive.Trigger data-slot=\"tooltip-trigger\" {...props} />;\n}\n\nfunction TooltipContent({\n  className,\n  arrow,\n  side,\n  sideOffset = 8,\n  children,\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Positioner> &\n  React.ComponentProps<typeof TooltipPrimitive.Popup> & { arrow?: boolean }) {\n  return (\n    <TooltipPrimitive.Portal>\n      <TooltipPrimitive.Positioner side={side} sideOffset={sideOffset}>\n        <TooltipPrimitive.Popup\n          data-slot=\"tooltip-content\"\n          className={cn(\n            \"bg-popover text-popover-foreground data-open:animate-in data-open:fade-in-0 data-open:zoom-in-95 data-closed:animate-out data-closed:fade-out-0 data-closed:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 shadow-bevel-lg z-50 w-fit origin-(--radix-tooltip-content-transform-origin) rounded-xl px-2 py-1 text-sm text-balance\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n          {arrow ? (\n            <TooltipPrimitive.Arrow className=\"bg-primary fill-primary z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]\" />\n          ) : null}\n        </TooltipPrimitive.Popup>\n      </TooltipPrimitive.Positioner>\n    </TooltipPrimitive.Portal>\n  );\n}\n\nexport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger };\n","import { useState } from \"react\";\n\nimport { Eye, EyeOff } from \"lucide-react\";\n\nimport {\n  ULThemeFloatingLabelField,\n  type ULThemeFloatingLabelFieldProps,\n} from \"@/components/form/ULThemeFloatingLabelField\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface ULThemePasswordFieldProps\n  extends Omit<ULThemeFloatingLabelFieldProps, \"type\" | \"endAdornment\"> {\n  onVisibilityToggle?: (isVisible: boolean) => void;\n  buttonClassName?: string;\n}\n\nexport const ULThemePasswordField = ({\n  onVisibilityToggle,\n  buttonClassName,\n  ...props\n}: ULThemePasswordFieldProps) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleToggle = () => {\n    const newState = !showPassword;\n    setShowPassword(newState);\n    onVisibilityToggle?.(newState);\n  };\n\n  const passwordButton = (\n    <Tooltip>\n      <TooltipTrigger\n        type=\"button\"\n        onClick={handleToggle}\n        className={cn(\n          // Layout & Positioning\n          \"cursor-pointer h-full w-full min-w-[44px] mr-[-5px]\",\n\n          // Border Radius - matches input field\n          \"theme-universal:rounded-r-input theme-universal:rounded-l-none\",\n\n          // Colors\n          \"theme-universal:text-input-labels\",\n          \"theme-universal:hover:text-input-text\",\n\n          // Transitions\n          \"transition-colors\",\n\n          // Focus States\n          \"theme-universal:focus:bg-base-focus/15 theme-universal:focus-visible:ring-0 theme-universal:focus-visible:ring-offset-0\",\n\n          // Layout\n          \"flex items-center justify-center\",\n\n          // Button-like styles\n          \"bg-transparent border-none outline-none\",\n\n          buttonClassName\n        )}\n        aria-label={showPassword ? \"Hide password\" : \"Show password\"}\n      >\n        {showPassword ? <EyeOff /> : <Eye />}\n      </TooltipTrigger>\n      <TooltipContent\n        sideOffset={0}\n        className=\"bg-black text-white -mb-2 ml-0.5\"\n      >\n        {showPassword ? \"Hide password\" : \"Show password\"}\n      </TooltipContent>\n    </Tooltip>\n  );\n\n  return (\n    <ULThemeFloatingLabelField\n      {...props}\n      type={showPassword ? \"text\" : \"password\"}\n      endAdornment={passwordButton}\n    />\n  );\n};\n\nULThemePasswordField.displayName = \"ULThemePasswordField\";\n","\"use client\";\n\nimport { useRender } from \"@base-ui-components/react/use-render\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"focus-visible:ring-ring aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive theme-default:active:scale-[0.99] relative box-border inline-flex shrink-0 items-center justify-center gap-2 overflow-hidden text-sm font-medium whitespace-nowrap transition-all duration-150 ease-in-out outline-none focus-visible:ring-4 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n  {\n    variants: {\n      variant: {\n        primary:\n          \"shadow-button-resting hover:shadow-button-hover hover:border-primary/50 border-primary bg-primary text-primary-foreground hover:bg-primary/90 theme-default:before:from-primary-foreground/0 theme-default:before:to-primary-foreground/15 theme-default:before:absolute theme-default:before:top-0 theme-default:before:left-0 theme-default:before:block theme-default:before:h-full theme-default:before:w-full theme-default:before:bg-gradient-to-t theme-default:before:content-[''] border\",\n        outline:\n          \"dark:bg-muted/50 hover:text-accent-foreground shadow-button-outlined-resting hover:shadow-button-outlined-hover hover:border-accent bg-background hover:bg-muted text-primary border-primary/35 theme-default:before:from-primary/5 theme-default:before:to-primary/0 theme-default:before:absolute theme-default:before:top-0 theme-default:before:left-0 theme-default:before:block theme-default:before:h-full theme-default:before:w-full theme-default:before:bg-gradient-to-t theme-default:before:content-[''] border\",\n        ghost: \"hover:bg-muted text-primary bg-transparent\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90 shadow-button-destructive-resting hover:shadow-button-destructive-hover border-destructive-border/25 hover:border-destructive-border/50 theme-default:before:to-primary-foreground/50 theme-default:before:absolute theme-default:before:top-0 theme-default:before:left-0 theme-default:before:block theme-default:before:h-full theme-default:before:w-full theme-default:before:bg-gradient-to-t theme-default:before:content-[''] theme-default:border\",\n        link: \"text-foreground underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 rounded-2xl px-4 py-2.5 has-[>svg]:px-3\",\n        xs: \"h-7 rounded-md px-2 py-1.5 text-xs has-[>svg]:px-2\",\n        sm: \"h-8 gap-1.5 rounded-xl px-3 py-2 text-xs has-[>svg]:px-2.5\",\n        lg: \"h-12 rounded-3xl px-6 py-3 text-base has-[>svg]:px-4\",\n        icon: \"size-7 rounded-xl\",\n      },\n    },\n    defaultVariants: {\n      variant: \"primary\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends useRender.ComponentProps<\"button\">,\n    VariantProps<typeof buttonVariants> {}\n\nfunction Button({\n  className,\n  variant,\n  size,\n  render = <button />,\n  ...props\n}: ButtonProps) {\n  const defaultProps: useRender.ElementProps<\"button\"> = {\n    className: cn(buttonVariants({ variant, size }), className),\n  };\n\n  return useRender({\n    render,\n    props: { ...defaultProps, ...props },\n  });\n}\n\nexport { Button, buttonVariants };\n","import { Button, type ButtonProps } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\n\nexport type ULThemePrimaryButtonProps = ButtonProps;\n\nexport function ULThemePrimaryButton({\n  variant = \"primary\",\n  size = \"default\",\n  className,\n  ...props\n}: ULThemePrimaryButtonProps) {\n  // Variant-specific theme overrides for colors and states\n  const variantThemeOverrides = {\n    primary: cn(\n      \"p-6 border-0\",\n      \"cursor-pointer\",\n      \"theme-universal:bg-primary-button\",\n      \"theme-universal:text-(--ul-theme-color-primary-button-label)\", //text-color\n      \"theme-universal:hover:shadow-[var(--button-hover-shadow)]\",\n      \"theme-universal:focus:outline-none theme-universal:focus:ring-4 theme-universal:focus:ring-base-focus/15\",\n      \"theme-universal:disabled:bg-primary-button/70\",\n      \"theme-universal:disabled:border-primary-button/70\",\n      \"theme-universal:disabled:cursor-not-allowed\"\n    ),\n    secondary: \"\", // Add secondary overrides if needed\n    destructive: \"\", // Add destructive overrides if needed\n    outline: \"\", // Add outline overrides if needed\n    ghost: \"\", // Add ghost overrides if needed\n    link: \"\", // Add link overrides if needed\n  };\n\n  // Size-specific theme overrides for border radius and typography\n  const sizeThemeOverrides = {\n    default: cn(\n      \"theme-universal:rounded-button\",\n      \"theme-universal:font-button\", //font-weight\n      \"theme-universal:text-(length:--ul-theme-font-buttons-text-size)\" //font-size\n    ),\n    xs: cn(\n      \"theme-universal:rounded-button\",\n      \"theme-universal:font-button\",\n      \"theme-universal:text-(length:--ul-theme-font-buttons-text-size)\"\n    ),\n    sm: cn(\n      \"theme-universal:rounded-button\",\n      \"theme-universal:font-button\",\n      \"theme-universal:text-(length:--ul-theme-font-buttons-text-size)\"\n    ),\n    lg: cn(\n      \"theme-universal:rounded-button\",\n      \"theme-universal:font-button\",\n      \"theme-universal:text-(length:--ul-theme-font-buttons-text-size)\"\n    ),\n    icon: cn(\"theme-universal:rounded-button\"),\n  };\n\n  // Combine all theme classes with proper type safety\n  const themeClasses = cn(\n    variant && variantThemeOverrides[variant],\n    size && sizeThemeOverrides[size]\n  );\n\n  return (\n    <Button\n      variant={variant}\n      size={size}\n      className={cn(className, themeClasses)}\n      {...props}\n    />\n  );\n}\n","/**\n * Represents a generic SDK error object.\n */\nexport interface SdkError {\n  code?: string;\n  message: string;\n  field?: string;\n  rules?: Array<{ message: string; format?: string[] }>; // Password complexity rules\n  [key: string]: unknown; // Allow other properties with unknown type\n}\n\n/**\n * Finds and returns the error message for a specific field from a list of SDK errors.\n * @param fieldName The name of the field to find an error for.\n * @param errors An array of SDK error objects.\n * @returns The error message string if found, otherwise undefined.\n */\nexport const getFieldError = (\n  fieldName: string,\n  errors: Array<{ field?: string; message: string }>\n): string | undefined => {\n  if (!Array.isArray(errors)) {\n    return undefined;\n  }\n  const error = errors.find((err) => err.field === fieldName);\n  return error?.message;\n};\n","import type { IdentifierType } from \"@auth0/auth0-acul-js/types\";\n\ninterface IdentifierDetails {\n  label: string;\n  type: string; // HTML input type\n  autoComplete: IdentifierType | string; // Prefer IdentifierType when applicable\n}\n\n// Specific keys for placeholder texts for better type safety in the config map\ntype PlaceholderKey =\n  | \"usernameOrEmailPlaceholder\"\n  | \"emailPlaceholder\"\n  | \"phonePlaceholder\"\n  | \"usernameOnlyPlaceholder\"\n  | \"phoneOrEmailPlaceholder\"\n  | \"phoneOrUsernamePlaceholder\"\n  | \"phoneOrUsernameOrEmailPlaceholder\";\n\ninterface IdentifierConfig {\n  labelKey: PlaceholderKey;\n  labelFallback: string;\n  type?: string; // HTML input type\n  autoComplete?: IdentifierType | string; // Prefer IdentifierType when applicable\n}\n\n/**\n * Helper function to create a descriptive key for identifier combinations\n */\nconst createIdentifierKey = (\n  hasEmail: boolean,\n  hasPhone: boolean,\n  hasUsername: boolean\n): string => {\n  const identifiers = [];\n  if (hasEmail) identifiers.push(\"email\");\n  if (hasPhone) identifiers.push(\"phone\");\n  if (hasUsername) identifiers.push(\"username\");\n  return identifiers.join(\"-\");\n};\n\n/**\n * Determines the appropriate label, input type, and autocomplete attribute\n * for an identifier field based on active connection attributes and screen texts.\n *\n * @param connectionAttributes - The connection attributes from the transaction object.\n * @param screenTexts - The screen.texts object from Auth0 SDK instance.\n * @returns An object containing the label, type, and autoComplete string for the identifier field.\n */\nexport const getIdentifierDetails = (\n  connectionAttributes?: IdentifierType[],\n  screenTexts?: Record<string, string> | null // Auth0 screen.texts object\n): IdentifierDetails => {\n  // Initialize with the most common / general defaults\n  let finalLabel =\n    screenTexts?.usernameOrEmailPlaceholder || \"Username or Email Address\";\n  let finalType = \"text\";\n  let finalAutoComplete: IdentifierType | string = \"username\";\n\n  if (connectionAttributes) {\n    const hasEmail = connectionAttributes.includes(\"email\");\n    const hasPhone = connectionAttributes.includes(\"phone\");\n    const hasUsername = connectionAttributes.includes(\"username\");\n\n    // Create a descriptive key based on active identifiers\n    const identifierKey = createIdentifierKey(hasEmail, hasPhone, hasUsername);\n\n    const configMap: Record<string, IdentifierConfig> = {\n      email: {\n        labelKey: \"emailPlaceholder\",\n        labelFallback: screenTexts?.emailPlaceholder || \"Email Address\",\n        type: \"email\",\n        autoComplete: \"email\",\n      },\n      phone: {\n        labelKey: \"phonePlaceholder\",\n        labelFallback: screenTexts?.phonePlaceholder || \"Phone Number\",\n        type: \"tel\",\n        autoComplete: \"tel\",\n      },\n      username: {\n        labelKey: \"usernameOnlyPlaceholder\",\n        labelFallback: screenTexts?.usernameOnlyPlaceholder || \"Username\",\n        autoComplete: \"username\",\n      },\n      \"email-phone\": {\n        labelKey: \"phoneOrEmailPlaceholder\",\n        labelFallback:\n          screenTexts?.phoneOrEmailPlaceholder ||\n          \"Phone Number or Email Address\",\n        autoComplete: \"username\",\n      },\n      \"email-username\": {\n        labelKey: \"usernameOrEmailPlaceholder\",\n        labelFallback:\n          screenTexts?.usernameOrEmailPlaceholder ||\n          \"Username or Email Address\",\n        autoComplete: \"username\",\n      },\n      \"phone-username\": {\n        labelKey: \"phoneOrUsernamePlaceholder\",\n        labelFallback:\n          screenTexts?.phoneOrUsernamePlaceholder || \"Phone Number or Username\",\n        autoComplete: \"username\",\n      },\n      \"email-phone-username\": {\n        labelKey: \"phoneOrUsernameOrEmailPlaceholder\",\n        labelFallback:\n          screenTexts?.phoneOrUsernameOrEmailPlaceholder ||\n          \"Phone, Username, or Email\",\n        autoComplete: \"username\",\n      },\n    };\n\n    const config = configMap[identifierKey];\n\n    if (config) {\n      finalLabel = config.labelFallback;\n      if (config.type) {\n        finalType = config.type;\n      }\n      if (config.autoComplete) {\n        finalAutoComplete = config.autoComplete;\n      }\n    }\n  }\n\n  // Append asterisk for required field indication, common pattern\n  if (!finalLabel.endsWith(\"*\")) {\n    finalLabel += \"*\";\n  }\n\n  return {\n    label: finalLabel,\n    type: finalType,\n    autoComplete: finalAutoComplete,\n  };\n};\n","/**\n * Takes a URL (absolute or relative) and rebases it to the current window's origin,\n * preserving the path and query parameters.\n */\nexport const rebaseLinkToCurrentOrigin = (\n  originalLink: string | undefined | null\n): string | undefined | null => {\n  if (typeof window === \"undefined\" || !originalLink) {\n    return originalLink;\n  }\n\n  const targetOrigin = window.location.origin;\n\n  try {\n    // Handle absolute URLs\n    if (\n      originalLink.startsWith(\"http://\") ||\n      originalLink.startsWith(\"https://\")\n    ) {\n      const url = new URL(originalLink);\n      return targetOrigin + url.pathname + url.search + url.hash;\n    }\n\n    // Handle root-relative URLs (starting with /)\n    if (originalLink.startsWith(\"/\")) {\n      const url = new URL(originalLink, targetOrigin);\n      return targetOrigin + url.pathname + url.search + url.hash;\n    }\n\n    // Handle relative URLs (no leading slash)\n    // Treat as relative to current path\n    const url = new URL(originalLink, window.location.href);\n    return targetOrigin + url.pathname + url.search + url.hash;\n  } catch (error) {\n    console.error(\"Failed to rebase URL:\", error, { originalLink });\n    return originalLink;\n  }\n};\n","/**\n * In development mode, logs the intended action.\n */\nexport const executeSafely = <R>(\n  actionDescription: string,\n  actionFn: () => R\n): R | void => {\n  // Always attempt the action, but log the intention in development.\n  if (process.env.NODE_ENV === \"development\") {\n    console.log(`[DEV] ${actionDescription}`);\n  }\n\n  try {\n    const result = actionFn();\n\n    // If the action returns a Promise, attach a rejection handler so async\n    // errors are surfaced to the console during development.\n    if (\n      result &&\n      typeof (result as unknown as Promise<unknown>).then === \"function\"\n    ) {\n      (result as unknown as Promise<unknown>).catch((err: unknown) => {\n        console.error(`Async error during action: ${actionDescription}`, err);\n      });\n    }\n\n    return result;\n  } catch (err) {\n    // Surface errors to the console so developers can see failures.\n    // Do not rethrow to keep calling sites simple; they can handle async errors.\n\n    console.error(`Error during action: ${actionDescription}`, err);\n    return undefined;\n  }\n};\n","import { useMemo } from \"react\";\n\nimport LoginInstance from \"@auth0/auth0-acul-js/login\";\nimport type { ScreenMembersOnLogin } from \"@auth0/auth0-acul-js/types\";\n\nimport { executeSafely } from \"@/utils/helpers/executeSafely\";\n\nexport const useLoginManager = () => {\n  const loginInstance = useMemo(() => new LoginInstance(), []);\n\n  const { transaction, screen } = loginInstance;\n  const { isSignupEnabled, isForgotPasswordEnabled, passwordPolicy } =\n    transaction;\n\n  const { signupLink, resetPasswordLink, texts, captchaImage } = screen;\n\n  const handleLogin = async (\n    username: string,\n    password: string,\n    captcha?: string\n  ): Promise<void> => {\n    const options: { username: string; password: string; captcha?: string } = {\n      username: username?.trim() || \"\",\n      password: password || \"\",\n    };\n\n    if (screen.isCaptchaAvailable && captcha?.trim()) {\n      options.captcha = captcha.trim();\n    }\n\n    executeSafely(`Login with options: ${JSON.stringify(options)}`, () =>\n      loginInstance.login(options)\n    );\n  };\n\n  const handleFederatedLogin = async (connectionName: string) => {\n    executeSafely(`Federated login with connection: ${connectionName}`, () =>\n      loginInstance.federatedLogin({ connection: connectionName })\n    );\n  };\n\n  return {\n    loginInstance,\n    handleLogin,\n    handleFederatedLogin,\n    texts: (texts || {}) as ScreenMembersOnLogin[\"texts\"],\n    isSignupEnabled: isSignupEnabled === true,\n    isForgotPasswordEnabled: isForgotPasswordEnabled === true,\n    isCaptchaAvailable: screen.isCaptchaAvailable === true,\n    errors: loginInstance.getErrors(),\n    captchaImage,\n    signupLink,\n    resetPasswordLink,\n    allowedIdentifiers: transaction.allowedIdentifiers || [],\n    passwordPolicy,\n  };\n};\n","import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nimport type { Error } from \"@auth0/auth0-acul-js/types\";\n\nimport Captcha from \"@/components/Captcha\";\nimport { ULThemeFloatingLabelField } from \"@/components/form/ULThemeFloatingLabelField\";\nimport { ULThemeFormMessage } from \"@/components/form/ULThemeFormMessage\";\nimport { Form, FormField, FormItem } from \"@/components/ui/form\";\nimport { ULThemeAlert, ULThemeAlertTitle } from \"@/components/ULThemeError\";\nimport ULThemeLink from \"@/components/ULThemeLink\";\nimport { ULThemePasswordField } from \"@/components/ULThemePasswordField\";\nimport { ULThemePrimaryButton } from \"@/components/ULThemePrimaryButton\";\nimport { getFieldError } from \"@/utils/helpers/errorUtils\";\nimport { getIdentifierDetails } from \"@/utils/helpers/identifierUtils\";\nimport { rebaseLinkToCurrentOrigin } from \"@/utils/helpers/urlUtils\";\n\nimport { useLoginManager } from \"../hooks/useLoginManager\";\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n  captcha?: string;\n}\n\ninterface LoginFormProps {\n  useNativeMarkup?: boolean;\n  disableCaptcha?: boolean;\n}\n\nfunction LoginForm({\n  useNativeMarkup = false,\n  disableCaptcha = false,\n}: LoginFormProps) {\n  const {\n    handleLogin,\n    errors,\n    isCaptchaAvailable,\n    captchaImage,\n    resetPasswordLink,\n    isForgotPasswordEnabled,\n    texts,\n    allowedIdentifiers,\n    passwordPolicy,\n  } = useLoginManager();\n  const form = useForm<LoginFormData>({\n    defaultValues: {\n      username: \"\",\n      password: \"\",\n      captcha: \"\",\n    },\n  });\n\n  const [showPassword, setShowPassword] = useState(false);\n  const togglePassword = () => setShowPassword((s) => !s);\n\n  const {\n    formState: { isSubmitting },\n  } = form;\n\n  // Handle text fallbacks in component\n  const buttonText = texts?.buttonText || \"Continue\";\n  const captchaLabel = texts?.captchaCodePlaceholder?.concat(\"*\") || \"CAPTCHA*\";\n  const captchaImageAlt = \"CAPTCHA challenge\"; // Default fallback\n  const forgotPasswordText = texts?.forgotPasswordText || \"Forgot Password?\";\n\n  // Use getIdentifierDetails pattern for username label\n  const {\n    label: usernameLabel,\n    type: usernameType,\n    autoComplete: usernameAutoComplete,\n  } = getIdentifierDetails(allowedIdentifiers, texts);\n\n  const passwordLabel = texts?.passwordPlaceholder?.concat(\"*\") || \"Password*\";\n\n  // Password visibility toggle\n  const generalErrors =\n    errors?.filter((error: Error) => !error.field || error.field === null) ||\n    [];\n\n  const usernameSDKError =\n    getFieldError(\"username\", errors) || getFieldError(\"email\", errors);\n\n  const passwordSDKError = getFieldError(\"password\", errors);\n  const captchaSDKError = getFieldError(\"captcha\", errors);\n\n  // Proper submit handler with form data\n  const onSubmit = async (data: LoginFormData) => {\n    await handleLogin(data.username, data.password, data.captcha);\n  };\n\n  const localizedResetPasswordLink =\n    resetPasswordLink && rebaseLinkToCurrentOrigin(resetPasswordLink);\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-2\">\n        {/* General alerts at the top */}\n        {generalErrors.length > 0 && (\n          <div className=\"space-y-3 mb-4\">\n            {generalErrors.map((error: Error, index: number) => (\n              <ULThemeAlert key={index} variant=\"destructive\">\n                <ULThemeAlertTitle>{error.message}</ULThemeAlertTitle>\n              </ULThemeAlert>\n            ))}\n          </div>\n        )}\n\n        {/* Username/Email input field */}\n        <FormField\n          control={form.control}\n          name=\"username\"\n          rules={{\n            required: \"This field is required\",\n            maxLength: {\n              value: 100,\n              message: \"Maximum 100 characters allowed\",\n            },\n          }}\n          render={({ field, fieldState }) => (\n            <FormItem>\n              {useNativeMarkup ? (\n                <>\n                  <label htmlFor={field.name} className=\"form-label label-text\">\n                    {usernameLabel}\n                  </label>\n                  <input\n                    {...field}\n                    id={field.name}\n                    type={usernameType}\n                    autoComplete={usernameAutoComplete}\n                    className=\"form-input input-field w-full\"\n                    placeholder={usernameLabel}\n                  />\n                </>\n              ) : (\n                <ULThemeFloatingLabelField\n                  {...field}\n                  label={usernameLabel}\n                  type={usernameType}\n                  autoFocus={true}\n                  autoComplete={usernameAutoComplete}\n                  error={!!fieldState.error || !!usernameSDKError}\n                />\n              )}\n              <ULThemeFormMessage\n                sdkError={usernameSDKError}\n                hasFormError={!!fieldState.error}\n              />\n            </FormItem>\n          )}\n        />\n\n        {/* Password input field */}\n        <FormField\n          control={form.control}\n          name=\"password\"\n          rules={{\n            required: \"Password is required\",\n            maxLength: {\n              value: 200,\n              message: \"Maximum 200 characters allowed\",\n            },\n            minLength: passwordPolicy?.minLength\n              ? {\n                  value: passwordPolicy.minLength,\n                  message: `Password must be at least ${passwordPolicy.minLength} characters`,\n                }\n              : undefined,\n          }}\n          render={({ field, fieldState }) => (\n            <FormItem>\n              {useNativeMarkup ? (\n                <>\n                  <label htmlFor={field.name} className=\"form-label label-text\">\n                    {passwordLabel}\n                  </label>\n                  <div className=\"password-wrapper relative\">\n                    <input\n                      {...field}\n                      id={field.name}\n                      type={showPassword ? \"text\" : \"password\"}\n                      autoComplete=\"current-password\"\n                      className=\"form-input input-field w-full pr-10\"\n                      placeholder={passwordLabel}\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={togglePassword}\n                      className=\"toggle-password absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400\"\n                      aria-label={\n                        showPassword ? \"Hide password\" : \"Show password\"\n                      }\n                    >\n                      <i className=\"fa-regular fa-eye\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                </>\n              ) : (\n                <ULThemePasswordField\n                  {...field}\n                  label={passwordLabel}\n                  autoComplete=\"current-password\"\n                  error={!!fieldState.error || !!passwordSDKError}\n                />\n              )}\n              <ULThemeFormMessage\n                sdkError={passwordSDKError}\n                hasFormError={!!fieldState.error}\n              />\n            </FormItem>\n          )}\n        />\n\n        {/* CAPTCHA Box */}\n        {/* Render CAPTCHA only if the SDK indicates availability and it's not disabled via prop */}\n        {isCaptchaAvailable && !disableCaptcha && (\n          <Captcha\n            control={form.control}\n            name=\"captcha\"\n            label={captchaLabel}\n            imageUrl={captchaImage || \"\"}\n            imageAltText={captchaImageAlt}\n            sdkError={captchaSDKError}\n            rules={{\n              required: \"Please complete the CAPTCHA\",\n              maxLength: {\n                value: 15,\n                message: \"CAPTCHA too long\",\n              },\n            }}\n          />\n        )}\n\n        {/* Forgot Password link */}\n        <div className=\"text-left\">\n          {isForgotPasswordEnabled && localizedResetPasswordLink && (\n            <ULThemeLink href={localizedResetPasswordLink}>\n              {forgotPasswordText}\n            </ULThemeLink>\n          )}\n        </div>\n\n        {/* Submit button */}\n        {useNativeMarkup ? (\n          <button\n            type=\"submit\"\n            className=\"login-button w-full\"\n            disabled={isSubmitting}\n          >\n            {buttonText}\n          </button>\n        ) : (\n          <ULThemePrimaryButton\n            type=\"submit\"\n            className=\"w-full\"\n            disabled={isSubmitting}\n          >\n            {buttonText}\n          </ULThemePrimaryButton>\n        )}\n      </form>\n    </Form>\n  );\n}\n\nexport default LoginForm;\n","import { useEffect } from \"react\";\n\nimport ULThemePageLayout from \"@/components/ULThemePageLayout\";\n\nimport LoginForm from \"./components/LoginForm\";\n\nfunction LoginScreen() {\n  useEffect(() => {\n    document.title = \"Login\";\n  }, []);\n\n  // The detailed form and behavior are provided by `LoginForm` component.\n\n  return (\n    <ULThemePageLayout className=\"theme-universal\">\n      <div className=\"login-page min-h-screen flex flex-col z-30\">\n        {/* Header and hero are supplied by the UL theme wrapper; screens should only render screen-level containers */}\n\n        {/* Centered card */}\n        <main className=\"container mx-auto px-6 -mt-16 mb-16 z-30 max-w-7xl\">\n          <div className=\"max-w-7xl mx-auto\">\n            <div className=\"login-card bg-white rounded overflow-hidden w-full\">\n              <div className=\"p-6\">\n                <h2 className=\"welcome-title\">Welcome Back</h2>\n                <hr className=\"divider mb-4\" />\n\n                <div className=\"login-container\">\n                  <div className=\"wallet-login mb-4 flex items-start gap-3\">\n                    <div className=\"wallet-icon h-10 w-10 rounded overflow-hidden bg-white flex items-center justify-center\">\n                      <img\n                        src=\"https://cdn.dmv.ca.gov/dmv-cdn/prod/isam/images/mdl/ca-dmv-wallet-icon.png\"\n                        alt=\"CA DMV Wallet\"\n                        className=\"h-full w-full object-contain\"\n                      />\n                    </div>\n                    <div>\n                      <a\n                        href=\"#\"\n                        className=\"wallet-link text-link font-medium links\"\n                      >\n                        Log in with CA DMV Wallet App\n                      </a>\n                      <div className=\"wallet-subtitle text-xs text-muted\">\n                        No password needed\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"section-title mb-3\">MyDMV</div>\n\n                  <p className=\"register-text mb-4 small-note\">\n                    <strong>Not Registered?</strong> In order to log in, you\n                    will first need to{\" \"}\n                    <a href=\"#\" className=\"text-link underline links\">\n                      create an account\n                    </a>\n                    .\n                  </p>\n\n                  {/* Replace the manual form with the reusable LoginForm component (native markup to preserve UI) */}\n                  <LoginForm useNativeMarkup disableCaptcha />\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n\n        <footer className=\"mt-auto\"></footer>\n      </div>\n    </ULThemePageLayout>\n  );\n}\n\nexport default LoginScreen;\n","/**\n * This module handles the conversion of Auth0 branding data structures into\n * CSS custom properties (variables) with proper unit conversions and formatting.\n *\n * KEY RESPONSIBILITIES:\n * - Convert Auth0 nested objects to flat CSS variable mappings\n * - Apply proper unit conversions (percentages to rem, numbers to px, etc.)\n * - Handle special formatting for URLs, shadows, and layout values\n * - Maintain consistent naming convention: --ul-theme-{category}-{property}\n *\n * UNIT CONVERSION EXAMPLES:\n * - Font sizes: 150% → 1.5rem, 87.5% → 0.875rem\n * - Font weights: true → 700, false → 400\n * - URLs: \"url\" → \"url\" (quoted for CSS)\n *\n * USAGE FLOW:\n * Branding Data from ACUL SDK → Flattener Functions → CSS Variables → DOM Injection\n *\n */\n\ninterface ColorData {\n  primary_button?: string;\n  primary_button_label?: string;\n  secondary_button_border?: string;\n  secondary_button_label?: string;\n  base_focus_color?: string;\n  base_hover_color?: string;\n  links_focused_components?: string;\n  header?: string;\n  body_text?: string;\n  widget_background?: string;\n  widget_border?: string;\n  input_labels_placeholders?: string;\n  input_filled_text?: string;\n  input_border?: string;\n  input_background?: string;\n  icons?: string;\n  error?: string;\n  success?: string;\n  captcha_widget_theme?: string;\n}\n\ninterface BorderData {\n  button_border_radius?: number;\n  buttons_style?: string;\n  input_border_radius?: number;\n  inputs_style?: string;\n  widget_corner_radius?: number;\n  button_border_weight?: number;\n  input_border_weight?: number;\n  widget_border_weight?: number;\n  show_widget_shadow?: boolean;\n}\n\ninterface FontData {\n  reference_text_size?: number;\n  title?: {\n    size?: number;\n    bold?: boolean;\n  };\n  subtitle?: {\n    size?: number;\n    bold?: boolean;\n  };\n  body_text?: {\n    size?: number;\n    bold?: boolean;\n  };\n  buttons_text?: {\n    size?: number;\n    bold?: boolean;\n  };\n  input_labels?: {\n    size?: number;\n    bold?: boolean;\n  };\n  links?: {\n    size?: number;\n    bold?: boolean;\n  };\n  links_style?: string;\n}\n\ninterface WidgetData {\n  logo_position?: string;\n  logo_url?: string;\n  logo_height?: number;\n  header_text_alignment?: string;\n  social_buttons_layout?: string;\n}\n\n/**\n * Flatten color data to CSS variables\n */\nexport function flattenColors(colors: ColorData): Record<string, string> {\n  const result: Record<string, string> = {};\n\n  if (colors.primary_button)\n    result[\"--ul-theme-color-primary-button\"] = colors.primary_button;\n  if (colors.primary_button_label)\n    result[\"--ul-theme-color-primary-button-label\"] =\n      colors.primary_button_label;\n  if (colors.secondary_button_border)\n    result[\"--ul-theme-color-secondary-button-border\"] =\n      colors.secondary_button_border;\n  if (colors.secondary_button_label)\n    result[\"--ul-theme-color-secondary-button-label\"] =\n      colors.secondary_button_label;\n  if (colors.base_focus_color)\n    result[\"--ul-theme-color-base-focus-color\"] = colors.base_focus_color;\n  if (colors.base_hover_color)\n    result[\"--ul-theme-color-base-hover-color\"] = colors.base_hover_color;\n  if (colors.links_focused_components)\n    result[\"--ul-theme-color-links-focused-components\"] =\n      colors.links_focused_components;\n  if (colors.header) result[\"--ul-theme-color-header\"] = colors.header;\n  if (colors.body_text) result[\"--ul-theme-color-body-text\"] = colors.body_text;\n  if (colors.widget_background)\n    result[\"--ul-theme-color-widget-background\"] = colors.widget_background;\n  if (colors.widget_border)\n    result[\"--ul-theme-color-widget-border\"] = colors.widget_border;\n  if (colors.input_labels_placeholders)\n    result[\"--ul-theme-color-input-labels-placeholders\"] =\n      colors.input_labels_placeholders;\n  if (colors.input_filled_text)\n    result[\"--ul-theme-color-input-filled-text\"] = colors.input_filled_text;\n  if (colors.input_border)\n    result[\"--ul-theme-color-input-border\"] = colors.input_border;\n  if (colors.input_background)\n    result[\"--ul-theme-color-input-background\"] = colors.input_background;\n  if (colors.icons) result[\"--ul-theme-color-icons\"] = colors.icons;\n  if (colors.error) result[\"--ul-theme-color-error\"] = colors.error;\n  if (colors.success) result[\"--ul-theme-color-success\"] = colors.success;\n  if (colors.captcha_widget_theme)\n    result[\"--ul-theme-color-captcha-widget-theme\"] =\n      colors.captcha_widget_theme;\n\n  return result;\n}\n\n/**\n * Helper function to calculate border radius based on style\n */\nfunction calculateBorderRadius(\n  style: string,\n  defaultRadius: number | undefined,\n  fallbackRadius: number = 10\n): number {\n  switch (style) {\n    case \"pill\":\n      return 9999;\n    case \"sharp\":\n      return 0;\n    case \"rounded\":\n    default:\n      return defaultRadius || fallbackRadius;\n  }\n}\n\n/**\n * Flatten border data to CSS variables with proper unit conversions\n */\nexport function flattenBorders(borders: BorderData): Record<string, string> {\n  const result: Record<string, string> = {};\n\n  // Calculate border radius values based on style, with automatic assignment\n  const buttonBorderRadius = borders.buttons_style\n    ? calculateBorderRadius(borders.buttons_style, borders.button_border_radius)\n    : borders.button_border_radius;\n\n  const inputBorderRadius = borders.inputs_style\n    ? calculateBorderRadius(borders.inputs_style, borders.input_border_radius)\n    : borders.input_border_radius;\n\n  if (buttonBorderRadius !== undefined)\n    result[\"--ul-theme-border-button-border-radius\"] =\n      `${buttonBorderRadius}px`;\n  if (inputBorderRadius !== undefined)\n    result[\"--ul-theme-border-input-border-radius\"] = `${inputBorderRadius}px`;\n  if (borders.widget_corner_radius)\n    result[\"--ul-theme-border-widget-corner-radius\"] =\n      `${borders.widget_corner_radius}px`;\n\n  // Border weight values need px units\n  if (borders.button_border_weight !== undefined)\n    result[\"--ul-theme-border-button-border-weight\"] =\n      `${borders.button_border_weight}px`;\n  if (borders.input_border_weight !== undefined)\n    result[\"--ul-theme-border-input-border-weight\"] =\n      `${borders.input_border_weight}px`;\n  if (borders.widget_border_weight !== undefined)\n    result[\"--ul-theme-border-widget-border-weight\"] =\n      `${borders.widget_border_weight}px`;\n\n  // Style values are already strings\n  if (borders.buttons_style)\n    result[\"--ul-theme-border-buttons-style\"] = borders.buttons_style;\n  if (borders.inputs_style)\n    result[\"--ul-theme-border-inputs-style\"] = borders.inputs_style;\n\n  // Boolean/numeric values for shadow - convert boolean to actual shadow values\n  if (borders.show_widget_shadow !== undefined)\n    result[\"--ul-theme-border-show-widget-shadow\"] = borders.show_widget_shadow\n      ? \"0px 12px 40px 0px rgba(0, 0, 0, 0.12)\"\n      : \"none\";\n\n  return result;\n}\n\n/**\n * Flatten font data to CSS variables with proper unit conversions\n */\nexport function flattenFonts(fonts: FontData): Record<string, string> {\n  const result: Record<string, string> = {};\n\n  // Reference text size is in pixels\n  if (fonts.reference_text_size)\n    result[\"--ul-theme-font-reference-text-size\"] =\n      `${fonts.reference_text_size}px`;\n\n  // Helper function to process font size and weight for each font type\n  const processFontType = (\n    fontData: { size?: number; bold?: boolean } | undefined,\n    fontType: string\n  ): void => {\n    if (fontData?.size) {\n      const sizePercent = fontData.size as number;\n\n      // Universal percentage-based sizing: ALL font types calculate as percentage of reference_text_size\n      if (fonts.reference_text_size) {\n        const referenceSize = fonts.reference_text_size as number;\n        const calculatedSize = (referenceSize * sizePercent) / 100;\n        result[`--ul-theme-font-${fontType}-size`] = `${calculatedSize}px`;\n      } else {\n        // Fallback: convert percentage to rem if no reference size available\n        const remValue = sizePercent / 100;\n        result[`--ul-theme-font-${fontType}-size`] = `${remValue}rem`;\n      }\n    }\n\n    if (fontData?.bold !== undefined) {\n      result[`--ul-theme-font-${fontType}-weight`] = fontData.bold\n        ? \"700\"\n        : \"400\";\n    }\n  };\n\n  processFontType(fonts.title, \"title\");\n  processFontType(fonts.subtitle, \"subtitle\");\n  processFontType(fonts.body_text, \"body-text\");\n  processFontType(fonts.buttons_text, \"buttons-text\");\n  processFontType(fonts.input_labels, \"input-labels\");\n  processFontType(fonts.links, \"links\");\n\n  // Links style (normal/italic)\n  if (fonts.links_style)\n    result[\"--ul-theme-font-links-style\"] = fonts.links_style;\n\n  return result;\n}\n\n/**\n * Flatten page background data to CSS variables\n */\nexport function flattenPageBackground(pageBackground: {\n  background_color?: string;\n  background_image_url?: string;\n  page_layout?: string;\n}): Record<string, string> {\n  const result: Record<string, string> = {};\n\n  if (pageBackground.background_color)\n    result[\"--ul-theme-page-bg-background-color\"] =\n      pageBackground.background_color;\n  if (pageBackground.background_image_url) {\n    result[\"--ul-theme-page-bg-background-image-url\"] =\n      pageBackground.background_image_url === null ||\n      pageBackground.background_image_url === \"\"\n        ? \"none\"\n        : `url(\"${pageBackground.background_image_url}\")`;\n  }\n  if (pageBackground.page_layout) {\n    // Convert to CSS justify-content values for use with arbitrary properties\n    const layoutMap: Record<string, string> = {\n      center: \"center\",\n      left: \"flex-start\",\n      right: \"flex-end\",\n    };\n    result[\"--ul-theme-page-bg-page-layout\"] =\n      layoutMap[pageBackground.page_layout] || \"center\";\n  }\n\n  return result;\n}\n\n/**\n * Flatten widget data to CSS variables with proper unit conversions\n */\nexport function flattenWidget(widget: WidgetData): Record<string, string> {\n  const result: Record<string, string> = {};\n\n  // Logo Source URL\n  if (widget.logo_url)\n    result[\"--ul-theme-widget-logo-url\"] = `\"${widget.logo_url}\"`;\n\n  // Logo height needs px units\n  if (widget.logo_height)\n    result[\"--ul-theme-widget-logo-height\"] = `${widget.logo_height}px`;\n\n  // Logo position: convert Auth0 values to Tailwind justify values\n  if (widget.logo_position) {\n    // Convert to Tailwind semantic variable\n    const positionMap: Record<string, string> = {\n      center: \"center\",\n      left: \"flex-start\",\n      right: \"flex-end\",\n      none: \"none\",\n    };\n    result[\"--ul-theme-widget-logo-position\"] =\n      positionMap[widget.logo_position] || \"center\";\n  }\n\n  // Header text alignment: convert Auth0 values to CSS text-align values\n  if (widget.header_text_alignment) {\n    result[\"--ul-theme-widget-header-text-alignment\"] =\n      widget.header_text_alignment;\n\n    // Convert to CSS text-align values for use with arbitrary properties\n    const alignmentMap: Record<string, string> = {\n      center: \"center\",\n      left: \"left\",\n      right: \"right\",\n    };\n    result[\"--text-align-header\"] =\n      alignmentMap[widget.header_text_alignment] || \"center\";\n  }\n  if (widget.social_buttons_layout)\n    result[\"--ul-theme-widget-social-buttons-layout\"] =\n      widget.social_buttons_layout;\n\n  return result;\n}\n","/**\n * This module is the main orchestrator for the Auth0 theme system.\n *\n * KEY RESPONSIBILITIES:\n * - Extract theme data from Auth0 screen instances with proper precedence\n * - Coordinate theme flattening and CSS variable generation\n * - Handle precedence system: Organization > Theme > Settings\n *\n * PRECEDENCE SYSTEM:\n * 1. Settings (lowest priority) - screenInstance.branding.settings\n * 2. Theme (medium priority) - screenInstance.branding.themes.default\n * 3. Organization (highest priority) - screenInstance.organization.branding\n *\n * USAGE PATTERN:\n * ```typescript\n * // In any Auth0 screen component\n * import { applyAuth0Theme } from \"@/utils/theme\";\n *\n * function LoginScreen() {\n *   const { screenInstance } = useScreenManager();\n *   applyAuth0Theme(screenInstance); // Apply theme when screen loads\n *   return <div>...</div>;\n * }\n * ```\n *\n * FLOW:\n * Screen Instance from ACUL SDK → Theme Extraction → Flattening → Change Detection → DOM Update\n */\n\nimport type {\n  BrandingMembers,\n  OrganizationMembers,\n} from \"@auth0/auth0-acul-js/types\";\n\nimport {\n  flattenBorders,\n  flattenColors,\n  flattenFonts,\n  flattenPageBackground,\n  flattenWidget,\n} from \"./themeFlatteners\";\n\ninterface Auth0ScreenInstance {\n  branding?: BrandingMembers;\n  organization?: OrganizationMembers;\n}\n\n// Cache for performance optimization - tracks current theme state\nlet currentThemeCache: Record<string, string> = {};\n\n// Essential variable mappings for precedence overrides\n// Maps Auth0 data paths to CSS variable names\nconst PRECEDENCE_VARIABLE_MAPPING = {\n  \"colors.primary\": \"--ul-theme-color-primary-button\",\n  \"colors.page_background\": \"--ul-theme-page-bg-background-color\",\n  logoUrl: \"--ul-theme-widget-logo-url\",\n} as const;\n\n/**\n * Main theme application function\n * Applies Auth0 branding data as CSS variables with proper precedence\n * USAGE PATTERN:\n * ```typescript\n * // In any Auth0 screen component\n * import { applyAuth0Theme } from \"@/utils/theme\";\n *\n * function LoginScreen() {\n *   const { screenInstance } = useScreenManager();\n *   applyAuth0Theme(screenInstance); // Apply theme when screen loads\n *   return <div>...</div>;\n * }\n * ```\n */\nexport function applyAuth0Theme(screenInstance: Auth0ScreenInstance): void {\n  if (!screenInstance?.branding) {\n    return;\n  }\n\n  clearThemeCache();\n  const themeData = extractThemeData(screenInstance);\n  applyThemeVariables(themeData);\n}\n\n/**\n * Extracts and merges theme data with precedence handling\n * Precedence order (lowest to highest): Settings -> Theme -> Organization\n */\nfunction extractThemeData(\n  screenInstance: Auth0ScreenInstance\n): Record<string, string> {\n  const theme =\n    screenInstance.branding?.themes?.default || ({} as Record<string, unknown>);\n\n  const settingsVars = extractBrandingOverrides(\n    screenInstance.branding?.settings as Record<string, unknown> | undefined\n  );\n  const themeVars = extractThemeVariables(theme as Record<string, unknown>);\n  const organizationVars = extractBrandingOverrides(\n    screenInstance.organization?.branding as Record<string, unknown> | undefined\n  );\n\n  return { ...settingsVars, ...themeVars, ...organizationVars };\n}\n\n/**\n * Extracts core theme variables from theme object\n */\nfunction extractThemeVariables(\n  theme: Record<string, unknown>\n): Record<string, string> {\n  return {\n    ...flattenColors(theme.colors || {}),\n    ...flattenBorders(theme.borders || {}),\n    ...flattenFonts(theme.fonts || {}),\n    ...flattenPageBackground(\n      theme.pageBackground || theme.page_background || {}\n    ),\n    ...flattenWidget(theme.widget || {}),\n  };\n}\n\n/**\n * Extracts branding overrides from settings or organization data\n * Handles both settings and organization sources with the same logic\n */\nfunction extractBrandingOverrides(\n  branding: Record<string, unknown> | undefined\n): Record<string, string> {\n  const overrides: Record<string, string> = {};\n\n  if (branding) {\n    applyMappedOverrides(branding, PRECEDENCE_VARIABLE_MAPPING, overrides);\n  }\n\n  return overrides;\n}\n\n/**\n * Applies mapped overrides from source object to overrides object\n * Handles special formatting for specific CSS variables\n */\nfunction applyMappedOverrides(\n  source: Record<string, unknown>,\n  mapping: Record<string, string>,\n  overrides: Record<string, string>\n): void {\n  Object.entries(mapping).forEach(([authPath, cssVar]) => {\n    const value = getNestedValue(source, authPath);\n    if (value && typeof value === \"string\") {\n      // Handle special formatting for specific variables\n      if (cssVar === \"--ul-theme-widget-logo-url\") {\n        overrides[cssVar] = `\"${value}\"`;\n      } else if (cssVar === \"--ul-theme-widget-logo-height\") {\n        // Logo height needs px units\n        overrides[cssVar] = typeof value === \"number\" ? `${value}px` : value;\n      } else {\n        overrides[cssVar] = value;\n      }\n    }\n  });\n}\n\nfunction getNestedValue(\n  obj: Record<string, unknown>,\n  path: string\n): string | undefined {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return path.split(\".\").reduce((current: any, key) => current?.[key], obj) as\n    | string\n    | undefined;\n}\n\n/**\n * Applies theme variables to DOM with performance optimization\n * Only updates variables that have actually changed\n */\nfunction applyThemeVariables(newTheme: Record<string, string>): void {\n  const changedVars = findChangedVariables(newTheme);\n\n  if (Object.keys(changedVars).length === 0) {\n    return;\n  }\n\n  updateDOMVariables(changedVars);\n  updateThemeCache(changedVars);\n}\n\n/**\n * Identifies which variables have changed compared to cache\n */\nfunction findChangedVariables(\n  newTheme: Record<string, string>\n): Record<string, string> {\n  const changed: Record<string, string> = {};\n\n  Object.entries(newTheme).forEach(([varName, value]) => {\n    if (currentThemeCache[varName] !== value) {\n      changed[varName] = value;\n    }\n  });\n\n  return changed;\n}\n\n/**\n * Updates CSS custom properties in the DOM\n */\nfunction updateDOMVariables(variables: Record<string, string>): void {\n  const documentStyle = document.documentElement.style;\n\n  Object.entries(variables).forEach(([varName, value]) => {\n    documentStyle.setProperty(varName, value);\n  });\n}\n\nfunction updateThemeCache(changedVars: Record<string, string>): void {\n  currentThemeCache = { ...currentThemeCache, ...changedVars };\n}\n\nexport function clearThemeCache(): void {\n  currentThemeCache = {};\n}\n\nexport const getCaptchaTheme = (\n  theme: \"light\" | \"dark\" | \"auto\" | undefined\n) => {\n  if (theme === \"auto\") {\n    if (\n      window.matchMedia &&\n      window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n    ) {\n      return \"dark\";\n    }\n    return \"light\";\n  }\n  return theme || \"light\";\n};\n","import { forwardRef } from \"react\";\n\nimport { ChevronRight } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport interface ULThemeCountryCodePickerProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * Selected country information\n   */\n  selectedCountry?:\n    | {\n        name: string;\n        code: string; // Country code like \"DZ\"\n        dialCode: string; // Phone code like \"+213\"\n        flag: string; // Flag emoji or URL\n      }\n    | undefined;\n  /**\n   * Placeholder text when no country is selected\n   */\n  placeholder?: string;\n  /**\n   * Loading state\n   */\n  isLoading?: boolean;\n  /**\n   * Full width styling\n   */\n  fullWidth?: boolean;\n}\n\nconst ULThemeCountryCodePicker = forwardRef<\n  HTMLButtonElement,\n  ULThemeCountryCodePickerProps\n>(\n  (\n    {\n      selectedCountry,\n      placeholder = \"Select Country\",\n      isLoading = false,\n      fullWidth = false,\n      className,\n      disabled,\n      ...rest\n    },\n    ref\n  ) => {\n    // Base styles with theme overrides\n    const baseStyles = cn(\n      \"inline-flex items-center justify-between px-4 py-4 text-left font-medium transition-colors duration-150 ease-in-out\",\n      \"theme-universal:bg-input-bg\",\n      \"theme-universal:text-input-text\",\n      \"theme-universal:border\",\n      \"theme-universal:border-input-border\",\n      \"theme-universal:text-(length:--ul-theme-font-body-text-size)\",\n      \"theme-universal:font-body\",\n      \"theme-universal:rounded-input\",\n      \"theme-universal:hover:border-base-focus\",\n      \"theme-universal:focus:outline-none theme-universal:focus:ring-2 theme-universal:focus:ring-base-focus/20\"\n    );\n\n    const widthStyles = fullWidth ? \"w-full\" : \"\";\n    const disabledStyles =\n      disabled || isLoading\n        ? \"disabled:opacity-70 cursor-not-allowed\"\n        : \"cursor-pointer\";\n\n    return (\n      <button\n        ref={ref}\n        type=\"button\"\n        disabled={disabled || isLoading}\n        className={cn(baseStyles, widthStyles, disabledStyles, className)}\n        {...rest}\n      >\n        <div className=\"flex items-center space-x-3 flex-1 min-w-0\">\n          {selectedCountry ? (\n            <>\n              {/* Flag */}\n              <div className=\"flex-shrink-0 w-6 h-4 flex items-center justify-center\">\n                {selectedCountry.flag.startsWith(\"http\") ? (\n                  <img\n                    src={selectedCountry.flag}\n                    alt={`${selectedCountry.name} flag`}\n                    className=\"w-6 h-4 object-cover rounded-sm\"\n                  />\n                ) : (\n                  <span className=\"text-lg\">{selectedCountry.flag}</span>\n                )}\n              </div>\n\n              {/* Country Info */}\n              <div className=\"flex-1 min-w-0\">\n                <span className=\"theme-universal:text-input-text theme-universal:font-body truncate\">\n                  {selectedCountry.name}, {selectedCountry.code},{\" \"}\n                  {selectedCountry.dialCode}\n                </span>\n              </div>\n            </>\n          ) : (\n            <>\n              {/* Placeholder state */}\n              <div className=\"flex-shrink-0 w-6 h-4 theme-universal:bg-input-border rounded-sm\"></div>\n              <span className=\"theme-universal:text-input-labels flex-1 truncate\">\n                {placeholder}\n              </span>\n            </>\n          )}\n        </div>\n\n        {/* Chevron */}\n        <div className=\"flex-shrink-0 ml-2\">\n          <ChevronRight\n            className={cn(\n              \"w-4 h-4 theme-universal:text-input-labels transition-transform duration-200\",\n              isLoading && \"animate-pulse\"\n            )}\n          />\n        </div>\n      </button>\n    );\n  }\n);\n\nULThemeCountryCodePicker.displayName = \"ULThemeCountryCodePicker\";\n\nexport default ULThemeCountryCodePicker;\n","/**\n * Utility functions for handling country code data from Auth0 SDK\n */\nconst COUNTRY_DATA: Record<string, { name: string; flag: string }> = {\n  AD: { name: \"Andorra\", flag: \"🇦🇩\" },\n  AE: { name: \"United Arab Emirates\", flag: \"🇦🇪\" },\n  AF: { name: \"Afghanistan\", flag: \"🇦🇫\" },\n  AG: { name: \"Antigua and Barbuda\", flag: \"🇦🇬\" },\n  AI: { name: \"Anguilla\", flag: \"🇦🇮\" },\n  AL: { name: \"Albania\", flag: \"🇦🇱\" },\n  AM: { name: \"Armenia\", flag: \"🇦🇲\" },\n  AO: { name: \"Angola\", flag: \"🇦🇴\" },\n  AQ: { name: \"Antarctica\", flag: \"🇦🇶\" },\n  AR: { name: \"Argentina\", flag: \"🇦🇷\" },\n  AS: { name: \"American Samoa\", flag: \"🇦🇸\" },\n  AT: { name: \"Austria\", flag: \"🇦🇹\" },\n  AU: { name: \"Australia\", flag: \"🇦🇺\" },\n  AW: { name: \"Aruba\", flag: \"🇦🇼\" },\n  AX: { name: \"Åland Islands\", flag: \"🇦🇽\" },\n  AZ: { name: \"Azerbaijan\", flag: \"🇦🇿\" },\n  BA: { name: \"Bosnia and Herzegovina\", flag: \"🇧🇦\" },\n  BB: { name: \"Barbados\", flag: \"🇧🇧\" },\n  BD: { name: \"Bangladesh\", flag: \"🇧🇩\" },\n  BE: { name: \"Belgium\", flag: \"🇧🇪\" },\n  BF: { name: \"Burkina Faso\", flag: \"🇧🇫\" },\n  BG: { name: \"Bulgaria\", flag: \"🇧🇬\" },\n  BH: { name: \"Bahrain\", flag: \"🇧🇭\" },\n  BI: { name: \"Burundi\", flag: \"🇧🇮\" },\n  BJ: { name: \"Benin\", flag: \"🇧🇯\" },\n  BL: { name: \"Saint Barthélemy\", flag: \"🇧🇱\" },\n  BM: { name: \"Bermuda\", flag: \"🇧🇲\" },\n  BN: { name: \"Brunei Darussalam\", flag: \"🇧🇳\" },\n  BO: { name: \"Bolivia, Plurinational State of\", flag: \"🇧🇴\" },\n  BQ: { name: \"Bonaire, Sint Eustatius and Saba\", flag: \"🇧🇶\" },\n  BR: { name: \"Brazil\", flag: \"🇧🇷\" },\n  BS: { name: \"Bahamas\", flag: \"🇧🇸\" },\n  BT: { name: \"Bhutan\", flag: \"🇧🇹\" },\n  BV: { name: \"Bouvet Island\", flag: \"🇧🇻\" },\n  BW: { name: \"Botswana\", flag: \"🇧🇼\" },\n  BY: { name: \"Belarus\", flag: \"🇧🇾\" },\n  BZ: { name: \"Belize\", flag: \"🇧🇿\" },\n  CA: { name: \"Canada\", flag: \"🇨🇦\" },\n  CC: { name: \"Cocos (Keeling) Islands\", flag: \"🇨🇨\" },\n  CD: { name: \"Congo, the Democratic Republic of the\", flag: \"🇨🇩\" },\n  CF: { name: \"Central African Republic\", flag: \"🇨🇫\" },\n  CG: { name: \"Congo\", flag: \"🇨🇬\" },\n  CH: { name: \"Switzerland\", flag: \"🇨🇭\" },\n  CI: { name: \"Côte d'Ivoire\", flag: \"🇨🇮\" },\n  CK: { name: \"Cook Islands\", flag: \"🇨🇰\" },\n  CL: { name: \"Chile\", flag: \"🇨🇱\" },\n  CM: { name: \"Cameroon\", flag: \"🇨🇲\" },\n  CN: { name: \"China\", flag: \"🇨🇳\" },\n  CO: { name: \"Colombia\", flag: \"🇨🇴\" },\n  CR: { name: \"Costa Rica\", flag: \"🇨🇷\" },\n  CU: { name: \"Cuba\", flag: \"🇨🇺\" },\n  CV: { name: \"Cape Verde\", flag: \"🇨🇻\" },\n  CW: { name: \"Curaçao\", flag: \"🇨🇼\" },\n  CX: { name: \"Christmas Island\", flag: \"🇨🇽\" },\n  CY: { name: \"Cyprus\", flag: \"🇨🇾\" },\n  CZ: { name: \"Czech Republic\", flag: \"🇨🇿\" },\n  DE: { name: \"Germany\", flag: \"🇩🇪\" },\n  DJ: { name: \"Djibouti\", flag: \"🇩🇯\" },\n  DK: { name: \"Denmark\", flag: \"🇩🇰\" },\n  DM: { name: \"Dominica\", flag: \"🇩🇲\" },\n  DO: { name: \"Dominican Republic\", flag: \"🇩🇴\" },\n  DZ: { name: \"Algeria\", flag: \"🇩🇿\" },\n  EC: { name: \"Ecuador\", flag: \"🇪🇨\" },\n  EE: { name: \"Estonia\", flag: \"🇪🇪\" },\n  EG: { name: \"Egypt\", flag: \"🇪🇬\" },\n  EH: { name: \"Western Sahara\", flag: \"🇪🇭\" },\n  ER: { name: \"Eritrea\", flag: \"🇪🇷\" },\n  ES: { name: \"Spain\", flag: \"🇪🇸\" },\n  ET: { name: \"Ethiopia\", flag: \"🇪🇹\" },\n  FI: { name: \"Finland\", flag: \"🇫🇮\" },\n  FJ: { name: \"Fiji\", flag: \"🇫🇯\" },\n  FK: { name: \"Falkland Islands (Malvinas)\", flag: \"🇫🇰\" },\n  FM: { name: \"Micronesia, Federated States of\", flag: \"🇫🇲\" },\n  FO: { name: \"Faroe Islands\", flag: \"🇫🇴\" },\n  FR: { name: \"France\", flag: \"🇫🇷\" },\n  GA: { name: \"Gabon\", flag: \"🇬🇦\" },\n  GB: { name: \"United Kingdom\", flag: \"🇬🇧\" },\n  GD: { name: \"Grenada\", flag: \"🇬🇩\" },\n  GE: { name: \"Georgia\", flag: \"🇬🇪\" },\n  GF: { name: \"French Guiana\", flag: \"🇬🇫\" },\n  GG: { name: \"Guernsey\", flag: \"🇬🇬\" },\n  GH: { name: \"Ghana\", flag: \"🇬🇭\" },\n  GI: { name: \"Gibraltar\", flag: \"🇬🇮\" },\n  GL: { name: \"Greenland\", flag: \"🇬🇱\" },\n  GM: { name: \"Gambia\", flag: \"🇬🇲\" },\n  GN: { name: \"Guinea\", flag: \"🇬🇳\" },\n  GP: { name: \"Guadeloupe\", flag: \"🇬🇵\" },\n  GQ: { name: \"Equatorial Guinea\", flag: \"🇬🇶\" },\n  GR: { name: \"Greece\", flag: \"🇬🇷\" },\n  GS: { name: \"South Georgia and the South Sandwich Islands\", flag: \"🇬🇸\" },\n  GT: { name: \"Guatemala\", flag: \"🇬🇹\" },\n  GU: { name: \"Guam\", flag: \"🇬🇺\" },\n  GW: { name: \"Guinea-Bissau\", flag: \"🇬🇼\" },\n  GY: { name: \"Guyana\", flag: \"🇬🇾\" },\n  HK: { name: \"Hong Kong\", flag: \"🇭🇰\" },\n  HM: { name: \"Heard Island and McDonald Islands\", flag: \"🇭🇲\" },\n  HN: { name: \"Honduras\", flag: \"🇭🇳\" },\n  HR: { name: \"Croatia\", flag: \"🇭🇷\" },\n  HT: { name: \"Haiti\", flag: \"🇭🇹\" },\n  HU: { name: \"Hungary\", flag: \"🇭🇺\" },\n  ID: { name: \"Indonesia\", flag: \"🇮🇩\" },\n  IE: { name: \"Ireland\", flag: \"🇮🇪\" },\n  IL: { name: \"Israel\", flag: \"🇮🇱\" },\n  IM: { name: \"Isle of Man\", flag: \"🇮🇲\" },\n  IN: { name: \"India\", flag: \"🇮🇳\" },\n  IO: { name: \"British Indian Ocean Territory\", flag: \"🇮🇴\" },\n  IQ: { name: \"Iraq\", flag: \"🇮🇶\" },\n  IR: { name: \"Iran, Islamic Republic of\", flag: \"🇮🇷\" },\n  IS: { name: \"Iceland\", flag: \"🇮🇸\" },\n  IT: { name: \"Italy\", flag: \"🇮🇹\" },\n  JE: { name: \"Jersey\", flag: \"🇯🇪\" },\n  JM: { name: \"Jamaica\", flag: \"🇯🇲\" },\n  JO: { name: \"Jordan\", flag: \"🇯🇴\" },\n  JP: { name: \"Japan\", flag: \"🇯🇵\" },\n  KE: { name: \"Kenya\", flag: \"🇰🇪\" },\n  KG: { name: \"Kyrgyzstan\", flag: \"🇰🇬\" },\n  KH: { name: \"Cambodia\", flag: \"🇰🇭\" },\n  KI: { name: \"Kiribati\", flag: \"🇰🇮\" },\n  KM: { name: \"Comoros\", flag: \"🇰🇲\" },\n  KN: { name: \"Saint Kitts and Nevis\", flag: \"🇰🇳\" },\n  KP: { name: \"Korea, Democratic People's Republic of\", flag: \"🇰🇵\" },\n  KR: { name: \"Korea, Republic of\", flag: \"🇰🇷\" },\n  KW: { name: \"Kuwait\", flag: \"🇰🇼\" },\n  KY: { name: \"Cayman Islands\", flag: \"🇰🇾\" },\n  KZ: { name: \"Kazakhstan\", flag: \"🇰🇿\" },\n  LA: { name: \"Lao People's Democratic Republic\", flag: \"🇱🇦\" },\n  LB: { name: \"Lebanon\", flag: \"🇱🇧\" },\n  LC: { name: \"Saint Lucia\", flag: \"🇱🇨\" },\n  LI: { name: \"Liechtenstein\", flag: \"🇱🇮\" },\n  LK: { name: \"Sri Lanka\", flag: \"🇱🇰\" },\n  LR: { name: \"Liberia\", flag: \"🇱🇷\" },\n  LS: { name: \"Lesotho\", flag: \"🇱🇸\" },\n  LT: { name: \"Lithuania\", flag: \"🇱🇹\" },\n  LU: { name: \"Luxembourg\", flag: \"🇱🇺\" },\n  LV: { name: \"Latvia\", flag: \"🇱🇻\" },\n  LY: { name: \"Libya\", flag: \"🇱🇾\" },\n  MA: { name: \"Morocco\", flag: \"🇲🇦\" },\n  MC: { name: \"Monaco\", flag: \"🇲🇨\" },\n  MD: { name: \"Moldova, Republic of\", flag: \"🇲🇩\" },\n  ME: { name: \"Montenegro\", flag: \"🇲🇪\" },\n  MF: { name: \"Saint Martin (French part)\", flag: \"🇲🇫\" },\n  MG: { name: \"Madagascar\", flag: \"🇲🇬\" },\n  MH: { name: \"Marshall Islands\", flag: \"🇲🇭\" },\n  MK: { name: \"Macedonia, the former Yugoslav Republic of\", flag: \"🇲🇰\" },\n  ML: { name: \"Mali\", flag: \"🇲🇱\" },\n  MM: { name: \"Myanmar\", flag: \"🇲🇲\" },\n  MN: { name: \"Mongolia\", flag: \"🇲🇳\" },\n  MO: { name: \"Macao\", flag: \"🇲🇴\" },\n  MP: { name: \"Northern Mariana Islands\", flag: \"🇲🇵\" },\n  MQ: { name: \"Martinique\", flag: \"🇲🇶\" },\n  MR: { name: \"Mauritania\", flag: \"🇲🇷\" },\n  MS: { name: \"Montserrat\", flag: \"🇲🇸\" },\n  MT: { name: \"Malta\", flag: \"🇲🇹\" },\n  MU: { name: \"Mauritius\", flag: \"🇲🇺\" },\n  MV: { name: \"Maldives\", flag: \"🇲🇻\" },\n  MW: { name: \"Malawi\", flag: \"🇲🇼\" },\n  MX: { name: \"Mexico\", flag: \"🇲🇽\" },\n  MY: { name: \"Malaysia\", flag: \"🇲🇾\" },\n  MZ: { name: \"Mozambique\", flag: \"🇲🇿\" },\n  NA: { name: \"Namibia\", flag: \"🇳🇦\" },\n  NC: { name: \"New Caledonia\", flag: \"🇳🇨\" },\n  NE: { name: \"Niger\", flag: \"🇳🇪\" },\n  NF: { name: \"Norfolk Island\", flag: \"🇳🇫\" },\n  NG: { name: \"Nigeria\", flag: \"🇳🇬\" },\n  NI: { name: \"Nicaragua\", flag: \"🇳🇮\" },\n  NL: { name: \"Netherlands\", flag: \"🇳🇱\" },\n  NO: { name: \"Norway\", flag: \"🇳🇴\" },\n  NP: { name: \"Nepal\", flag: \"🇳🇵\" },\n  NR: { name: \"Nauru\", flag: \"🇳🇷\" },\n  NU: { name: \"Niue\", flag: \"🇳🇺\" },\n  NZ: { name: \"New Zealand\", flag: \"🇳🇿\" },\n  OM: { name: \"Oman\", flag: \"🇴🇲\" },\n  PA: { name: \"Panama\", flag: \"🇵🇦\" },\n  PE: { name: \"Peru\", flag: \"🇵🇪\" },\n  PF: { name: \"French Polynesia\", flag: \"🇵🇫\" },\n  PG: { name: \"Papua New Guinea\", flag: \"🇵🇬\" },\n  PH: { name: \"Philippines\", flag: \"🇵🇭\" },\n  PK: { name: \"Pakistan\", flag: \"🇵🇰\" },\n  PL: { name: \"Poland\", flag: \"🇵🇱\" },\n  PM: { name: \"Saint Pierre and Miquelon\", flag: \"🇵🇲\" },\n  PN: { name: \"Pitcairn\", flag: \"🇵🇳\" },\n  PR: { name: \"Puerto Rico\", flag: \"🇵🇷\" },\n  PS: { name: \"Palestine, State of\", flag: \"🇵🇸\" },\n  PT: { name: \"Portugal\", flag: \"🇵🇹\" },\n  PW: { name: \"Palau\", flag: \"🇵🇼\" },\n  PY: { name: \"Paraguay\", flag: \"🇵🇾\" },\n  QA: { name: \"Qatar\", flag: \"🇶🇦\" },\n  RE: { name: \"Réunion\", flag: \"🇷🇪\" },\n  RO: { name: \"Romania\", flag: \"🇷🇴\" },\n  RS: { name: \"Serbia\", flag: \"🇷🇸\" },\n  RU: { name: \"Russian Federation\", flag: \"🇷🇺\" },\n  RW: { name: \"Rwanda\", flag: \"🇷🇼\" },\n  SA: { name: \"Saudi Arabia\", flag: \"🇸🇦\" },\n  SB: { name: \"Solomon Islands\", flag: \"🇸🇧\" },\n  SC: { name: \"Seychelles\", flag: \"🇸🇨\" },\n  SD: { name: \"Sudan\", flag: \"🇸🇩\" },\n  SE: { name: \"Sweden\", flag: \"🇸🇪\" },\n  SG: { name: \"Singapore\", flag: \"🇸🇬\" },\n  SH: { name: \"Saint Helena, Ascension and Tristan da Cunha\", flag: \"🇸🇭\" },\n  SI: { name: \"Slovenia\", flag: \"🇸🇮\" },\n  SJ: { name: \"Svalbard and Jan Mayen\", flag: \"🇸🇯\" },\n  SK: { name: \"Slovakia\", flag: \"🇸🇰\" },\n  SL: { name: \"Sierra Leone\", flag: \"🇸🇱\" },\n  SM: { name: \"San Marino\", flag: \"🇸🇲\" },\n  SN: { name: \"Senegal\", flag: \"🇸🇳\" },\n  SO: { name: \"Somalia\", flag: \"🇸🇴\" },\n  SR: { name: \"Suriname\", flag: \"🇸🇷\" },\n  SS: { name: \"South Sudan\", flag: \"🇸🇸\" },\n  ST: { name: \"Sao Tome and Principe\", flag: \"🇸🇹\" },\n  SV: { name: \"El Salvador\", flag: \"🇸🇻\" },\n  SX: { name: \"Sint Maarten (Dutch part)\", flag: \"🇸🇽\" },\n  SY: { name: \"Syrian Arab Republic\", flag: \"🇸🇾\" },\n  SZ: { name: \"Swaziland\", flag: \"🇸🇿\" },\n  TC: { name: \"Turks and Caicos Islands\", flag: \"🇹🇨\" },\n  TD: { name: \"Chad\", flag: \"🇹🇩\" },\n  TF: { name: \"French Southern Territories\", flag: \"🇹🇫\" },\n  TG: { name: \"Togo\", flag: \"🇹🇬\" },\n  TH: { name: \"Thailand\", flag: \"🇹🇭\" },\n  TJ: { name: \"Tajikistan\", flag: \"🇹🇯\" },\n  TK: { name: \"Tokelau\", flag: \"🇹🇰\" },\n  TL: { name: \"Timor-Leste\", flag: \"🇹🇱\" },\n  TM: { name: \"Turkmenistan\", flag: \"🇹🇲\" },\n  TN: { name: \"Tunisia\", flag: \"🇹🇳\" },\n  TO: { name: \"Tonga\", flag: \"🇹🇴\" },\n  TR: { name: \"Turkey\", flag: \"🇹🇷\" },\n  TT: { name: \"Trinidad and Tobago\", flag: \"🇹🇹\" },\n  TV: { name: \"Tuvalu\", flag: \"🇹🇻\" },\n  TW: { name: \"Taiwan, Province of China\", flag: \"🇹🇼\" },\n  TZ: { name: \"Tanzania, United Republic of\", flag: \"🇹🇿\" },\n  UA: { name: \"Ukraine\", flag: \"🇺🇦\" },\n  UG: { name: \"Uganda\", flag: \"🇺🇬\" },\n  UM: { name: \"United States Minor Outlying Islands\", flag: \"🇺🇲\" },\n  US: { name: \"United States\", flag: \"🇺🇸\" },\n  UY: { name: \"Uruguay\", flag: \"🇺🇾\" },\n  UZ: { name: \"Uzbekistan\", flag: \"🇺🇿\" },\n  VA: { name: \"Holy See (Vatican City State)\", flag: \"🇻🇦\" },\n  VC: { name: \"Saint Vincent and the Grenadines\", flag: \"🇻🇨\" },\n  VE: { name: \"Venezuela, Bolivarian Republic of\", flag: \"🇻🇪\" },\n  VG: { name: \"Virgin Islands, British\", flag: \"🇻🇬\" },\n  VI: { name: \"Virgin Islands, U.S.\", flag: \"🇻🇮\" },\n  VN: { name: \"Viet Nam\", flag: \"🇻🇳\" },\n  VU: { name: \"Vanuatu\", flag: \"🇻🇺\" },\n  WF: { name: \"Wallis and Futuna\", flag: \"🇼🇫\" },\n  WS: { name: \"Samoa\", flag: \"🇼🇸\" },\n  YE: { name: \"Yemen\", flag: \"🇾🇪\" },\n  YT: { name: \"Mayotte\", flag: \"🇾🇹\" },\n  ZA: { name: \"South Africa\", flag: \"🇿🇦\" },\n  ZM: { name: \"Zambia\", flag: \"🇿🇲\" },\n  ZW: { name: \"Zimbabwe\", flag: \"🇿🇼\" },\n};\n\n/**\n * Auth0 SDK country code structure from TransactionMembersOnLoginId\n * Based on: https://auth0.github.io/universal-login/interfaces/Classes.TransactionMembersOnLoginId.html\n */\nexport interface Auth0CountryCode {\n  code: string; // Country code like \"IN\", \"US\"\n  prefix: string; // Phone prefix like \"91\", \"1\"\n}\n\n/**\n * Alternative structure that might be in mock data or different SDK versions\n */\nexport interface Auth0CountryCodeAlt {\n  countryCode: string;\n  countryPrefix: string;\n}\n\nexport interface CountryCodePickerData {\n  name: string;\n  code: string;\n  dialCode: string;\n  flag: string;\n}\n\nexport function transformAuth0CountryCode(\n  countryCode: string | null | undefined,\n  countryPrefix?: string | null | undefined\n): CountryCodePickerData | undefined {\n  if (!countryCode) {\n    return undefined;\n  }\n\n  const countryInfo = COUNTRY_DATA[countryCode];\n\n  if (!countryInfo) {\n    // Fallback for unknown country codes\n    return {\n      name: `Country ${countryCode}`,\n      code: countryCode,\n      dialCode: countryPrefix ? `+${countryPrefix}` : \"+??\",\n      flag: \"🏳️\", // Generic flag\n    };\n  }\n\n  return {\n    name: countryInfo.name,\n    code: countryCode,\n    dialCode: countryPrefix ? `+${countryPrefix}` : \"+??\",\n    flag: countryInfo.flag,\n  };\n}\n\n/**\n * Checks if country picker should be shown - only when phone is the ONLY identifier option\n * @param identifiers - Array of allowed identifier types\n * @returns boolean indicating if country picker should be displayed\n */\nexport function isPhoneNumberSupported(identifiers: string[]): boolean {\n  // Show country picker only when phone is the sole identifier option\n  return (\n    identifiers.length === 1 &&\n    identifiers.some((identifier) => identifier.toLowerCase().includes(\"phone\"))\n  );\n}\n\nexport function getCountryName(countryCode: string): string {\n  return COUNTRY_DATA[countryCode]?.name || `Country ${countryCode}`;\n}\n\nexport function getCountryFlag(countryCode: string): string {\n  return COUNTRY_DATA[countryCode]?.flag || \"🏳️\";\n}\n","import { useMemo } from \"react\";\n\nimport LoginIdInstance from \"@auth0/auth0-acul-js/login-id\";\nimport type { ScreenMembersOnLoginId } from \"@auth0/auth0-acul-js/types\";\n\nimport { executeSafely } from \"@/utils/helpers/executeSafely\";\n\nexport const useLoginIdManager = () => {\n  const loginIdInstance = useMemo(() => new LoginIdInstance(), []);\n\n  const { transaction, screen } = loginIdInstance;\n  const { isSignupEnabled, isForgotPasswordEnabled, isPasskeyEnabled } =\n    transaction;\n\n  const { signupLink, resetPasswordLink, texts, captchaImage } = screen;\n\n  const handleLoginId = async (\n    loginId: string,\n    captcha?: string\n  ): Promise<void> => {\n    const options: { username: string; captcha?: string } = {\n      username: loginId?.trim() || \"\",\n    };\n\n    if (screen.isCaptchaAvailable && captcha?.trim()) {\n      options.captcha = captcha.trim();\n    }\n    // Log the options and execute the SDK call. Await and surface errors so\n    // the browser console shows the server response (useful for debugging 400s).\n    executeSafely(`LoginId with options: ${JSON.stringify(options)}`, () => {\n      const p = loginIdInstance.login(options);\n      // Attach handlers so we log success or failure details\n      if (p && typeof (p as Promise<unknown>).then === \"function\") {\n        (p as Promise<unknown>)\n          .then((res: unknown) => {\n            console.log(\"LoginId success response:\", res);\n          })\n          .catch((err: unknown) => {\n            console.error(\"LoginId failed:\", err);\n            // Re-throw so callers can observe failures if they await handleLoginId\n            throw err;\n          });\n      }\n      return p;\n    });\n  };\n\n  const handleFederatedLogin = async (connectionName: string) => {\n    executeSafely(`Federated login with connection: ${connectionName}`, () =>\n      loginIdInstance.federatedLogin({ connection: connectionName })\n    );\n  };\n\n  const handlePasskeyLogin = async () => {\n    if (isPasskeyEnabled) {\n      executeSafely(`Passkey login`, () => loginIdInstance.passkeyLogin());\n    }\n  };\n\n  const handlePickCountryCode = async () => {\n    executeSafely(`Pick country code`, () => loginIdInstance.pickCountryCode());\n  };\n\n  return {\n    loginIdInstance,\n    handleLoginId,\n    handleFederatedLogin,\n    handlePasskeyLogin,\n    handlePickCountryCode,\n    texts: (texts || {}) as ScreenMembersOnLoginId[\"texts\"],\n    isSignupEnabled: isSignupEnabled === true,\n    isForgotPasswordEnabled: isForgotPasswordEnabled === true,\n    isPasskeyEnabled: isPasskeyEnabled === true,\n    isCaptchaAvailable: screen.isCaptchaAvailable === true,\n    errors: loginIdInstance.getErrors(),\n    captchaImage,\n    captcha: screen.captcha || null,\n    signupLink,\n    resetPasswordLink,\n  };\n};\n","import { useForm } from \"react-hook-form\";\n\nimport type {\n  Error,\n  TransactionMembersOnLoginId,\n} from \"@auth0/auth0-acul-js/types\";\n\nimport { ULThemeFloatingLabelField } from \"@/components/form/ULThemeFloatingLabelField\";\nimport { ULThemeFormMessage } from \"@/components/form/ULThemeFormMessage\";\nimport { Form, FormField, FormItem } from \"@/components/ui/form\";\nimport ULThemeCountryCodePicker from \"@/components/ULThemeCountryCodePicker\";\nimport { ULThemeAlert, ULThemeAlertTitle } from \"@/components/ULThemeError\";\nimport ULThemeLink from \"@/components/ULThemeLink\";\nimport { ULThemePrimaryButton } from \"@/components/ULThemePrimaryButton\";\nimport {\n  isPhoneNumberSupported,\n  transformAuth0CountryCode,\n} from \"@/utils/helpers/countryUtils\";\nimport { getFieldError } from \"@/utils/helpers/errorUtils\";\nimport { getIdentifierDetails } from \"@/utils/helpers/identifierUtils\";\nimport { rebaseLinkToCurrentOrigin } from \"@/utils/helpers/urlUtils\";\n\nimport { useLoginIdManager } from \"../hooks/useLoginIdManager\";\n\ninterface LoginIdFormData {\n  identifier: string;\n}\n\nfunction IdentifierForm() {\n  const {\n    handleLoginId,\n    errors,\n    resetPasswordLink,\n    isForgotPasswordEnabled,\n    loginIdInstance,\n    texts,\n    handlePickCountryCode,\n  } = useLoginIdManager();\n\n  const form = useForm<LoginIdFormData>({\n    defaultValues: {\n      identifier: \"\",\n    },\n  });\n\n  const {\n    formState: { isSubmitting },\n  } = form;\n\n  // Handle text fallbacks in component\n  const buttonText = texts?.buttonText || \"Continue\";\n  const forgotPasswordText = texts?.forgotPasswordText || \"Forgot Password?\";\n\n  // Get general errors (not field-specific)\n  const generalErrors =\n    errors?.filter((error: Error) => !error.field || error.field === null) ||\n    [];\n\n  const identifierSDKError =\n    getFieldError(\"identifier\", errors) ||\n    getFieldError(\"email\", errors) ||\n    getFieldError(\"phone\", errors) ||\n    getFieldError(\"username\", errors);\n\n  // Get allowed identifiers directly from SDK\n  const allowedIdentifiers =\n    loginIdInstance?.transaction?.allowedIdentifiers || [];\n\n  const {\n    label: identifierLabel,\n    type: identifierType,\n    autoComplete: identifierAutoComplete,\n  } = getIdentifierDetails(allowedIdentifiers, texts);\n\n  // Proper submit handler with form data\n  const onSubmit = async (data: LoginIdFormData) => {\n    await handleLoginId(data.identifier);\n  };\n\n  const localizedResetPasswordLink =\n    resetPasswordLink && rebaseLinkToCurrentOrigin(resetPasswordLink);\n\n  const shouldShowCountryPicker = isPhoneNumberSupported(allowedIdentifiers);\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-2\">\n        {/* General alerts at the top */}\n        {generalErrors.length > 0 && (\n          <div className=\"space-y-3 mb-4\">\n            {generalErrors.map((error: Error, index: number) => (\n              <ULThemeAlert key={index} variant=\"destructive\">\n                <ULThemeAlertTitle>{error.message}</ULThemeAlertTitle>\n              </ULThemeAlert>\n            ))}\n          </div>\n        )}\n\n        {/* Country Code Picker - only show if phone numbers are supported */}\n        {shouldShowCountryPicker && (\n          <div className=\"mb-4\">\n            <ULThemeCountryCodePicker\n              selectedCountry={transformAuth0CountryCode(\n                (loginIdInstance?.transaction as TransactionMembersOnLoginId)\n                  ?.countryCode,\n                (loginIdInstance?.transaction as TransactionMembersOnLoginId)\n                  ?.countryPrefix\n              )}\n              onClick={handlePickCountryCode}\n              fullWidth\n              placeholder=\"Select Country\"\n            />\n          </div>\n        )}\n\n        {/* Identifier input field */}\n        <FormField\n          control={form.control}\n          name=\"identifier\"\n          rules={{\n            required: \"This field is required\",\n            maxLength: {\n              value: 100,\n              message: \"Maximum 100 characters allowed\",\n            },\n          }}\n          render={({ field, fieldState }) => (\n            <FormItem>\n              <ULThemeFloatingLabelField\n                {...field}\n                label={identifierLabel}\n                type={identifierType}\n                autoFocus={true}\n                autoComplete={identifierAutoComplete}\n                error={!!fieldState.error || !!identifierSDKError}\n              />\n              <ULThemeFormMessage\n                sdkError={identifierSDKError}\n                hasFormError={!!fieldState.error}\n              />\n            </FormItem>\n          )}\n        />\n\n        {/* Forgot Password link */}\n        <div className=\"text-left mb-4\">\n          {isForgotPasswordEnabled && localizedResetPasswordLink && (\n            <ULThemeLink href={localizedResetPasswordLink}>\n              {forgotPasswordText}\n            </ULThemeLink>\n          )}\n        </div>\n\n        {/* Submit button */}\n        <ULThemePrimaryButton\n          type=\"submit\"\n          className=\"w-full\"\n          disabled={isSubmitting}\n        >\n          {buttonText}\n        </ULThemePrimaryButton>\n      </form>\n    </Form>\n  );\n}\n\nexport default IdentifierForm;\n","import { useEffect } from \"react\";\n\nimport ULThemePageLayout from \"@/components/ULThemePageLayout\";\nimport { applyAuth0Theme } from \"@/utils/theme\";\n\nimport IdentifierForm from \"./components/IdentifierForm\";\nimport { useLoginIdManager } from \"./hooks/useLoginIdManager\";\n\nfunction LoginScreen() {\n  const { loginIdInstance, texts } = useLoginIdManager();\n\n  useEffect(() => {\n    // Prefer SDK-provided page title when available\n    if (texts?.pageTitle) {\n      document.title = texts.pageTitle;\n    } else {\n      document.title = \"Login\";\n    }\n\n    // Apply theme from SDK instance when screen loads\n    applyAuth0Theme(loginIdInstance);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ULThemePageLayout className=\"theme-universal\">\n      <div className=\"login-page min-h-screen flex flex-col z-30\">\n        {/* Header and hero are supplied by the UL theme wrapper; screens should only render screen-level containers */}\n\n        {/* Centered card */}\n        <main className=\"container mx-auto px-4 sm:px-6 lg:px-8 -mt-16 mb-16 z-30 max-w-4xl\">\n          <div className=\"mx-auto\">\n            <div className=\"login-card bg-white rounded overflow-hidden w-full shadow-md\">\n              <div className=\"p-4 sm:p-6 md:p-8\">\n                <h2 className=\"welcome-title text-lg sm:text-xl md:text-2xl\">\n                  Welcome Back\n                </h2>\n                <hr className=\"divider mb-4\" />\n\n                <div className=\"flex flex-col gap-6\">\n                  {/* Top section - compact info / wallet CTA */}\n                  <aside className=\"w-full bg-gray-50 rounded p-4 flex flex-col gap-4 justify-center\">\n                    <div className=\"wallet-login flex items-start gap-3\">\n                      <div className=\"wallet-icon h-10 w-10 rounded overflow-hidden bg-white flex items-center justify-center\">\n                        <img\n                          src=\"https://cdn.dmv.ca.gov/dmv-cdn/prod/isam/images/mdl/ca-dmv-wallet-icon.png\"\n                          alt=\"CA DMV Wallet\"\n                          className=\"h-full w-full object-contain max-h-12 max-w-12\"\n                        />\n                      </div>\n                      <div>\n                        <a\n                          href=\"#\"\n                          className=\"wallet-link text-link font-medium links\"\n                        >\n                          Log in with CA DMV Wallet App\n                        </a>\n                        <div className=\"wallet-subtitle text-xs text-muted\">\n                          No password needed\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"section-title mt-2\">MyDMV</div>\n\n                    <p className=\"register-text mb-0 small-note text-sm\">\n                      <strong>Not Registered?</strong> In order to log in, you\n                      will first need to\n                      <a href=\"#\" className=\"text-link underline links ml-1\">\n                        create an account\n                      </a>\n                      .\n                    </p>\n                  </aside>\n\n                  {/* Form section - uses the IdentifierForm component for full functionality */}\n                  <section className=\"w-full\">\n                    <IdentifierForm />\n                  </section>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n\n        <footer className=\"mt-auto\"></footer>\n      </div>\n    </ULThemePageLayout>\n  );\n}\n\nexport default LoginScreen;\n","import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground shadow-bevel-2xl flex flex-col gap-6 rounded-4xl py-6\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n};\n","import { cn } from \"@/lib/utils\";\n\nimport { Card } from \"./ui/card\";\n\nexport interface ULThemeCardProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * The content of the card element.\n   */\n  children: React.ReactNode;\n  /**\n   * Optional class names for additional styling or overriding default styles.\n   */\n  className?: string;\n}\n\nconst ULThemeCard = ({ children, className, ...rest }: ULThemeCardProps) => {\n  const themeClasses = cn(\n    \"px-10\",\n    \"py-10\",\n    \"theme-universal:bg-widget-bg\",\n    \"theme-universal:border-(--color-widget-border)\",\n    \"theme-universal:rounded-widget\",\n    \"theme-universal:shadow-widget\",\n    \"theme-universal:border-(length:--border-widget)\",\n    className\n  );\n\n  return (\n    <Card className={themeClasses} {...rest}>\n      {children}\n    </Card>\n  );\n};\n\nexport default ULThemeCard;\n","import { useMemo } from \"react\";\n\nimport LoginPassword from \"@auth0/auth0-acul-js/login-password\";\nimport type { ScreenMembersOnLoginPassword } from \"@auth0/auth0-acul-js/types\";\n\nimport { executeSafely } from \"@/utils/helpers/executeSafely\";\n\n/**\n * Custom hook to manage the LoginPassword screen functionality.\n * This hook provides methods and properties to handle login with password,\n * federated login, and other related functionalities like CAPTCHA and error handling.\n */\nexport const useLoginPasswordManager = () => {\n  // Initialize the LoginPassword instance\n  const loginPasswordInstance = useMemo(() => new LoginPassword(), []);\n\n  // Extract transaction and screen properties from the LoginPassword instance\n  const { transaction, screen } = loginPasswordInstance;\n\n  // Extract relevant flags from the transaction object\n  const { isSignupEnabled, isForgotPasswordEnabled, isPasskeyEnabled } =\n    transaction;\n\n  // Extract relevant properties from the screen object\n  const {\n    signupLink,\n    resetPasswordLink,\n    texts,\n    captchaImage,\n    editIdentifierLink,\n    links,\n    data,\n  } = screen;\n\n  /**\n   * Handles the login process using a username and password.\n   * Optionally includes a CAPTCHA value if required.\n   *\n   * @param loginId - The username or email address of the user.\n   * @param password - The password of the user.\n   * @param captcha - (Optional) The CAPTCHA value if required.\n   * @returns A promise that resolves when the login process is complete.\n   */\n  const handleLoginPassword = async (\n    loginId: string,\n    password: string,\n    captcha?: string\n  ): Promise<void> => {\n    const options: { username: string; password: string; captcha?: string } = {\n      username: loginId?.trim() || \"\",\n      password: password?.trim() || \"\",\n    };\n\n    // Include CAPTCHA in the options if available and provided\n    if (screen.isCaptchaAvailable && captcha?.trim()) {\n      options.captcha = captcha.trim();\n    }\n\n    // Execute the login process safely and log any errors\n    executeSafely(\n      `LoginPassword with options: ${JSON.stringify(options)}`,\n      () => loginPasswordInstance.login(options)\n    );\n  };\n\n  return {\n    loginPasswordInstance,\n    handleLoginPassword,\n    texts: (texts || {}) as ScreenMembersOnLoginPassword[\"texts\"],\n    isSignupEnabled: isSignupEnabled === true,\n    isForgotPasswordEnabled: isForgotPasswordEnabled === true,\n    isPasskeyEnabled: isPasskeyEnabled === true,\n    isCaptchaAvailable: screen.isCaptchaAvailable === true,\n    errors: loginPasswordInstance.getErrors(),\n    links,\n    editIdentifierLink,\n    signupLink,\n    resetPasswordLink,\n    captchaImage,\n    data,\n  };\n};\n","import ULThemeLink from \"@/components/ULThemeLink\";\nimport { rebaseLinkToCurrentOrigin } from \"@/utils/helpers/urlUtils\";\n\nimport { useLoginPasswordManager } from \"../hooks/useLoginPasswordManager\";\n\nfunction Footer() {\n  const { isSignupEnabled, signupLink, texts } = useLoginPasswordManager();\n\n  if (!isSignupEnabled) {\n    return null;\n  }\n\n  const localizedSignupLink = rebaseLinkToCurrentOrigin(signupLink);\n\n  // Handle text fallbacks in component\n  const footerText = texts?.footerText || \"Don't have an account?\";\n  const footerLinkText = texts?.footerLinkText || \"Sign up\";\n\n  return (\n    <div className=\"mt-4 text-left\">\n      <span className=\"text-sm pr-1\">{footerText}</span>\n      {localizedSignupLink && (\n        <ULThemeLink href={localizedSignupLink}>{footerLinkText}</ULThemeLink>\n      )}\n    </div>\n  );\n}\n\nexport default Footer;\n","import * as React from \"react\";\n\nimport { Avatar as AvatarPrimitive } from \"@base-ui-components/react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Avatar({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Root>) {\n  return (\n    <AvatarPrimitive.Root\n      data-slot=\"avatar\"\n      className={cn(\n        \"relative flex size-8 shrink-0 overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarImage({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Image>) {\n  return (\n    <AvatarPrimitive.Image\n      data-slot=\"avatar-image\"\n      className={cn(\"aspect-square size-full\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarFallback({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        \"bg-muted flex size-full items-center justify-center rounded-full\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Avatar, AvatarFallback, AvatarImage };\n","import { cn } from \"@/lib/utils\";\nimport { extractTokenValue } from \"@/utils/helpers/tokenUtils\";\n\nimport { Avatar, AvatarImage } from \"./ui/avatar\";\n\nexport interface ULThemeLogoProps\n  extends React.HTMLAttributes<HTMLSpanElement> {\n  /**\n   * Optional image url of the logo.\n   */\n  imageUrl?: string;\n  /**\n   * Alt Text for the logo image\n   */\n  altText: string;\n  /**\n   * Optional Classes for custom overrides\n   */\n  className?: string;\n}\n\nconst ULThemeLogo = ({\n  imageUrl,\n  altText,\n  className,\n  ...rest\n}: ULThemeLogoProps) => {\n  // Using extractTokenValue utility to extract the logo URL, Logo Visible flags from CSS variable\n  const themedLogoSrcValue = extractTokenValue(\"--ul-theme-widget-logo-url\");\n  const isLogoHidden =\n    extractTokenValue(\"--ul-theme-widget-logo-position\") === \"none\";\n  const themedStylesAvatar = \"flex flex-wrap justify-widget-logo\";\n  const themedStylesAvatarImg = \"h-(--height-widget-logo)\";\n  const logoSrc = themedLogoSrcValue || imageUrl;\n\n  return (\n    !isLogoHidden && (\n      <div className={cn(themedStylesAvatar, className)}>\n        <Avatar className=\"size-auto rounded-none\">\n          <AvatarImage\n            src={logoSrc}\n            alt={altText}\n            className={cn(themedStylesAvatarImg)}\n            loading=\"eager\" // Default should load an image immediately\n            decoding=\"async\" // Decode the image asynchronously\n            fetchPriority=\"high\" // Fetch the image at a high priority\n            {...rest}\n          />\n        </Avatar>\n      </div>\n    )\n  );\n};\nexport default ULThemeLogo;\n","import type { HTMLAttributes, ReactNode } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport interface ULThemeSubtitleProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * The subtitle of the screen.\n   */\n  children: ReactNode;\n  /**\n   * Optional class names for additional styling or overriding default styles.\n   */\n  className?: string;\n}\n\nconst ULThemeSubtitle = ({\n  children,\n  className,\n  ...rest\n}: ULThemeSubtitleProps) => {\n  const themedStyles =\n    \"mb-4 text-body-text justify-text-header text-(length:--ul-theme-font-subtitle-size) font-subtitle\";\n\n  return (\n    <p className={cn(themedStyles, className)} {...rest}>\n      {children}\n    </p>\n  );\n};\n\nexport default ULThemeSubtitle;\n","import type { HTMLAttributes, ReactNode } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport interface ULThemeTitleProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * The title of the screen.\n   */\n  children: ReactNode;\n  /**\n   * Optional class names for additional styling or overriding default styles.\n   */\n  className?: string;\n}\n\nconst ULThemeTitle = ({ children, className, ...rest }: ULThemeTitleProps) => {\n  const themedStyles =\n    \"mt-6 mb-4 text-header justify-text-header text-(length:--ul-theme-font-title-size) font-title\";\n\n  return (\n    <h1 className={cn(themedStyles, className)} {...rest}>\n      {children}\n    </h1>\n  );\n};\n\nexport default ULThemeTitle;\n","import ULThemeLogo from \"@/components/ULThemeLogo\";\nimport ULThemeSubtitle from \"@/components/ULThemeSubtitle\";\nimport ULThemeTitle from \"@/components/ULThemeTitle\";\n\nimport { useLoginPasswordManager } from \"../hooks/useLoginPasswordManager\";\n\nfunction Header() {\n  const { texts } = useLoginPasswordManager();\n\n  // Handle text fallbacks in component\n  const logoAltText = texts?.logoAltText || \"Application Logo\";\n\n  return (\n    <>\n      <ULThemeLogo altText={logoAltText}></ULThemeLogo>\n      <ULThemeTitle>{texts?.title || \"Welcome\"}</ULThemeTitle>\n      <ULThemeSubtitle>\n        {texts?.description ||\n          \"Enter your password for My Company to continue to My App\"}\n      </ULThemeSubtitle>\n    </>\n  );\n}\n\nexport default Header;\n","import { useForm } from \"react-hook-form\";\n\nimport type { Error } from \"@auth0/auth0-acul-js/types\";\n\nimport Captcha from \"@/components/Captcha\";\nimport {\n  ULThemeFloatingLabelField,\n  ULThemeFormMessage,\n} from \"@/components/form\";\nimport { Form, FormField, FormItem } from \"@/components/ui/form\";\nimport { ULThemeAlert, ULThemeAlertTitle } from \"@/components/ULThemeError\";\nimport ULThemeLink from \"@/components/ULThemeLink\";\nimport { ULThemePasswordField } from \"@/components/ULThemePasswordField\";\nimport { ULThemePrimaryButton } from \"@/components/ULThemePrimaryButton\";\nimport { getFieldError } from \"@/utils/helpers/errorUtils\";\nimport { getIdentifierDetails } from \"@/utils/helpers/identifierUtils\";\nimport { rebaseLinkToCurrentOrigin } from \"@/utils/helpers/urlUtils\";\n\nimport { useLoginPasswordManager } from \"../hooks/useLoginPasswordManager\";\n\ninterface LoginPasswordFormData {\n  username: string;\n  password: string;\n  captcha?: string;\n}\n\n/**\n * IdentifierForm Component\n *\n * This component renders the login form for the LoginPassword screen.\n * It includes fields for username, password, and CAPTCHA (if required),\n * along with error handling and support for editing identifiers.\n */\nfunction IdentifierForm() {\n  // Extract necessary methods and properties from the custom hook\n  const {\n    links,\n    data,\n    handleLoginPassword,\n    errors,\n    isCaptchaAvailable,\n    captchaImage,\n    resetPasswordLink,\n    isForgotPasswordEnabled,\n    loginPasswordInstance,\n    texts,\n  } = useLoginPasswordManager();\n\n  // Initialize the form using react-hook-form\n  const form = useForm<LoginPasswordFormData>({\n    defaultValues: {\n      username: data?.username || \"\",\n      password: \"\",\n      captcha: \"\",\n    },\n  });\n\n  const {\n    formState: { isSubmitting },\n  } = form;\n\n  // Handle text fallbacks for button and field labels\n  const buttonText = texts?.buttonText || \"Continue\";\n  const passwordLabelText = texts?.passwordPlaceholder || \"Password\";\n  const captchaLabel = texts?.captchaCodePlaceholder?.concat(\"*\") || \"CAPTCHA*\";\n  const captchaImageAlt = \"CAPTCHA challenge\"; // Default fallback\n  const forgotPasswordText = texts?.forgotPasswordText || \"Forgot Password?\";\n\n  // Extract general errors (not field-specific) from the SDK\n  const generalErrors =\n    errors?.filter((error: Error) => !error.field || error.field === null) ||\n    [];\n\n  // Extract field-specific errors for username, password, and CAPTCHA\n  const usernameSDKError =\n    getFieldError(\"username\", errors) || getFieldError(\"email\", errors);\n  const passwordSDKError = getFieldError(\"password\", errors);\n  const captchaSDKError = getFieldError(\"captcha\", errors);\n\n  // Get allowed identifiers (e.g., email, username, phone) from the SDK\n  const allowedIdentifiers =\n    loginPasswordInstance?.transaction?.getAllowedIdentifiers() || [];\n\n  // Get password policy (e.g., minimum length) from the SDK\n  const passwordPolicy =\n    loginPasswordInstance?.transaction?.getPasswordPolicy();\n\n  // Determine the label and type for the username field based on allowed identifiers\n  const { label: usernameLabel, type: usernameType } = getIdentifierDetails(\n    allowedIdentifiers,\n    texts\n  );\n\n  /**\n   * Handles form submission.\n   *\n   * @param data - The form data containing username, password, and optional CAPTCHA.\n   */\n  const onSubmit = async (data: LoginPasswordFormData) => {\n    await handleLoginPassword(data.username, data.password, data.captcha);\n  };\n\n  // Rebase the reset password link to the current origin\n  const localizedResetPasswordLink =\n    resetPasswordLink && rebaseLinkToCurrentOrigin(resetPasswordLink);\n\n  // Rebase the edit identifier link to the current origin\n  const editIdentifierLink =\n    rebaseLinkToCurrentOrigin(links?.edit_identifier) || \"\";\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-2\">\n        {/* General error messages */}\n        {generalErrors.length > 0 && (\n          <div className=\"space-y-3 mb-4\">\n            {generalErrors.map((error: Error, index: number) => (\n              <ULThemeAlert key={index}>\n                <ULThemeAlertTitle>{error.message}</ULThemeAlertTitle>\n              </ULThemeAlert>\n            ))}\n          </div>\n        )}\n\n        {/* Username input field */}\n        <FormField\n          control={form.control}\n          name=\"username\"\n          render={({ field, fieldState }) => (\n            <FormItem>\n              <ULThemeFloatingLabelField\n                {...field}\n                label={usernameLabel}\n                type={usernameType}\n                value={data?.username || \"\"}\n                error={!!fieldState.error || !!usernameSDKError}\n                readOnly={true}\n                endAdornment={\n                  <ULThemeLink href={editIdentifierLink}>\n                    {texts?.editEmailText || \"Edit\"}\n                  </ULThemeLink>\n                }\n                className=\"pr-[16px]\"\n              />\n              <ULThemeFormMessage\n                sdkError={usernameSDKError}\n                hasFormError={!!fieldState.error}\n              />\n            </FormItem>\n          )}\n        />\n\n        {/* Password input field */}\n        <FormField\n          control={form.control}\n          name=\"password\"\n          rules={{\n            required: \"Password is required\",\n            maxLength: {\n              value: 200,\n              message: \"Maximum 200 characters allowed\",\n            },\n            minLength: passwordPolicy?.minLength\n              ? {\n                  value: passwordPolicy.minLength,\n                  message: `Password must be at least ${passwordPolicy.minLength} characters`,\n                }\n              : undefined,\n          }}\n          render={({ field, fieldState }) => (\n            <FormItem>\n              <ULThemePasswordField\n                {...field}\n                label={passwordLabelText}\n                autoFocus={true}\n                autoComplete=\"current-password\"\n                error={!!fieldState.error || !!passwordSDKError}\n              />\n              <ULThemeFormMessage\n                sdkError={passwordSDKError}\n                hasFormError={!!fieldState.error}\n              />\n            </FormItem>\n          )}\n        />\n\n        {/* CAPTCHA Box */}\n        {isCaptchaAvailable &&\n          (passwordSDKError || captchaSDKError || generalErrors.length > 0) && (\n            <Captcha\n              control={form.control}\n              name=\"captcha\"\n              label={captchaLabel}\n              imageUrl={captchaImage || \"\"}\n              imageAltText={captchaImageAlt}\n              className=\"mb-4\"\n              sdkError={captchaSDKError}\n              rules={{\n                required: \"Please complete the CAPTCHA\",\n                maxLength: {\n                  value: 15,\n                  message: \"CAPTCHA too long\",\n                },\n              }}\n            />\n          )}\n\n        {/* Forgot Password link */}\n        <div className=\"text-left mb-4\">\n          {isForgotPasswordEnabled && localizedResetPasswordLink && (\n            <ULThemeLink href={localizedResetPasswordLink}>\n              {forgotPasswordText}\n            </ULThemeLink>\n          )}\n        </div>\n\n        {/* Submit button */}\n        <ULThemePrimaryButton\n          type=\"submit\"\n          className=\"w-full\"\n          disabled={isSubmitting}\n        >\n          {buttonText}\n        </ULThemePrimaryButton>\n      </form>\n    </Form>\n  );\n}\n\nexport default IdentifierForm;\n","import ULThemeCard from \"@/components/ULThemeCard\";\nimport ULThemePageLayout from \"@/components/ULThemePageLayout\";\nimport { applyAuth0Theme } from \"@/utils/theme/themeEngine\";\n\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport IdentifierForm from \"./components/IdentifierForm\";\nimport { useLoginPasswordManager } from \"./hooks/useLoginPasswordManager\";\n\nfunction LoginPasswordScreen() {\n  // Extracting attributes from hook made out of LoginPasswordInstance class of Auth0 JS SDK\n  const { loginPasswordInstance } = useLoginPasswordManager();\n\n  // Apply theme from SDK instance when screen loads\n  applyAuth0Theme(loginPasswordInstance);\n\n  return (\n    // Applying UDS theme overrides using the \"theme-universal\" class\n    <ULThemePageLayout className=\"theme-universal\">\n      <ULThemeCard className=\"w-full max-w-[400px] gap-0\">\n        <Header />\n        <IdentifierForm />\n        <Footer />\n      </ULThemeCard>\n    </ULThemePageLayout>\n  );\n}\n\nexport default LoginPasswordScreen;\n","/**\n * In a development environment, this utility dynamically loads a mock JSON file\n * based on the `VITE_SCREEN_NAME` environment variable and sets it to the\n * global `universal_login_context` object. This allows for rapid UI\n * development and testing of screen-specific components.\n *\n * Assumes `scripts/dev-screen.js` (in dev mode) has validated `VITE_SCREEN_NAME`\n * and the existence of the corresponding mock JSON file.\n */\nexport async function loadAndSetMockContext(): Promise<void> {\n  if (!import.meta.env.DEV) {\n    return;\n  }\n\n  const screenName = import.meta.env.VITE_SCREEN_NAME;\n\n  if (!screenName) {\n    console.error(\n      \"DEV_ERROR: VITE_SCREEN_NAME not set. Use 'npm run screen <screen-name>'. Defaulting to empty context for dev.\"\n    );\n    // @ts-expect-error - It's safe to assign an empty object here because the\n    // themeEngine, the primary consumer, is now robust enough to handle it.\n    window.universal_login_context = {};\n    return;\n  }\n\n  try {\n    console.log(`[DEV] Loading mock data for screen: ${screenName}...`);\n    // Dynamically import the mock data file for the specified screen\n    const mockDataModule = await import(`../../mock-data/${screenName}.json`);\n    console.log(`[DEV] Successfully loaded mock data for: ${screenName}`);\n    window.universal_login_context = mockDataModule.default;\n  } catch (error) {\n    console.error(\n      `DEV_ERROR: Failed to load mock data for '${screenName}.json'. ` +\n        `Ensure file exists. Dev script should have caught this. Error:`,\n      error\n    );\n    // @ts-expect-error - It's safe to assign an empty object here because the\n    // themeEngine, the primary consumer, is now robust enough to handle it.\n    window.universal_login_context = {};\n  }\n}\n","import { lazy } from \"react\";\n\nconst SCREEN_COMPONENTS: Record<string, React.ComponentType> = {\n  \"login-id\": lazy(() => import(\"@/screens/login-id\")),\n  login: lazy(() => import(\"@/screens/login\")),\n  \"login-password\": lazy(() => import(\"@/screens/login-password\")),\n};\n\nexport const getScreenComponent = (\n  screenName: string\n): React.ComponentType | null => {\n  return SCREEN_COMPONENTS[screenName] || null;\n};\n","import { Suspense, useEffect, useState } from \"react\";\n\nimport { getCurrentScreen } from \"@auth0/auth0-acul-js\";\n\nimport { getScreenComponent } from \"@/utils/screen/screenLoader\";\n\nconst App = () => {\n  const [screen, setScreen] = useState(\"login-id\");\n\n  useEffect(() => {\n    const current = getCurrentScreen();\n    setScreen(current || \"login-id\");\n  }, []);\n\n  const ScreenComponent = getScreenComponent(screen);\n\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      {ScreenComponent ? (\n        <ScreenComponent />\n      ) : (\n        <div>Screen &quot;{screen}&quot; not implemented yet</div>\n      )}\n    </Suspense>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { loadAndSetMockContext } from \"@/utils/screen/mockContextLoader\";\n\nimport \"./index.css\";\n\nimport App from \"./App.tsx\";\n\nasync function initializeApp() {\n  await loadAndSetMockContext();\n\n  /**\n   * ACUL Integration Note:\n   * The following lines handle the specific way this React application is integrated\n   * into Auth0's Universal Login page. Auth0 provides the base HTML DOM.\n   * This script then creates a 'div' (rootElement),\n   * appends it to Auth0's document.body, and then mounts the React application onto this div.\n   * This differs from typical setups where an index.html is bundled directly with the app.\n   */\n  const rootElement = document.createElement(\"div\");\n  rootElement.id = \"root\";\n\n  document.body.appendChild(rootElement);\n\n  createRoot(document.getElementById(\"root\")!).render(\n    <StrictMode>\n      <App />\n    </StrictMode>\n  );\n}\n\ninitializeApp();\n"],"file":"index.WQj7G3xx.js"}