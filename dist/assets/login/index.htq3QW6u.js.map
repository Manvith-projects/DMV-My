{"version":3,"mappings":"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","names":["cn","inputs","twMerge","clsx","ULThemePageLayout","children","className","rest","rootClasses","jsxs","jsx","LoginScreen","useEffect","showPassword","setShowPassword","useState","togglePassword","s","e","Card","props","ULThemeCard","themeClasses","ULThemeSeparator","text","containerStyles","themedLineStyles","themedTextStyles","extractTokenValue","varName","flattenColors","colors","result","calculateBorderRadius","style","defaultRadius","fallbackRadius","flattenBorders","borders","buttonBorderRadius","inputBorderRadius","flattenFonts","fonts","processFontType","fontData","fontType","sizePercent","calculatedSize","remValue","flattenPageBackground","pageBackground","layoutMap","flattenWidget","widget","positionMap","alignmentMap","currentThemeCache","PRECEDENCE_VARIABLE_MAPPING","applyAuth0Theme","screenInstance","clearThemeCache","themeData","extractThemeData","applyThemeVariables","theme","settingsVars","extractBrandingOverrides","themeVars","extractThemeVariables","organizationVars","branding","overrides","applyMappedOverrides","source","mapping","authPath","cssVar","value","getNestedValue","obj","path","current","key","newTheme","changedVars","findChangedVariables","updateDOMVariables","updateThemeCache","changed","variables","documentStyle","buttonVariants","cva","Button","variant","size","render","defaultProps","useRender","ULThemeSocialProviderButton","onClick","iconComponent","displayName","buttonText","disabled","dataTestId","baseStyles","enabledStyles","disabledStyles","variantThemeOverrides","DefaultConnectionIcon","getIcon","generateDisplayName","connection","word","getSocialProviderDetails","executeSafely","actionDescription","actionFn","useLoginIdManager","loginIdInstance","useMemo","LoginIdInstance","transaction","screen","isSignupEnabled","isForgotPasswordEnabled","isPasskeyEnabled","signupLink","resetPasswordLink","texts","captchaImage","loginId","captcha","options","connectionName","AlternativeLogins","connections","handleFederatedLogin","handlePasskeyLogin","passkeyButtonText","Fragment","socialButtonText","linkVariants","Link","underline","ref","ULThemeLink","linkStyleValue","rebaseLinkToCurrentOrigin","originalLink","targetOrigin","url","error","Footer","localizedSignupLink","footerText","footerLinkText","Avatar","AvatarPrimitive.Root","AvatarImage","AvatarPrimitive.Image","ULThemeLogo","imageUrl","altText","themedLogoSrcValue","isLogoHidden","themedStylesAvatar","themedStylesAvatarImg","logoSrc","ULThemeSubtitle","ULThemeTitle","Header","logoAltText","floatingLabelFieldVariants","FloatingLabelField","React.forwardRef","helperText","label","startAdornment","endAdornment","focused","setFocused","React.useState","hasValue","setHasValue","isDisabled","handleFocus","handleBlur","handleChange","isLabelFloating","FieldPrimitive.Root","FieldPrimitive.Label","FieldPrimitive.Control","Form","FormProvider","FormFieldContext","React.createContext","FormField","Controller","useFormField","fieldContext","React.useContext","itemContext","FormItemContext","getFieldState","useFormContext","formState","useFormState","fieldState","id","FormItem","React.useId","FormMessage","formMessageId","body","ulThemeFloatingLabelFieldVariants","ULThemeFloatingLabelField","wrapperClassName","formItemId","effectiveVariant","themeOverrides","BaseFloatingLabelField","ULThemeFormMessage","sdkError","hasFormError","showIcon","AlertCircle","ULThemeCountryCodePicker","forwardRef","selectedCountry","placeholder","isLoading","fullWidth","widthStyles","ChevronRight","alertVariants","Alert","AlertTitle","ULThemeAlert","ULThemeAlertTitle","ULThemePrimaryButton","sizeThemeOverrides","COUNTRY_DATA","transformAuth0CountryCode","countryCode","countryPrefix","countryInfo","isPhoneNumberSupported","identifiers","identifier","getFieldError","fieldName","errors","err","createIdentifierKey","hasEmail","hasPhone","hasUsername","getIdentifierDetails","connectionAttributes","screenTexts","finalLabel","finalType","finalAutoComplete","identifierKey","config","IdentifierForm","handleLoginId","handlePickCountryCode","form","useForm","isSubmitting","forgotPasswordText","generalErrors","identifierSDKError","allowedIdentifiers","identifierLabel","identifierType","identifierAutoComplete","onSubmit","data","localizedResetPasswordLink","shouldShowCountryPicker","index","field","LoginIdScreen","socialConnectionsList","showSeparator","separatorText","socialLoginAlignment","renderSocialLogins","alignment","useLoginPasswordManager","loginPasswordInstance","LoginPassword","editIdentifierLink","links","password","Captcha","name","control","rules","imageAltText","imageContainerStyles","TooltipProvider","delayDuration","TooltipPrimitive.Provider","Tooltip","TooltipPrimitive.Root","TooltipTrigger","TooltipPrimitive.Trigger","TooltipContent","arrow","side","sideOffset","TooltipPrimitive.Portal","TooltipPrimitive.Positioner","TooltipPrimitive.Popup","TooltipPrimitive.Arrow","ULThemePasswordField","onVisibilityToggle","buttonClassName","handleToggle","newState","passwordButton","EyeOff","Eye","handleLoginPassword","isCaptchaAvailable","passwordLabelText","captchaLabel","captchaImageAlt","usernameSDKError","passwordSDKError","captchaSDKError","passwordPolicy","usernameLabel","usernameType","LoginPasswordScreen","loadAndSetMockContext","SCREEN_COMPONENTS","lazy","__vitePreload","index$1","index$2","getScreenComponent","screenName","App","setScreen","getCurrentScreen","ScreenComponent","Suspense","initializeApp","rootElement","createRoot","StrictMode"],"ignoreList":[],"sources":["../../../src/lib/utils.ts","../../../src/components/ULThemePageLayout.tsx","../../../src/screens/login/index.tsx","../../../src/components/ui/card.tsx","../../../src/components/ULThemeCard.tsx","../../../src/components/ULThemeSeparator.tsx","../../../src/utils/helpers/tokenUtils.ts","../../../src/utils/theme/themeFlatteners.ts","../../../src/utils/theme/themeEngine.ts","../../../src/components/ui/button.tsx","../../../src/components/ULThemeSocialProviderButton.tsx","../../../src/assets/icons/DefaultConnectionIcon.tsx","../../../src/utils/helpers/iconUtils.tsx","../../../src/utils/helpers/socialUtils.ts","../../../src/utils/helpers/executeSafely.ts","../../../src/screens/login-id/hooks/useLoginIdManager.ts","../../../src/screens/login-id/components/AlternativeLogins.tsx","../../../src/components/ui/link.tsx","../../../src/components/ULThemeLink.tsx","../../../src/utils/helpers/urlUtils.ts","../../../src/screens/login-id/components/Footer.tsx","../../../src/components/ui/avatar.tsx","../../../src/components/ULThemeLogo.tsx","../../../src/components/ULThemeSubtitle.tsx","../../../src/components/ULThemeTitle.tsx","../../../src/screens/login-id/components/Header.tsx","../../../src/components/ui/floating-label-field.tsx","../../../src/components/ui/form.tsx","../../../src/components/form/ULThemeFloatingLabelField.tsx","../../../src/components/form/ULThemeFormMessage.tsx","../../../src/components/ULThemeCountryCodePicker.tsx","../../../src/components/ui/alert.tsx","../../../src/components/ULThemeError.tsx","../../../src/components/ULThemePrimaryButton.tsx","../../../src/utils/helpers/countryUtils.ts","../../../src/utils/helpers/errorUtils.ts","../../../src/utils/helpers/identifierUtils.ts","../../../src/screens/login-id/components/IdentifierForm.tsx","../../../src/screens/login-id/index.tsx","../../../src/screens/login-password/hooks/useLoginPasswordManager.ts","../../../src/screens/login-password/components/Footer.tsx","../../../src/screens/login-password/components/Header.tsx","../../../src/components/Captcha.tsx","../../../src/components/ui/tooltip.tsx","../../../src/components/ULThemePasswordField.tsx","../../../src/screens/login-password/components/IdentifierForm.tsx","../../../src/screens/login-password/index.tsx","../../../src/utils/screen/mockContextLoader.ts","../../../src/utils/screen/screenLoader.ts","../../../src/App.tsx","../../../src/main.tsx"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n","import type { HTMLAttributes, ReactNode } from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface ULThemePageLayoutProps extends HTMLAttributes<HTMLDivElement> {\r\n  /**\r\n   * The content of the layout.\r\n   */\r\n  children: ReactNode;\r\n  /**\r\n   * Optional class names for additional styling or overriding default styles.\r\n   */\r\n  className?: string;\r\n}\r\n\r\nconst ULThemePageLayout = ({\r\n  children,\r\n  className,\r\n  ...rest\r\n}: ULThemePageLayoutProps) => {\r\n  // Use theme token utilities for page alignment and background.\r\n  const rootClasses = cn(\"w-full min-h-screen\", \"justify-page-layout\", className);\r\n\r\n  return (\r\n    <div className={rootClasses} {...rest}>\r\n      {/* UL top blue header\r\n          Color/gradient comes from `.ul-topbar` rules in `src/index.css` (uses hard-coded gradient)\r\n          Logo image is read from the UL theme CSS variable `--ul-theme-widget-logo-url` set in `:root` of `src/index.css`.\r\n      */}\r\n      <div className=\"ul-topbar\">\r\n        <div className=\"container mx-auto py-9 px-6 flex items-center justify-between h-14\">\r\n          <div className=\"flex items-center\">\r\n            {/* Logo container\r\n                Background image reads from CSS variable `--ul-theme-widget-logo-url` (defined in `src/index.css` :root). The sizing/positioning is controlled by `.ul-logo` styles.\r\n            */}\r\n            <div\r\n              className=\"ul-logo bg-no-repeat bg-contain\"\r\n              style={{\r\n                backgroundImage:\r\n                  \"url('https://www.dmv.ca.gov/imageserver/theme_10up/images/logo-ca-gov.svg')\",\r\n                height: \"36px\",\r\n                width: \"160px\",\r\n              }}\r\n              aria-hidden\r\n            />\r\n            <div\r\n              // remove visual gap by nudging the second logo left\r\n              className=\"ul-logo bg-no-repeat bg-contain -ml-20\"\r\n              style={{\r\n                backgroundImage:\r\n                  \"url('https://www.dmv.ca.gov/imageserver/theme_10up/images/logo-ca-dmv-white.svg')\",\r\n                height: \"36px\",\r\n                width: \"160px\",\r\n              }}\r\n              aria-hidden\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-4\">\r\n            {/* Global logo (globe icon) placed before Translate button */}\r\n            <span className=\"bg-white p-1 rounded-full\" aria-hidden=\"true\">\r\n              <i\r\n                className=\"fa-solid fa-globe\"\r\n                style={{ color: \"#000\" }}\r\n                aria-hidden=\"true\"\r\n              ></i>\r\n            </span>\r\n            <button className=\"translate-btn\">Translate</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* White nav strip with centered Home text */}\r\n      {/* Navigation strip\r\n          Background is white set by `.ul-nav` rules in `src/index.css` (keeps the centered white bar below the blue header).\r\n      */}\r\n      <div className=\"ul-nav\">\r\n        <div className=\"container mx-auto px-6\">\r\n          <div className=\"py-4 text-center font-bold\">Home</div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Hero/banner area\r\n          Visual color/illustration is applied via `.ul-hero` rules in `src/index.css` which set gradients and the angled white strip (::after).\r\n          If provided, the theme token `--ul-theme-page-bg-background-image-url` (in `:root` of `src/index.css` or injected by theme engine) will set a background image via the inline style here.\r\n          The `hero-title` text color/size is controlled by `.ul-hero .hero-title` rules in `src/index.css`.\r\n      */}\r\n      <div\r\n        className=\"ul-hero\"\r\n        style={{\r\n          position: \"relative\", // ensure stacking context for overlap\r\n          zIndex: 1,\r\n          backgroundImage: `url('https://www.dmv.ca.gov/imageserver/theme_10up/images/hero-mountains.png')`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          clipPath: \"polygon(0 0, 100% 0, 100% 69%, 0 98%)\",\r\n          minHeight: \"400px\",\r\n        }}\r\n      >\r\n        <div className=\"container mx-auto px-9 relative bg-cover\">\r\n          <div className=\"absolute inset-0 flex items-start justify-start\">\r\n            <h1\r\n              className=\"hero-title m-10\"\r\n              style={{ fontFamily: \"tt-commons-800-italic, sans-serif\" }}\r\n            >\r\n              LOG IN\r\n            </h1>\r\n          </div>\r\n        </div>\r\n            </div>\r\n\r\n      {/* Screen content inserted here */}\r\n      {/* Main content wrapper\r\n          Make the content overlap the hero by using a negative top margin and higher z-index.\r\n          You can adjust the `marginTop` value to control how much the content overlays the hero.\r\n      */}\r\n      <div\r\n        className=\"ul-content relative w-full\"\r\n        style={{\r\n          marginTop: \"-150px\", // negative margin to lift content over the hero\r\n          zIndex: 20,\r\n        }}\r\n      >\r\n        {/* Wider container so screens can occupy more horizontal space (now using `max-w-7xl`) */}\r\n        <div className=\"container mx-auto px-6 w-full max-w-7xl\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ULThemePageLayout;\r\n","import { useEffect, useState } from \"react\";\r\nimport ULThemePageLayout from \"@/components/ULThemePageLayout\";\r\n\r\nfunction LoginScreen() {\r\n  useEffect(() => {\r\n    document.title = \"Login\";\r\n  }, []);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const togglePassword = () => setShowPassword((s) => !s);\r\n\r\n  return (\r\n    <ULThemePageLayout className=\"theme-universal\">\r\n      <div className=\"login-page min-h-screen flex flex-col z-30\">\r\n        {/* Header and hero are supplied by the UL theme wrapper; screens should only render screen-level containers */}\r\n\r\n        {/* Centered card */}\r\n        <main className=\"container mx-auto px-6 -mt-16 mb-16 z-30 max-w-7xl\">\r\n          <div className=\"max-w-7xl mx-auto\">\r\n            <div className=\"login-card bg-white rounded overflow-hidden w-full\">\r\n              <div className=\"p-6\">\r\n                <h2 className=\"welcome-title\">Welcome Back</h2>\r\n                <hr className=\"divider mb-4\" />\r\n\r\n                <form className=\"login-container\" onSubmit={(e) => e.preventDefault()}>\r\n                  <div className=\"wallet-login mb-4 flex items-start gap-3\">\r\n                    <div className=\"wallet-icon h-10 w-10 rounded overflow-hidden bg-white flex items-center justify-center\">\r\n                      <img\r\n                        src=\"https://cdn.dmv.ca.gov/dmv-cdn/prod/isam/images/mdl/ca-dmv-wallet-icon.png\"\r\n                        alt=\"CA DMV Wallet\"\r\n                        className=\"h-full w-full object-contain\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                        <a href=\"#\" className=\"wallet-link text-link font-medium links\" >Log in with CA DMV Wallet App</a>\r\n                      <div className=\"wallet-subtitle text-xs text-muted\">No password needed</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"section-title mb-3\">MyDMV</div>\r\n\r\n                 \r\n\r\n                  <p className=\"register-text mb-4 small-note\">\r\n                    <strong>Not Registered?</strong> In order to log in, you will first need to <a href=\"#\" className=\"text-link underline links\">create an account</a>.\r\n                  </p>\r\n\r\n                  <div className=\"form-group mb-4\">\r\n                    <label htmlFor=\"email\" className=\"form-label label-text\">Email</label>\r\n                    <input id=\"email\" name=\"email\" type=\"email\" className=\"form-input input-field w-full\" placeholder=\"Email\" />\r\n                    <a href=\"#\" className=\"helper-link text-link mt-2 inline-block links\">No longer have access to your email address?</a>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-4\">\r\n                    <label htmlFor=\"password\" className=\"form-label label-text\">Password</label>\r\n                    <div className=\"password-wrapper relative\">\r\n                      <input id=\"password\" name=\"password\" type={showPassword ? \"text\" : \"password\"} className=\"form-input input-field w-full pr-10\" placeholder=\"Password\" />\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={togglePassword}\r\n                        className=\"toggle-password absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400\"\r\n                        aria-label=\"Show password\"\r\n                      >\r\n                        👁️\r\n                      </button>\r\n                    </div>\r\n                    <a href=\"#\" className=\"helper-link text-link mt-2 inline-block links\">Forgot your password?</a>\r\n                  </div>\r\n\r\n                  <div className=\"mb-6\">\r\n                    <button type=\"submit\" className=\"login-button\">Log In</button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n\r\n        <footer className=\"mt-auto\"></footer>\r\n      </div>\r\n    </ULThemePageLayout>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground shadow-bevel-2xl flex flex-col gap-6 rounded-4xl py-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardAction,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n};\r\n","import { cn } from \"@/lib/utils\";\r\n\r\nimport { Card } from \"./ui/card\";\r\n\r\nexport interface ULThemeCardProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  /**\r\n   * The content of the card element.\r\n   */\r\n  children: React.ReactNode;\r\n  /**\r\n   * Optional class names for additional styling or overriding default styles.\r\n   */\r\n  className?: string;\r\n}\r\n\r\nconst ULThemeCard = ({ children, className, ...rest }: ULThemeCardProps) => {\r\n  const themeClasses = cn(\r\n    \"px-10\",\r\n    \"py-10\",\r\n    \"theme-universal:bg-widget-bg\",\r\n    \"theme-universal:border-(--color-widget-border)\",\r\n    \"theme-universal:rounded-widget\",\r\n    \"theme-universal:shadow-widget\",\r\n    \"theme-universal:border-(length:--border-widget)\",\r\n    className\r\n  );\r\n\r\n  return (\r\n    <Card className={themeClasses} {...rest}>\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ULThemeCard;\r\n","import { cn } from \"@/lib/utils\";\r\n\r\nexport interface ULThemeSeparatorProps {\r\n  /**\r\n   * Optional text to display in the middle of the separator\r\n   */\r\n  text?: string;\r\n  /**\r\n   * Optional class names for additional styling or overriding default styles\r\n   */\r\n  className?: string;\r\n}\r\n\r\nconst ULThemeSeparator = ({ text, className }: ULThemeSeparatorProps) => {\r\n  // Base styles\r\n  const containerStyles = \"relative flex items-center my-4\";\r\n\r\n  // Theme overrides for line\r\n  const themedLineStyles = cn(\r\n    \"flex-grow border-t\",\r\n    \"theme-universal:border-input-border\"\r\n  );\r\n\r\n  // Theme overrides for text\r\n  const themedTextStyles = cn(\r\n    \"flex-shrink px-2\",\r\n    \"theme-universal:text-body-text\",\r\n    \"theme-universal:text-(length:--ul-theme-font-body-text-size)\",\r\n    \"theme-universal:font-body\"\r\n  );\r\n\r\n  if (text) {\r\n    return (\r\n      <div className={cn(containerStyles, className)}>\r\n        <div className={themedLineStyles} />\r\n        <span className={themedTextStyles}>{text}</span>\r\n        <div className={themedLineStyles} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <hr className={cn(\"my-4\", themedLineStyles, className)} />;\r\n};\r\n\r\nexport default ULThemeSeparator;\r\n","/**\r\n *  Extract and return the Token CSS Variable data from the token string\r\n */\r\nexport const extractTokenValue = (varName: string): string => {\r\n  return getComputedStyle(document.documentElement)\r\n    .getPropertyValue(varName)\r\n    .trim()\r\n    .replace(/^\"(.*)\"$/, \"$1\"); // Remove quotes\r\n};\r\n","/**\r\n * This module handles the conversion of Auth0 branding data structures into\r\n * CSS custom properties (variables) with proper unit conversions and formatting.\r\n *\r\n * KEY RESPONSIBILITIES:\r\n * - Convert Auth0 nested objects to flat CSS variable mappings\r\n * - Apply proper unit conversions (percentages to rem, numbers to px, etc.)\r\n * - Handle special formatting for URLs, shadows, and layout values\r\n * - Maintain consistent naming convention: --ul-theme-{category}-{property}\r\n *\r\n * UNIT CONVERSION EXAMPLES:\r\n * - Font sizes: 150% → 1.5rem, 87.5% → 0.875rem\r\n * - Font weights: true → 700, false → 400\r\n * - URLs: \"url\" → \"url\" (quoted for CSS)\r\n *\r\n * USAGE FLOW:\r\n * Branding Data from ACUL SDK → Flattener Functions → CSS Variables → DOM Injection\r\n *\r\n */\r\n\r\ninterface ColorData {\r\n  primary_button?: string;\r\n  primary_button_label?: string;\r\n  secondary_button_border?: string;\r\n  secondary_button_label?: string;\r\n  base_focus_color?: string;\r\n  base_hover_color?: string;\r\n  links_focused_components?: string;\r\n  header?: string;\r\n  body_text?: string;\r\n  widget_background?: string;\r\n  widget_border?: string;\r\n  input_labels_placeholders?: string;\r\n  input_filled_text?: string;\r\n  input_border?: string;\r\n  input_background?: string;\r\n  icons?: string;\r\n  error?: string;\r\n  success?: string;\r\n  captcha_widget_theme?: string;\r\n}\r\n\r\ninterface BorderData {\r\n  button_border_radius?: number;\r\n  buttons_style?: string;\r\n  input_border_radius?: number;\r\n  inputs_style?: string;\r\n  widget_corner_radius?: number;\r\n  button_border_weight?: number;\r\n  input_border_weight?: number;\r\n  widget_border_weight?: number;\r\n  show_widget_shadow?: boolean;\r\n}\r\n\r\ninterface FontData {\r\n  reference_text_size?: number;\r\n  title?: {\r\n    size?: number;\r\n    bold?: boolean;\r\n  };\r\n  subtitle?: {\r\n    size?: number;\r\n    bold?: boolean;\r\n  };\r\n  body_text?: {\r\n    size?: number;\r\n    bold?: boolean;\r\n  };\r\n  buttons_text?: {\r\n    size?: number;\r\n    bold?: boolean;\r\n  };\r\n  input_labels?: {\r\n    size?: number;\r\n    bold?: boolean;\r\n  };\r\n  links?: {\r\n    size?: number;\r\n    bold?: boolean;\r\n  };\r\n  links_style?: string;\r\n}\r\n\r\ninterface WidgetData {\r\n  logo_position?: string;\r\n  logo_url?: string;\r\n  logo_height?: number;\r\n  header_text_alignment?: string;\r\n  social_buttons_layout?: string;\r\n}\r\n\r\n/**\r\n * Flatten color data to CSS variables\r\n */\r\nexport function flattenColors(colors: ColorData): Record<string, string> {\r\n  const result: Record<string, string> = {};\r\n\r\n  if (colors.primary_button)\r\n    result[\"--ul-theme-color-primary-button\"] = colors.primary_button;\r\n  if (colors.primary_button_label)\r\n    result[\"--ul-theme-color-primary-button-label\"] =\r\n      colors.primary_button_label;\r\n  if (colors.secondary_button_border)\r\n    result[\"--ul-theme-color-secondary-button-border\"] =\r\n      colors.secondary_button_border;\r\n  if (colors.secondary_button_label)\r\n    result[\"--ul-theme-color-secondary-button-label\"] =\r\n      colors.secondary_button_label;\r\n  if (colors.base_focus_color)\r\n    result[\"--ul-theme-color-base-focus-color\"] = colors.base_focus_color;\r\n  if (colors.base_hover_color)\r\n    result[\"--ul-theme-color-base-hover-color\"] = colors.base_hover_color;\r\n  if (colors.links_focused_components)\r\n    result[\"--ul-theme-color-links-focused-components\"] =\r\n      colors.links_focused_components;\r\n  if (colors.header) result[\"--ul-theme-color-header\"] = colors.header;\r\n  if (colors.body_text) result[\"--ul-theme-color-body-text\"] = colors.body_text;\r\n  if (colors.widget_background)\r\n    result[\"--ul-theme-color-widget-background\"] = colors.widget_background;\r\n  if (colors.widget_border)\r\n    result[\"--ul-theme-color-widget-border\"] = colors.widget_border;\r\n  if (colors.input_labels_placeholders)\r\n    result[\"--ul-theme-color-input-labels-placeholders\"] =\r\n      colors.input_labels_placeholders;\r\n  if (colors.input_filled_text)\r\n    result[\"--ul-theme-color-input-filled-text\"] = colors.input_filled_text;\r\n  if (colors.input_border)\r\n    result[\"--ul-theme-color-input-border\"] = colors.input_border;\r\n  if (colors.input_background)\r\n    result[\"--ul-theme-color-input-background\"] = colors.input_background;\r\n  if (colors.icons) result[\"--ul-theme-color-icons\"] = colors.icons;\r\n  if (colors.error) result[\"--ul-theme-color-error\"] = colors.error;\r\n  if (colors.success) result[\"--ul-theme-color-success\"] = colors.success;\r\n  if (colors.captcha_widget_theme)\r\n    result[\"--ul-theme-color-captcha-widget-theme\"] =\r\n      colors.captcha_widget_theme;\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Helper function to calculate border radius based on style\r\n */\r\nfunction calculateBorderRadius(\r\n  style: string,\r\n  defaultRadius: number | undefined,\r\n  fallbackRadius: number = 10\r\n): number {\r\n  switch (style) {\r\n    case \"pill\":\r\n      return 9999;\r\n    case \"sharp\":\r\n      return 0;\r\n    case \"rounded\":\r\n    default:\r\n      return defaultRadius || fallbackRadius;\r\n  }\r\n}\r\n\r\n/**\r\n * Flatten border data to CSS variables with proper unit conversions\r\n */\r\nexport function flattenBorders(borders: BorderData): Record<string, string> {\r\n  const result: Record<string, string> = {};\r\n\r\n  // Calculate border radius values based on style, with automatic assignment\r\n  const buttonBorderRadius = borders.buttons_style\r\n    ? calculateBorderRadius(borders.buttons_style, borders.button_border_radius)\r\n    : borders.button_border_radius;\r\n\r\n  const inputBorderRadius = borders.inputs_style\r\n    ? calculateBorderRadius(borders.inputs_style, borders.input_border_radius)\r\n    : borders.input_border_radius;\r\n\r\n  if (buttonBorderRadius !== undefined)\r\n    result[\"--ul-theme-border-button-border-radius\"] =\r\n      `${buttonBorderRadius}px`;\r\n  if (inputBorderRadius !== undefined)\r\n    result[\"--ul-theme-border-input-border-radius\"] = `${inputBorderRadius}px`;\r\n  if (borders.widget_corner_radius)\r\n    result[\"--ul-theme-border-widget-corner-radius\"] =\r\n      `${borders.widget_corner_radius}px`;\r\n\r\n  // Border weight values need px units\r\n  if (borders.button_border_weight !== undefined)\r\n    result[\"--ul-theme-border-button-border-weight\"] =\r\n      `${borders.button_border_weight}px`;\r\n  if (borders.input_border_weight !== undefined)\r\n    result[\"--ul-theme-border-input-border-weight\"] =\r\n      `${borders.input_border_weight}px`;\r\n  if (borders.widget_border_weight !== undefined)\r\n    result[\"--ul-theme-border-widget-border-weight\"] =\r\n      `${borders.widget_border_weight}px`;\r\n\r\n  // Style values are already strings\r\n  if (borders.buttons_style)\r\n    result[\"--ul-theme-border-buttons-style\"] = borders.buttons_style;\r\n  if (borders.inputs_style)\r\n    result[\"--ul-theme-border-inputs-style\"] = borders.inputs_style;\r\n\r\n  // Boolean/numeric values for shadow - convert boolean to actual shadow values\r\n  if (borders.show_widget_shadow !== undefined)\r\n    result[\"--ul-theme-border-show-widget-shadow\"] = borders.show_widget_shadow\r\n      ? \"0px 12px 40px 0px rgba(0, 0, 0, 0.12)\"\r\n      : \"none\";\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Flatten font data to CSS variables with proper unit conversions\r\n */\r\nexport function flattenFonts(fonts: FontData): Record<string, string> {\r\n  const result: Record<string, string> = {};\r\n\r\n  // Reference text size is in pixels\r\n  if (fonts.reference_text_size)\r\n    result[\"--ul-theme-font-reference-text-size\"] =\r\n      `${fonts.reference_text_size}px`;\r\n\r\n  // Helper function to process font size and weight for each font type\r\n  const processFontType = (\r\n    fontData: { size?: number; bold?: boolean } | undefined,\r\n    fontType: string\r\n  ): void => {\r\n    if (fontData?.size) {\r\n      const sizePercent = fontData.size as number;\r\n\r\n      // Universal percentage-based sizing: ALL font types calculate as percentage of reference_text_size\r\n      if (fonts.reference_text_size) {\r\n        const referenceSize = fonts.reference_text_size as number;\r\n        const calculatedSize = (referenceSize * sizePercent) / 100;\r\n        result[`--ul-theme-font-${fontType}-size`] = `${calculatedSize}px`;\r\n      } else {\r\n        // Fallback: convert percentage to rem if no reference size available\r\n        const remValue = sizePercent / 100;\r\n        result[`--ul-theme-font-${fontType}-size`] = `${remValue}rem`;\r\n      }\r\n    }\r\n\r\n    if (fontData?.bold !== undefined) {\r\n      result[`--ul-theme-font-${fontType}-weight`] = fontData.bold\r\n        ? \"700\"\r\n        : \"400\";\r\n    }\r\n  };\r\n\r\n  processFontType(fonts.title, \"title\");\r\n  processFontType(fonts.subtitle, \"subtitle\");\r\n  processFontType(fonts.body_text, \"body-text\");\r\n  processFontType(fonts.buttons_text, \"buttons-text\");\r\n  processFontType(fonts.input_labels, \"input-labels\");\r\n  processFontType(fonts.links, \"links\");\r\n\r\n  // Links style (normal/italic)\r\n  if (fonts.links_style)\r\n    result[\"--ul-theme-font-links-style\"] = fonts.links_style;\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Flatten page background data to CSS variables\r\n */\r\nexport function flattenPageBackground(pageBackground: {\r\n  background_color?: string;\r\n  background_image_url?: string;\r\n  page_layout?: string;\r\n}): Record<string, string> {\r\n  const result: Record<string, string> = {};\r\n\r\n  if (pageBackground.background_color)\r\n    result[\"--ul-theme-page-bg-background-color\"] =\r\n      pageBackground.background_color;\r\n  if (pageBackground.background_image_url) {\r\n    result[\"--ul-theme-page-bg-background-image-url\"] =\r\n      pageBackground.background_image_url === null ||\r\n      pageBackground.background_image_url === \"\"\r\n        ? \"none\"\r\n        : `url(\"${pageBackground.background_image_url}\")`;\r\n  }\r\n  if (pageBackground.page_layout) {\r\n    // Convert to CSS justify-content values for use with arbitrary properties\r\n    const layoutMap: Record<string, string> = {\r\n      center: \"center\",\r\n      left: \"flex-start\",\r\n      right: \"flex-end\",\r\n    };\r\n    result[\"--ul-theme-page-bg-page-layout\"] =\r\n      layoutMap[pageBackground.page_layout] || \"center\";\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Flatten widget data to CSS variables with proper unit conversions\r\n */\r\nexport function flattenWidget(widget: WidgetData): Record<string, string> {\r\n  const result: Record<string, string> = {};\r\n\r\n  // Logo Source URL\r\n  if (widget.logo_url)\r\n    result[\"--ul-theme-widget-logo-url\"] = `\"${widget.logo_url}\"`;\r\n\r\n  // Logo height needs px units\r\n  if (widget.logo_height)\r\n    result[\"--ul-theme-widget-logo-height\"] = `${widget.logo_height}px`;\r\n\r\n  // Logo position: convert Auth0 values to Tailwind justify values\r\n  if (widget.logo_position) {\r\n    // Convert to Tailwind semantic variable\r\n    const positionMap: Record<string, string> = {\r\n      center: \"center\",\r\n      left: \"flex-start\",\r\n      right: \"flex-end\",\r\n      none: \"none\",\r\n    };\r\n    result[\"--ul-theme-widget-logo-position\"] =\r\n      positionMap[widget.logo_position] || \"center\";\r\n  }\r\n\r\n  // Header text alignment: convert Auth0 values to CSS text-align values\r\n  if (widget.header_text_alignment) {\r\n    result[\"--ul-theme-widget-header-text-alignment\"] =\r\n      widget.header_text_alignment;\r\n\r\n    // Convert to CSS text-align values for use with arbitrary properties\r\n    const alignmentMap: Record<string, string> = {\r\n      center: \"center\",\r\n      left: \"left\",\r\n      right: \"right\",\r\n    };\r\n    result[\"--text-align-header\"] =\r\n      alignmentMap[widget.header_text_alignment] || \"center\";\r\n  }\r\n  if (widget.social_buttons_layout)\r\n    result[\"--ul-theme-widget-social-buttons-layout\"] =\r\n      widget.social_buttons_layout;\r\n\r\n  return result;\r\n}\r\n","/**\r\n * This module is the main orchestrator for the Auth0 theme system.\r\n *\r\n * KEY RESPONSIBILITIES:\r\n * - Extract theme data from Auth0 screen instances with proper precedence\r\n * - Coordinate theme flattening and CSS variable generation\r\n * - Handle precedence system: Organization > Theme > Settings\r\n *\r\n * PRECEDENCE SYSTEM:\r\n * 1. Settings (lowest priority) - screenInstance.branding.settings\r\n * 2. Theme (medium priority) - screenInstance.branding.themes.default\r\n * 3. Organization (highest priority) - screenInstance.organization.branding\r\n *\r\n * USAGE PATTERN:\r\n * ```typescript\r\n * // In any Auth0 screen component\r\n * import { applyAuth0Theme } from \"@/utils/theme\";\r\n *\r\n * function LoginScreen() {\r\n *   const { screenInstance } = useScreenManager();\r\n *   applyAuth0Theme(screenInstance); // Apply theme when screen loads\r\n *   return <div>...</div>;\r\n * }\r\n * ```\r\n *\r\n * FLOW:\r\n * Screen Instance from ACUL SDK → Theme Extraction → Flattening → Change Detection → DOM Update\r\n */\r\n\r\nimport type {\r\n  BrandingMembers,\r\n  OrganizationMembers,\r\n} from \"@auth0/auth0-acul-js/types\";\r\n\r\nimport {\r\n  flattenBorders,\r\n  flattenColors,\r\n  flattenFonts,\r\n  flattenPageBackground,\r\n  flattenWidget,\r\n} from \"./themeFlatteners\";\r\n\r\ninterface Auth0ScreenInstance {\r\n  branding?: BrandingMembers;\r\n  organization?: OrganizationMembers;\r\n}\r\n\r\n// Cache for performance optimization - tracks current theme state\r\nlet currentThemeCache: Record<string, string> = {};\r\n\r\n// Essential variable mappings for precedence overrides\r\n// Maps Auth0 data paths to CSS variable names\r\nconst PRECEDENCE_VARIABLE_MAPPING = {\r\n  \"colors.primary\": \"--ul-theme-color-primary-button\",\r\n  \"colors.page_background\": \"--ul-theme-page-bg-background-color\",\r\n  logoUrl: \"--ul-theme-widget-logo-url\",\r\n} as const;\r\n\r\n/**\r\n * Main theme application function\r\n * Applies Auth0 branding data as CSS variables with proper precedence\r\n * USAGE PATTERN:\r\n * ```typescript\r\n * // In any Auth0 screen component\r\n * import { applyAuth0Theme } from \"@/utils/theme\";\r\n *\r\n * function LoginScreen() {\r\n *   const { screenInstance } = useScreenManager();\r\n *   applyAuth0Theme(screenInstance); // Apply theme when screen loads\r\n *   return <div>...</div>;\r\n * }\r\n * ```\r\n */\r\nexport function applyAuth0Theme(screenInstance: Auth0ScreenInstance): void {\r\n  if (!screenInstance?.branding) {\r\n    return;\r\n  }\r\n\r\n  clearThemeCache();\r\n  const themeData = extractThemeData(screenInstance);\r\n  applyThemeVariables(themeData);\r\n}\r\n\r\n/**\r\n * Extracts and merges theme data with precedence handling\r\n * Precedence order (lowest to highest): Settings -> Theme -> Organization\r\n */\r\nfunction extractThemeData(\r\n  screenInstance: Auth0ScreenInstance\r\n): Record<string, string> {\r\n  const theme =\r\n    screenInstance.branding?.themes?.default || ({} as Record<string, unknown>);\r\n\r\n  const settingsVars = extractBrandingOverrides(\r\n    screenInstance.branding?.settings as Record<string, unknown> | undefined\r\n  );\r\n  const themeVars = extractThemeVariables(theme as Record<string, unknown>);\r\n  const organizationVars = extractBrandingOverrides(\r\n    screenInstance.organization?.branding as Record<string, unknown> | undefined\r\n  );\r\n\r\n  return { ...settingsVars, ...themeVars, ...organizationVars };\r\n}\r\n\r\n/**\r\n * Extracts core theme variables from theme object\r\n */\r\nfunction extractThemeVariables(\r\n  theme: Record<string, unknown>\r\n): Record<string, string> {\r\n  return {\r\n    ...flattenColors(theme.colors || {}),\r\n    ...flattenBorders(theme.borders || {}),\r\n    ...flattenFonts(theme.fonts || {}),\r\n    ...flattenPageBackground(\r\n      theme.pageBackground || theme.page_background || {}\r\n    ),\r\n    ...flattenWidget(theme.widget || {}),\r\n  };\r\n}\r\n\r\n/**\r\n * Extracts branding overrides from settings or organization data\r\n * Handles both settings and organization sources with the same logic\r\n */\r\nfunction extractBrandingOverrides(\r\n  branding: Record<string, unknown> | undefined\r\n): Record<string, string> {\r\n  const overrides: Record<string, string> = {};\r\n\r\n  if (branding) {\r\n    applyMappedOverrides(branding, PRECEDENCE_VARIABLE_MAPPING, overrides);\r\n  }\r\n\r\n  return overrides;\r\n}\r\n\r\n/**\r\n * Applies mapped overrides from source object to overrides object\r\n * Handles special formatting for specific CSS variables\r\n */\r\nfunction applyMappedOverrides(\r\n  source: Record<string, unknown>,\r\n  mapping: Record<string, string>,\r\n  overrides: Record<string, string>\r\n): void {\r\n  Object.entries(mapping).forEach(([authPath, cssVar]) => {\r\n    const value = getNestedValue(source, authPath);\r\n    if (value && typeof value === \"string\") {\r\n      // Handle special formatting for specific variables\r\n      if (cssVar === \"--ul-theme-widget-logo-url\") {\r\n        overrides[cssVar] = `\"${value}\"`;\r\n      } else if (cssVar === \"--ul-theme-widget-logo-height\") {\r\n        // Logo height needs px units\r\n        overrides[cssVar] = typeof value === \"number\" ? `${value}px` : value;\r\n      } else {\r\n        overrides[cssVar] = value;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction getNestedValue(\r\n  obj: Record<string, unknown>,\r\n  path: string\r\n): string | undefined {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  return path.split(\".\").reduce((current: any, key) => current?.[key], obj) as\r\n    | string\r\n    | undefined;\r\n}\r\n\r\n/**\r\n * Applies theme variables to DOM with performance optimization\r\n * Only updates variables that have actually changed\r\n */\r\nfunction applyThemeVariables(newTheme: Record<string, string>): void {\r\n  const changedVars = findChangedVariables(newTheme);\r\n\r\n  if (Object.keys(changedVars).length === 0) {\r\n    return;\r\n  }\r\n\r\n  updateDOMVariables(changedVars);\r\n  updateThemeCache(changedVars);\r\n}\r\n\r\n/**\r\n * Identifies which variables have changed compared to cache\r\n */\r\nfunction findChangedVariables(\r\n  newTheme: Record<string, string>\r\n): Record<string, string> {\r\n  const changed: Record<string, string> = {};\r\n\r\n  Object.entries(newTheme).forEach(([varName, value]) => {\r\n    if (currentThemeCache[varName] !== value) {\r\n      changed[varName] = value;\r\n    }\r\n  });\r\n\r\n  return changed;\r\n}\r\n\r\n/**\r\n * Updates CSS custom properties in the DOM\r\n */\r\nfunction updateDOMVariables(variables: Record<string, string>): void {\r\n  const documentStyle = document.documentElement.style;\r\n\r\n  Object.entries(variables).forEach(([varName, value]) => {\r\n    documentStyle.setProperty(varName, value);\r\n  });\r\n}\r\n\r\nfunction updateThemeCache(changedVars: Record<string, string>): void {\r\n  currentThemeCache = { ...currentThemeCache, ...changedVars };\r\n}\r\n\r\nexport function clearThemeCache(): void {\r\n  currentThemeCache = {};\r\n}\r\n\r\nexport const getCaptchaTheme = (\r\n  theme: \"light\" | \"dark\" | \"auto\" | undefined\r\n) => {\r\n  if (theme === \"auto\") {\r\n    if (\r\n      window.matchMedia &&\r\n      window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n    ) {\r\n      return \"dark\";\r\n    }\r\n    return \"light\";\r\n  }\r\n  return theme || \"light\";\r\n};\r\n","\"use client\";\r\n\r\nimport { useRender } from \"@base-ui-components/react/use-render\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst buttonVariants = cva(\r\n  \"focus-visible:ring-ring aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive theme-default:active:scale-[0.99] relative box-border inline-flex shrink-0 items-center justify-center gap-2 overflow-hidden text-sm font-medium whitespace-nowrap transition-all duration-150 ease-in-out outline-none focus-visible:ring-4 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        primary:\r\n          \"shadow-button-resting hover:shadow-button-hover hover:border-primary/50 border-primary bg-primary text-primary-foreground hover:bg-primary/90 theme-default:before:from-primary-foreground/0 theme-default:before:to-primary-foreground/15 theme-default:before:absolute theme-default:before:top-0 theme-default:before:left-0 theme-default:before:block theme-default:before:h-full theme-default:before:w-full theme-default:before:bg-gradient-to-t theme-default:before:content-[''] border\",\r\n        outline:\r\n          \"dark:bg-muted/50 hover:text-accent-foreground shadow-button-outlined-resting hover:shadow-button-outlined-hover hover:border-accent bg-background hover:bg-muted text-primary border-primary/35 theme-default:before:from-primary/5 theme-default:before:to-primary/0 theme-default:before:absolute theme-default:before:top-0 theme-default:before:left-0 theme-default:before:block theme-default:before:h-full theme-default:before:w-full theme-default:before:bg-gradient-to-t theme-default:before:content-[''] border\",\r\n        ghost: \"hover:bg-muted text-primary bg-transparent\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90 shadow-button-destructive-resting hover:shadow-button-destructive-hover border-destructive-border/25 hover:border-destructive-border/50 theme-default:before:to-primary-foreground/50 theme-default:before:absolute theme-default:before:top-0 theme-default:before:left-0 theme-default:before:block theme-default:before:h-full theme-default:before:w-full theme-default:before:bg-gradient-to-t theme-default:before:content-[''] theme-default:border\",\r\n        link: \"text-foreground underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 rounded-2xl px-4 py-2.5 has-[>svg]:px-3\",\r\n        xs: \"h-7 rounded-md px-2 py-1.5 text-xs has-[>svg]:px-2\",\r\n        sm: \"h-8 gap-1.5 rounded-xl px-3 py-2 text-xs has-[>svg]:px-2.5\",\r\n        lg: \"h-12 rounded-3xl px-6 py-3 text-base has-[>svg]:px-4\",\r\n        icon: \"size-7 rounded-xl\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"primary\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface ButtonProps\r\n  extends useRender.ComponentProps<\"button\">,\r\n    VariantProps<typeof buttonVariants> {}\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  render = <button />,\r\n  ...props\r\n}: ButtonProps) {\r\n  const defaultProps: useRender.ElementProps<\"button\"> = {\r\n    className: cn(buttonVariants({ variant, size }), className),\r\n  };\r\n\r\n  return useRender({\r\n    render,\r\n    props: { ...defaultProps, ...props },\r\n  });\r\n}\r\n\r\nexport { Button, buttonVariants };\r\n","import { Button, type ButtonProps } from \"@/components/ui/button\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface ULThemeSocialProviderButtonProps\r\n  extends React.HTMLAttributes<HTMLButtonElement>,\r\n    ButtonProps {\r\n  /**\r\n   * The icon to be displayed in the social login button component\r\n   */\r\n  iconComponent: React.ReactNode | null;\r\n  /**\r\n   * The display Name to be displayed in the social login button component\r\n   */\r\n  displayName: string;\r\n  /**\r\n   * The button text to be displayed in the social login button component\r\n   */\r\n  buttonText: string;\r\n  /**\r\n   * Optional class names for additional styling or overriding default styles.\r\n   */\r\n  className?: string;\r\n}\r\n\r\nconst ULThemeSocialProviderButton = ({\r\n  onClick,\r\n  variant = \"outline\",\r\n  size = \"default\",\r\n  iconComponent,\r\n  displayName,\r\n  buttonText,\r\n  disabled = false,\r\n  className,\r\n  ...rest\r\n}: ULThemeSocialProviderButtonProps) => {\r\n  // Data Test Id needed for targetting element\r\n  const dataTestId = `social-provider-button-${displayName.toLowerCase().replace(/\\s+/g, \"-\")}`;\r\n\r\n  // Base Styles getting applied for look and feel\r\n  const baseStyles =\r\n    \"flex items-center justify-start w-full max-w-[320px] h-[52px] py-[14px] px-[16px] gap-x-4\";\r\n\r\n  // Keeping the button enable and disable styles as is. Will need to revisit this in future if needed\r\n  const enabledStyles =\r\n    \"bg-white border-gray-mid text-text-default cursor-pointer\";\r\n  const disabledStyles =\r\n    \"bg-gray-mid/10 border-gray-mid/50 text-text-secondary cursor-not-allowed\";\r\n\r\n  // UL theme overrrides\r\n  const variantThemeOverrides = {\r\n    outline: cn(\r\n      \"theme-universal:font-button\", //font-weight\r\n      \"theme-universal:rounded-button\", // border-radius\r\n      \"theme-universal:border-(length:--ul-theme-border-button-border-weight)\", // border-weight or border-width\r\n      \"theme-universal:border-(--color-secondary-button-border)\", // border-color\r\n      \"theme-universal:text-(--color-secondary-button-label)\", // text label color\r\n      \"theme-universal:hover:shadow-[var(--button-hover-shadow)]\", // box-shadow on hover\r\n      \"theme-universal:focus:outline-none theme-universal:focus:ring-4 theme-universal:focus:ring-base-focus/15 theme-universal:focus:bg-base-focus/15\" // focus base color\r\n    ),\r\n    primary: \"\", // Add primary overrides if needed\r\n    secondary: \"\", // Add secondary overrides if needed\r\n    destructive: \"\", // Add destructive overrides if needed\r\n    ghost: \"\", // Add ghost overrides if needed\r\n    link: \"\", // Add link overrides if needed\r\n  };\r\n\r\n  // Combine all theme classes with proper type safety\r\n  const themeClasses = cn(variant && variantThemeOverrides[variant]);\r\n\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      size={size}\r\n      className={cn(\r\n        baseStyles,\r\n        disabled ? disabledStyles : enabledStyles,\r\n        themeClasses,\r\n        className\r\n      )}\r\n      data-testid={dataTestId}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      {...rest}\r\n    >\r\n      {iconComponent && (\r\n        <span className=\"w-5 h-5 flex items-center justify-center\">\r\n          {iconComponent}\r\n        </span>\r\n      )}\r\n      <span className=\"overflow-hidden whitespace-nowrap text-ellipsis text-base\">\r\n        {buttonText}\r\n      </span>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ULThemeSocialProviderButton;\r\n","import type { SVGProps } from \"react\";\r\n\r\nexport const DefaultConnectionIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    width=\"20\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    {...props}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M5.2978e-06 2.35529C3.89779e-06 1.73149 0.247459 1.13317 0.688082 0.69161C1.12871 0.250051 1.7265 0.00132161 2.3503 0H10.5888C11.2126 0.00132161 11.8104 0.250051 12.251 0.69161C12.6917 1.13317 12.9391 1.73149 12.9391 2.35529V4.72555C12.9391 5.35021 13.1873 5.94929 13.629 6.39099C14.0707 6.83269 14.6698 7.08084 15.2944 7.08084H17.6447C18.2685 7.08084 18.8668 7.32829 19.3084 7.76892C19.7499 8.20954 19.9987 8.80734 20 9.43114V17.6497C19.9987 18.2735 19.7499 18.8713 19.3084 19.3119C18.8668 19.7525 18.2685 20 17.6447 20H9.41118C9.10211 20.0007 8.79597 19.9403 8.51024 19.8225C8.22451 19.7047 7.96482 19.5317 7.74605 19.3134C7.52727 19.0951 7.3537 18.8358 7.23528 18.5503C7.11685 18.2648 7.0559 17.9588 7.0559 17.6497V15.2944C7.0559 14.6711 6.80827 14.0733 6.3675 13.6325C5.92674 13.1917 5.32893 12.9441 4.70559 12.9441H2.3503C2.04123 12.9441 1.7352 12.8832 1.44973 12.7647C1.16425 12.6463 0.904931 12.4727 0.68662 12.254C0.46831 12.0352 0.295296 11.7755 0.177476 11.4898C0.0596565 11.204 -0.000650893 10.8979 5.2978e-06 10.5888V2.35529ZM8.38323 6.91617C7.99054 6.92271 7.61616 7.08332 7.34079 7.36335C7.06542 7.64339 6.91113 8.02043 6.91119 8.41317V12.1357C6.91113 12.5285 7.06542 12.9055 7.34079 13.1855C7.61616 13.4656 7.99054 13.6262 8.38323 13.6327H12.1058C12.5028 13.6327 12.8836 13.475 13.1643 13.1943C13.4451 12.9135 13.6028 12.5328 13.6028 12.1357V8.41317C13.6028 8.01614 13.4451 7.63537 13.1643 7.35463C12.8836 7.07388 12.5028 6.91617 12.1058 6.91617H8.38323Z\"\r\n      fill=\"url(#paint0_linear_default_icon)\"\r\n    />\r\n    <defs>\r\n      <linearGradient\r\n        id=\"paint0_linear_default_icon\"\r\n        x1=\"-0.509765\"\r\n        y1=\"0.499999\"\r\n        x2=\"22.9902\"\r\n        y2=\"21\"\r\n        gradientUnits=\"userSpaceOnUse\"\r\n      >\r\n        <stop stopColor=\"#635DFF\" />\r\n        <stop offset=\"1\" stopColor=\"#3885FF\" />\r\n      </linearGradient>\r\n    </defs>\r\n  </svg>\r\n);\r\n","import type { ReactNode } from \"react\";\r\n\r\nimport { DefaultConnectionIcon } from \"@/assets/icons\";\r\n\r\nexport const getIcon = (): ReactNode => {\r\n  return <DefaultConnectionIcon />;\r\n};\r\n","import type {\r\n  Connection,\r\n  EnterpriseConnection,\r\n} from \"@auth0/auth0-acul-js/types\";\r\n\r\nimport { getIcon } from \"./iconUtils\";\r\n\r\nexport type SocialConnection = Connection | EnterpriseConnection;\r\n\r\ninterface SocialProviderDetails {\r\n  displayName: string;\r\n  iconComponent: React.ReactNode | null;\r\n}\r\n\r\n/**\r\n * Generates a display name for a social connection.\r\n * Prefers a direct map from connection.name, then falls back to capitalizing it.\r\n * If name is unavailable, it attempts to use the strategy.\r\n */\r\nconst generateDisplayName = (connection: SocialConnection): string => {\r\n  // Check if it's an EnterpriseConnection with options.displayName\r\n  if (\"options\" in connection && connection.options?.displayName) {\r\n    return connection.options.displayName;\r\n  }\r\n\r\n  // Fallback to capitalizing the connection.name if not in map\r\n  if (connection.name) {\r\n    return connection.name\r\n      .split(/[-_]/)\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\r\n      .join(\" \");\r\n  }\r\n\r\n  // Last resort: use strategy if name is totally missing\r\n  if (connection.strategy) {\r\n    return (\r\n      connection.strategy.charAt(0).toUpperCase() + connection.strategy.slice(1)\r\n    );\r\n  }\r\n\r\n  return \"Login Provider\";\r\n};\r\n\r\n/**\r\n * Gets the display details (displayName, iconComponent) for a social connection.\r\n */\r\nexport const getSocialProviderDetails = (\r\n  connection: SocialConnection\r\n): SocialProviderDetails => {\r\n  const displayName = generateDisplayName(connection);\r\n  const iconComponent = getIcon();\r\n\r\n  return {\r\n    displayName,\r\n    iconComponent,\r\n  };\r\n};\r\n","/**\r\n * In development mode, logs the intended action.\r\n */\r\nexport const executeSafely = <R>(\r\n  actionDescription: string,\r\n  actionFn: () => R\r\n): R | void => {\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    console.log(`[DEV ONLY] ${actionDescription}`);\r\n  } else {\r\n    return actionFn();\r\n  }\r\n};\r\n","import { useMemo } from \"react\";\r\n\r\nimport LoginIdInstance from \"@auth0/auth0-acul-js/login-id\";\r\nimport type { ScreenMembersOnLoginId } from \"@auth0/auth0-acul-js/types\";\r\n\r\nimport { executeSafely } from \"@/utils/helpers/executeSafely\";\r\n\r\nexport const useLoginIdManager = () => {\r\n  const loginIdInstance = useMemo(() => new LoginIdInstance(), []);\r\n\r\n  const { transaction, screen } = loginIdInstance;\r\n  const { isSignupEnabled, isForgotPasswordEnabled, isPasskeyEnabled } =\r\n    transaction;\r\n\r\n  const { signupLink, resetPasswordLink, texts, captchaImage } = screen;\r\n\r\n  const handleLoginId = async (\r\n    loginId: string,\r\n    captcha?: string\r\n  ): Promise<void> => {\r\n    const options: { username: string; captcha?: string } = {\r\n      username: loginId?.trim() || \"\",\r\n    };\r\n\r\n    if (screen.isCaptchaAvailable && captcha?.trim()) {\r\n      options.captcha = captcha.trim();\r\n    }\r\n    executeSafely(`LoginId with options: ${JSON.stringify(options)}`, () =>\r\n      loginIdInstance.login(options)\r\n    );\r\n  };\r\n\r\n  const handleFederatedLogin = async (connectionName: string) => {\r\n    executeSafely(`Federated login with connection: ${connectionName}`, () =>\r\n      loginIdInstance.federatedLogin({ connection: connectionName })\r\n    );\r\n  };\r\n\r\n  const handlePasskeyLogin = async () => {\r\n    if (isPasskeyEnabled) {\r\n      executeSafely(`Passkey login`, () => loginIdInstance.passkeyLogin());\r\n    }\r\n  };\r\n\r\n  const handlePickCountryCode = async () => {\r\n    executeSafely(`Pick country code`, () => loginIdInstance.pickCountryCode());\r\n  };\r\n\r\n  return {\r\n    loginIdInstance,\r\n    handleLoginId,\r\n    handleFederatedLogin,\r\n    handlePasskeyLogin,\r\n    handlePickCountryCode,\r\n    texts: (texts || {}) as ScreenMembersOnLoginId[\"texts\"],\r\n    isSignupEnabled: isSignupEnabled === true,\r\n    isForgotPasswordEnabled: isForgotPasswordEnabled === true,\r\n    isPasskeyEnabled: isPasskeyEnabled === true,\r\n    isCaptchaAvailable: screen.isCaptchaAvailable === true,\r\n    errors: loginIdInstance.getErrors(),\r\n    captchaImage,\r\n    captcha: screen.captcha || null,\r\n    signupLink,\r\n    resetPasswordLink,\r\n  };\r\n};\r\n","import ULThemeSocialProviderButton from \"@/components/ULThemeSocialProviderButton\";\r\nimport { getIcon } from \"@/utils/helpers/iconUtils\";\r\nimport type { SocialConnection } from \"@/utils/helpers/socialUtils\";\r\nimport { getSocialProviderDetails } from \"@/utils/helpers/socialUtils\";\r\n\r\nimport { useLoginIdManager } from \"../hooks/useLoginIdManager\";\r\n\r\nexport interface AlternativeLoginsProps {\r\n  connections?: SocialConnection[] | undefined;\r\n}\r\n\r\nconst AlternativeLogins = ({ connections }: AlternativeLoginsProps) => {\r\n  const { handleFederatedLogin, handlePasskeyLogin, texts, isPasskeyEnabled } =\r\n    useLoginIdManager();\r\n\r\n  // Handle text fallbacks in component\r\n  const passkeyButtonText =\r\n    texts?.passkeyButtonText || \"Continue with a passkey\";\r\n\r\n  return (\r\n    <>\r\n      <div className=\"space-y-3 mt-2\">\r\n        {isPasskeyEnabled && (\r\n          <ULThemeSocialProviderButton\r\n            key=\"passkey\"\r\n            displayName=\"Passkey\"\r\n            buttonText={passkeyButtonText}\r\n            iconComponent={<span className=\"text-primary\">{getIcon()}</span>}\r\n            onClick={() => handlePasskeyLogin()}\r\n          />\r\n        )}\r\n        {connections?.map((connection: SocialConnection) => {\r\n          const { displayName, iconComponent } =\r\n            getSocialProviderDetails(connection);\r\n          const socialButtonText = `Continue with ${displayName}`;\r\n          return (\r\n            <ULThemeSocialProviderButton\r\n              key={connection.name}\r\n              displayName={displayName}\r\n              buttonText={socialButtonText}\r\n              iconComponent={iconComponent}\r\n              onClick={() => handleFederatedLogin(connection.name)}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AlternativeLogins;\r\n","import * as React from \"react\";\r\n\r\nimport { cva, VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst linkVariants = cva(\r\n  \"focus-within:ring-ring inline-flex items-center gap-2 rounded-md py-0.5 underline-offset-4 transition-colors focus:ring-3 focus-visible:outline-hidden\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        destructive: \"text-destructive hover:text-destructive/90\",\r\n        muted: \"text-muted hover:text-muted/80\",\r\n        primary: \"text-primary hover:text-primary/90\",\r\n      },\r\n      underline: {\r\n        none: \"no-underline\",\r\n        hover: \"no-underline hover:underline\",\r\n        always: \"underline\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"primary\",\r\n      underline: \"always\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface LinkProps\r\n  extends React.AnchorHTMLAttributes<HTMLAnchorElement>,\r\n    VariantProps<typeof linkVariants> {\r\n  /**\r\n   * Optional ref for the link element.\r\n   */\r\n  ref?: React.Ref<HTMLAnchorElement>;\r\n}\r\n\r\nfunction Link({\r\n  className,\r\n  children,\r\n  variant,\r\n  underline,\r\n  ref,\r\n  ...props\r\n}: LinkProps) {\r\n  return (\r\n    <a\r\n      ref={ref}\r\n      className={cn(linkVariants({ variant, underline }), className)}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </a>\r\n  );\r\n}\r\n\r\nexport { Link };\r\n","import * as React from \"react\";\r\n\r\nimport { Link, type LinkProps } from \"@/components/ui/link\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { extractTokenValue } from \"@/utils/helpers/tokenUtils\";\r\n\r\nexport interface ULThemeLinkProps extends LinkProps {\r\n  /**\r\n   * The content of the link element.\r\n   */\r\n  children: React.ReactNode;\r\n  /**\r\n   * Additional class names for custom styling.\r\n   */\r\n  className?: string;\r\n  /**\r\n   * Optional flag to disable the link.\r\n   */\r\n  disabled?: boolean;\r\n  /**\r\n   * Optional ref for the link element.\r\n   */\r\n  ref?: React.Ref<HTMLAnchorElement>;\r\n}\r\n\r\nconst ULThemeLink = ({\r\n  children,\r\n  className,\r\n  disabled = false,\r\n  ref,\r\n  ...props\r\n}: ULThemeLinkProps) => {\r\n  // Base component styles\r\n  const baseStyles =\r\n    \"text-link-focus text-(length:--ul-theme-font-links-size) font-(weight:--ul-theme-font-links-weight) focus:rounded-(--ul-theme-border-links-border-radius) hover:text-link-focus/80\";\r\n\r\n  // Disabled state styles\r\n  const disabledStyles = disabled\r\n    ? \"pointer-events-none text-muted cursor-not-allowed\"\r\n    : \"\";\r\n\r\n  // UL theme overrides\r\n  const variantThemeOverrides =\r\n    \"theme-universal:focus:outline-none theme-universal:focus:ring-4 theme-universal:focus:ring-base-focus/15 theme-universal:focus:bg-base-focus/15\"; // focus base color\r\n\r\n  // Using extractTokenValue utility to extract the link style variant type from the CSS variable\r\n  const linkStyleValue =\r\n    extractTokenValue(\"--ul-theme-font-links-style\") === \"normal\"\r\n      ? \"none\"\r\n      : \"always\";\r\n\r\n  return (\r\n    <Link\r\n      ref={ref}\r\n      className={cn(\r\n        baseStyles,\r\n        disabledStyles,\r\n        variantThemeOverrides,\r\n        className\r\n      )}\r\n      underline={linkStyleValue}\r\n      aria-disabled={disabled}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ULThemeLink;\r\n","/**\r\n * Takes a URL (absolute or relative) and rebases it to the current window's origin,\r\n * preserving the path and query parameters.\r\n */\r\nexport const rebaseLinkToCurrentOrigin = (\r\n  originalLink: string | undefined | null\r\n): string | undefined | null => {\r\n  if (typeof window === \"undefined\" || !originalLink) {\r\n    return originalLink;\r\n  }\r\n\r\n  const targetOrigin = window.location.origin;\r\n\r\n  try {\r\n    // Handle absolute URLs\r\n    if (\r\n      originalLink.startsWith(\"http://\") ||\r\n      originalLink.startsWith(\"https://\")\r\n    ) {\r\n      const url = new URL(originalLink);\r\n      return targetOrigin + url.pathname + url.search + url.hash;\r\n    }\r\n\r\n    // Handle root-relative URLs (starting with /)\r\n    if (originalLink.startsWith(\"/\")) {\r\n      const url = new URL(originalLink, targetOrigin);\r\n      return targetOrigin + url.pathname + url.search + url.hash;\r\n    }\r\n\r\n    // Handle relative URLs (no leading slash)\r\n    // Treat as relative to current path\r\n    const url = new URL(originalLink, window.location.href);\r\n    return targetOrigin + url.pathname + url.search + url.hash;\r\n  } catch (error) {\r\n    console.error(\"Failed to rebase URL:\", error, { originalLink });\r\n    return originalLink;\r\n  }\r\n};\r\n","import ULThemeLink from \"@/components/ULThemeLink\";\r\nimport { rebaseLinkToCurrentOrigin } from \"@/utils/helpers/urlUtils\";\r\n\r\nimport { useLoginIdManager } from \"../hooks/useLoginIdManager\";\r\n\r\nfunction Footer() {\r\n  const { isSignupEnabled, signupLink, texts } = useLoginIdManager();\r\n\r\n  if (!isSignupEnabled) {\r\n    return null;\r\n  }\r\n\r\n  const localizedSignupLink = rebaseLinkToCurrentOrigin(signupLink);\r\n\r\n  // Handle text fallbacks in component\r\n  const footerText = texts?.footerText || \"Don't have an account?\";\r\n  const footerLinkText = texts?.footerLinkText || \"Sign up\";\r\n\r\n  return (\r\n    <div className=\"mt-4 text-left\">\r\n      <span className=\"pr-1 text-body-text text-(length:--ul-theme-font-body-text-size) font-body\">\r\n        {footerText}\r\n      </span>\r\n      {localizedSignupLink && (\r\n        <ULThemeLink href={localizedSignupLink}>{footerLinkText}</ULThemeLink>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import * as React from \"react\";\r\n\r\nimport { Avatar as AvatarPrimitive } from \"@base-ui-components/react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Avatar({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AvatarPrimitive.Root>) {\r\n  return (\r\n    <AvatarPrimitive.Root\r\n      data-slot=\"avatar\"\r\n      className={cn(\r\n        \"relative flex size-8 shrink-0 overflow-hidden rounded-full\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction AvatarImage({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AvatarPrimitive.Image>) {\r\n  return (\r\n    <AvatarPrimitive.Image\r\n      data-slot=\"avatar-image\"\r\n      className={cn(\"aspect-square size-full\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction AvatarFallback({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\r\n  return (\r\n    <AvatarPrimitive.Fallback\r\n      data-slot=\"avatar-fallback\"\r\n      className={cn(\r\n        \"bg-muted flex size-full items-center justify-center rounded-full\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { Avatar, AvatarFallback, AvatarImage };\r\n","import { cn } from \"@/lib/utils\";\r\nimport { extractTokenValue } from \"@/utils/helpers/tokenUtils\";\r\n\r\nimport { Avatar, AvatarImage } from \"./ui/avatar\";\r\n\r\nexport interface ULThemeLogoProps\r\n  extends React.HTMLAttributes<HTMLSpanElement> {\r\n  /**\r\n   * Optional image url of the logo.\r\n   */\r\n  imageUrl?: string;\r\n  /**\r\n   * Alt Text for the logo image\r\n   */\r\n  altText: string;\r\n  /**\r\n   * Optional Classes for custom overrides\r\n   */\r\n  className?: string;\r\n}\r\n\r\nconst ULThemeLogo = ({\r\n  imageUrl,\r\n  altText,\r\n  className,\r\n  ...rest\r\n}: ULThemeLogoProps) => {\r\n  // Using extractTokenValue utility to extract the logo URL, Logo Visible flags from CSS variable\r\n  const themedLogoSrcValue = extractTokenValue(\"--ul-theme-widget-logo-url\");\r\n  const isLogoHidden =\r\n    extractTokenValue(\"--ul-theme-widget-logo-position\") === \"none\";\r\n  const themedStylesAvatar = \"flex flex-wrap justify-widget-logo\";\r\n  const themedStylesAvatarImg = \"h-(--height-widget-logo)\";\r\n  const logoSrc = themedLogoSrcValue || imageUrl;\r\n\r\n  return (\r\n    !isLogoHidden && (\r\n      <div className={cn(themedStylesAvatar, className)}>\r\n        <Avatar className=\"size-auto rounded-none\">\r\n          <AvatarImage\r\n            src={logoSrc}\r\n            alt={altText}\r\n            className={cn(themedStylesAvatarImg)}\r\n            loading=\"eager\" // Default should load an image immediately\r\n            decoding=\"async\" // Decode the image asynchronously\r\n            fetchPriority=\"high\" // Fetch the image at a high priority\r\n            {...rest}\r\n          />\r\n        </Avatar>\r\n      </div>\r\n    )\r\n  );\r\n};\r\nexport default ULThemeLogo;\r\n","import type { HTMLAttributes, ReactNode } from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface ULThemeSubtitleProps extends HTMLAttributes<HTMLDivElement> {\r\n  /**\r\n   * The subtitle of the screen.\r\n   */\r\n  children: ReactNode;\r\n  /**\r\n   * Optional class names for additional styling or overriding default styles.\r\n   */\r\n  className?: string;\r\n}\r\n\r\nconst ULThemeSubtitle = ({\r\n  children,\r\n  className,\r\n  ...rest\r\n}: ULThemeSubtitleProps) => {\r\n  const themedStyles =\r\n    \"mb-4 text-body-text justify-text-header text-(length:--ul-theme-font-subtitle-size) font-subtitle\";\r\n\r\n  return (\r\n    <p className={cn(themedStyles, className)} {...rest}>\r\n      {children}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default ULThemeSubtitle;\r\n","import type { HTMLAttributes, ReactNode } from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface ULThemeTitleProps extends HTMLAttributes<HTMLDivElement> {\r\n  /**\r\n   * The title of the screen.\r\n   */\r\n  children: ReactNode;\r\n  /**\r\n   * Optional class names for additional styling or overriding default styles.\r\n   */\r\n  className?: string;\r\n}\r\n\r\nconst ULThemeTitle = ({ children, className, ...rest }: ULThemeTitleProps) => {\r\n  const themedStyles =\r\n    \"mt-6 mb-4 text-header justify-text-header text-(length:--ul-theme-font-title-size) font-title\";\r\n\r\n  return (\r\n    <h1 className={cn(themedStyles, className)} {...rest}>\r\n      {children}\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default ULThemeTitle;\r\n","import ULThemeLogo from \"@/components/ULThemeLogo\";\r\nimport ULThemeSubtitle from \"@/components/ULThemeSubtitle\";\r\nimport ULThemeTitle from \"@/components/ULThemeTitle\";\r\n\r\nimport { useLoginIdManager } from \"../hooks/useLoginIdManager\";\r\n\r\nfunction Header() {\r\n  const { texts } = useLoginIdManager();\r\n\r\n  // Handle text fallbacks in component\r\n  const logoAltText = texts?.logoAltText || \"Application Logo\";\r\n\r\n  return (\r\n    <>\r\n      <ULThemeLogo altText={logoAltText}></ULThemeLogo>\r\n      <ULThemeTitle>{texts?.title || \"Welcome\"}</ULThemeTitle>\r\n      <ULThemeSubtitle>\r\n        {texts?.description ||\r\n          \"Log in to dev-tenant to continue to my acul react.\"}\r\n      </ULThemeSubtitle>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import * as React from \"react\";\r\n\r\nimport { Field as FieldPrimitive } from \"@base-ui-components/react\";\r\nimport { cva, VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst floatingLabelFieldVariants = cva(\r\n  \"bg-input aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive theme-default:active:scale-[0.99] relative box-border inline-flex w-full shrink-0 cursor-text items-center justify-center text-sm transition-[color,box-shadow] duration-150 ease-in-out outline-none disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"text-input-foreground shadow-input-resting hover:shadow-input-hover focus-within:ring-ring focus-within:ring-4\",\r\n        error:\r\n          \"text-destructive-foreground shadow-input-destructive-resting hover:shadow-input-destructive-hover focus-within:ring-destructive-border/15 focus-within:ring-4\",\r\n      },\r\n      size: {\r\n        default: \"h-14 rounded-2xl\",\r\n        sm: \"h-12 rounded-2xl\",\r\n        lg: \"h-16 rounded-2xl\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface FloatingLabelFieldProps\r\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\"> {\r\n  label: string;\r\n  error?: boolean;\r\n  helperText?: string;\r\n  size?: VariantProps<typeof floatingLabelFieldVariants>[\"size\"];\r\n  variant?: VariantProps<typeof floatingLabelFieldVariants>[\"variant\"];\r\n  startAdornment?: React.ReactNode;\r\n  endAdornment?: React.ReactNode;\r\n}\r\n\r\nconst FloatingLabelField = React.forwardRef<\r\n  HTMLInputElement,\r\n  FloatingLabelFieldProps\r\n>(\r\n  (\r\n    {\r\n      className,\r\n      variant,\r\n      size,\r\n      error,\r\n      helperText,\r\n      label,\r\n      startAdornment,\r\n      endAdornment,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const [focused, setFocused] = React.useState(false);\r\n    const [hasValue, setHasValue] = React.useState(\r\n      Boolean(props.value || props.defaultValue)\r\n    );\r\n    const isDisabled = props.disabled;\r\n\r\n    const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\r\n      setFocused(true);\r\n      props.onFocus?.(e);\r\n    };\r\n\r\n    const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\r\n      setFocused(false);\r\n      setHasValue(Boolean(e.target.value));\r\n      props.onBlur?.(e);\r\n    };\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setHasValue(Boolean(e.target.value));\r\n      props.onChange?.(e);\r\n    };\r\n\r\n    const isLabelFloating = focused || hasValue;\r\n\r\n    return (\r\n      <div>\r\n        <FieldPrimitive.Root\r\n          className={cn(\r\n            floatingLabelFieldVariants({\r\n              variant: error ? \"error\" : variant,\r\n              size,\r\n            }),\r\n            \"group relative items-end gap-0.5\",\r\n            isDisabled &&\r\n              \"bg-input-muted text-input-foreground cursor-not-allowed opacity-50\",\r\n            isDisabled && variant === \"default\" && \"bg-input-muted\",\r\n            startAdornment && \"pl-[5px]\",\r\n            endAdornment && \"pr-[5px]\",\r\n            className\r\n          )}\r\n        >\r\n          <FieldPrimitive.Label\r\n            htmlFor={props.id}\r\n            className={cn(\r\n              \"pointer-events-none absolute top-1/2 left-4 z-[10] -translate-y-1/2 text-sm transition-all duration-150 ease-in-out origin-left\",\r\n              startAdornment && \"left-0\",\r\n              // Floating state - position within border area\r\n              isLabelFloating &&\r\n                \"scale-80 -translate-y-[1.18rem] top-2 z-10 bg-input px-1\",\r\n              error ? \"text-destructive-foreground\" : \"text-muted-foreground\",\r\n              focused && !error && \"text-primary\"\r\n            )}\r\n          >\r\n            {label}\r\n          </FieldPrimitive.Label>\r\n          {startAdornment && (\r\n            <div className=\"flex h-full items-center justify-center [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\r\n              {startAdornment}\r\n            </div>\r\n          )}\r\n          <div className=\"relative flex-1\">\r\n            <FieldPrimitive.Control\r\n              id={props.id}\r\n              className={cn(\r\n                \"h-14 w-full flex-1 rounded-2xl bg-transparent px-3 py-4 outline-none file:border-0 file:bg-transparent file:text-sm file:font-medium\",\r\n                // Override browser autofill styles without blocking borders\r\n                \"autofill:bg-transparent\",\r\n                \"autofill:[-webkit-text-fill-color:inherit]\",\r\n                \"autofill:[transition:background-color_9999s_ease-in-out_0s]\",\r\n                isDisabled &&\r\n                  \"bg-input-muted text-input-foreground cursor-not-allowed opacity-50\",\r\n                startAdornment ? \"rounded-l-none pl-0\" : \"pl-3\",\r\n                endAdornment ? \"rounded-r-none pr-0\" : \"pr-3\",\r\n                size === \"sm\" && \"h-12 py-3 text-sm\",\r\n                size === \"lg\" && \"h-16 py-5 text-base\"\r\n              )}\r\n              // Spread props first, then override with our handlers\r\n              // This ensures our focus/blur handlers take precedence over React Hook Form's\r\n              // allowing proper floating label state management\r\n              {...props}\r\n              ref={ref}\r\n              onFocus={handleFocus}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          {endAdornment && (\r\n            <div className=\"flex h-full items-center justify-center [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\r\n              {endAdornment}\r\n            </div>\r\n          )}\r\n        </FieldPrimitive.Root>\r\n        {helperText && (\r\n          <p\r\n            className={cn(\r\n              \"mt-1.5 text-xs\",\r\n              error ? \"text-destructive-foreground\" : \"text-muted-foreground\"\r\n            )}\r\n          >\r\n            {helperText}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nFloatingLabelField.displayName = \"FloatingLabelField\";\r\n\r\nexport { FloatingLabelField, floatingLabelFieldVariants };\r\n","\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport {\r\n  Controller,\r\n  type ControllerProps,\r\n  type FieldPath,\r\n  type FieldValues,\r\n  FormProvider,\r\n  useFormContext,\r\n  useFormState,\r\n} from \"react-hook-form\";\r\n\r\nimport { Field as FieldPrimitive } from \"@base-ui-components/react\";\r\n\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Form = FormProvider;\r\n\r\ntype FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\r\n> = {\r\n  name: TName;\r\n};\r\n\r\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\r\n  {} as FormFieldContextValue\r\n);\r\n\r\nconst FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  );\r\n};\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext);\r\n  const itemContext = React.useContext(FormItemContext);\r\n  const { getFieldState } = useFormContext();\r\n  const formState = useFormState({ name: fieldContext.name });\r\n  const fieldState = getFieldState(fieldContext.name, formState);\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\");\r\n  }\r\n\r\n  const { id } = itemContext;\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  };\r\n};\r\n\r\ntype FormItemContextValue = {\r\n  id: string;\r\n};\r\n\r\nconst FormItemContext = React.createContext<FormItemContextValue>(\r\n  {} as FormItemContextValue\r\n);\r\n\r\nfunction FormItem({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  const id = React.useId();\r\n\r\n  return (\r\n    <FormItemContext.Provider value={{ id }}>\r\n      <FieldPrimitive.Root\r\n        data-slot=\"form-item\"\r\n        className={cn(\"grid\", className)}\r\n        {...props}\r\n      />\r\n    </FormItemContext.Provider>\r\n  );\r\n}\r\n\r\nfunction FormLabel({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof FieldPrimitive.Label>) {\r\n  const { error, formItemId } = useFormField();\r\n\r\n  return (\r\n    <Label\r\n      data-slot=\"form-label\"\r\n      data-error={!!error}\r\n      className={cn(\"data-[error=true]:text-destructive\", className)}\r\n      htmlFor={formItemId}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction FormControl({\r\n  children,\r\n  ...props\r\n}: React.ComponentProps<typeof FieldPrimitive.Control> & {\r\n  children: React.ReactElement<Record<string, unknown>>;\r\n}) {\r\n  const { error, formItemId, formDescriptionId, formMessageId } =\r\n    useFormField();\r\n\r\n  return (\r\n    <FieldPrimitive.Control\r\n      data-slot=\"form-control\"\r\n      id={formItemId}\r\n      aria-describedby={\r\n        !error\r\n          ? `${formDescriptionId}`\r\n          : `${formDescriptionId} ${formMessageId}`\r\n      }\r\n      aria-invalid={!!error}\r\n      render={children}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction FormDescription({ className, ...props }: React.ComponentProps<\"p\">) {\r\n  const { formDescriptionId } = useFormField();\r\n\r\n  return (\r\n    <p\r\n      data-slot=\"form-description\"\r\n      id={formDescriptionId}\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction FormMessage({ className, ...props }: React.ComponentProps<\"p\">) {\r\n  const { error, formMessageId } = useFormField();\r\n  const body = error ? String(error?.message ?? \"\") : props.children;\r\n\r\n  if (!body) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <p\r\n      data-slot=\"form-message\"\r\n      id={formMessageId}\r\n      className={cn(\"text-destructive text-sm\", className)}\r\n      {...props}\r\n    >\r\n      {body}\r\n    </p>\r\n  );\r\n}\r\n\r\nexport {\r\n  Form,\r\n  FormControl,\r\n  FormDescription,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n  useFormField,\r\n};\r\n","import { cva } from \"class-variance-authority\";\r\n\r\nimport {\r\n  FloatingLabelField as BaseFloatingLabelField,\r\n  type FloatingLabelFieldProps as BaseFloatingLabelFieldProps,\r\n} from \"@/components/ui/floating-label-field\";\r\nimport { useFormField } from \"@/components/ui/form\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst ulThemeFloatingLabelFieldVariants = cva(\r\n  [\r\n    // Layout & Spacing\r\n    \"mb-2\",\r\n\r\n    // Base Background & Colors\r\n    \"theme-universal:bg-input-bg\",\r\n    \"theme-universal:text-input-text\",\r\n\r\n    // Border Styling\r\n    \"theme-universal:border-(length:--ul-theme-border-input-border-weight)\",\r\n    \"theme-universal:border-input-border\",\r\n\r\n    // Border Radius\r\n    \"theme-universal:rounded-input\",\r\n\r\n    // Typography - Input Text\r\n    \"theme-universal:text-(length:--ul-theme-font-body-text-size)\",\r\n    \"theme-universal:font-body-text\",\r\n\r\n    // Placeholder Styling\r\n    \"theme-universal:placeholder:text-input-labels\",\r\n    \"theme-universal:[&_input]:placeholder:text-input-labels\",\r\n    \"theme-universal:placeholder:text-(length:--ul-theme-font-input-labels-size)\",\r\n    \"theme-universal:[&_input]:placeholder:text-(length:--ul-theme-font-input-labels-size)\",\r\n    \"theme-universal:placeholder:font-input-label\",\r\n    \"theme-universal:[&_input]:placeholder:font-input-label\",\r\n\r\n    // Floating Label Background\r\n    \"theme-universal:[&_label]:bg-input-bg\",\r\n\r\n    // Floating Label - Base Styling (applies to all labels)\r\n    \"theme-universal:[&_label]:text-input-labels\",\r\n    \"theme-universal:[&_label]:text-(length:--ul-theme-font-input-labels-size)\",\r\n    \"theme-universal:[&_label]:font-input-label\",\r\n  ],\r\n  {\r\n    variants: {\r\n      themeState: {\r\n        default: [\r\n          // Focus States - Default\r\n          \"theme-universal:focus-within:border-base-focus\",\r\n          \"theme-universal:focus-within:ring-0\",\r\n\r\n          // Focus Label States - Override label color when focused\r\n          \"theme-universal:focus-within:[&_label]:text-base-focus\",\r\n        ],\r\n        error: [\r\n          // Error States\r\n          \"theme-universal:text-error\",\r\n          \"theme-universal:border-error\",\r\n          \"theme-universal:focus-within:border-error\",\r\n          \"theme-universal:focus-within:ring-0\",\r\n\r\n          // Error Label States - Force override using color CSS property\r\n          \"theme-universal:[&_label]:text-error\",\r\n        ],\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      themeState: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface ULThemeFloatingLabelFieldProps\r\n  extends BaseFloatingLabelFieldProps {\r\n  /**\r\n   * Additional wrapper class for form field container\r\n   */\r\n  wrapperClassName?: string;\r\n}\r\n\r\nfunction ULThemeFloatingLabelField({\r\n  className,\r\n  variant = \"default\",\r\n  size = \"default\",\r\n  wrapperClassName,\r\n  error,\r\n  ...props\r\n}: ULThemeFloatingLabelFieldProps) {\r\n  // Get the form field context for proper ID association\r\n  const { formItemId } = useFormField();\r\n\r\n  // Determine variant based on error prop\r\n  const effectiveVariant = error ? \"error\" : variant;\r\n\r\n  // Generate theme classes using CVA - automatically use error state when error prop is true\r\n  const themeOverrides = ulThemeFloatingLabelFieldVariants({\r\n    themeState: error ? \"error\" : \"default\",\r\n  });\r\n\r\n  return (\r\n    <div className={cn(\"w-full\", wrapperClassName)}>\r\n      <BaseFloatingLabelField\r\n        id={formItemId}\r\n        className={cn(className, themeOverrides)}\r\n        variant={effectiveVariant}\r\n        size={size}\r\n        error={error}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nULThemeFloatingLabelField.displayName = \"ULThemeFloatingLabelField\";\r\n\r\nexport { ULThemeFloatingLabelField };\r\n","import { AlertCircle } from \"lucide-react\";\r\n\r\nimport { FormMessage } from \"@/components/ui/form\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface ULThemeFormMessageProps {\r\n  /**\r\n   * SDK error message (takes precedence over form validation errors)\r\n   */\r\n  sdkError?: string;\r\n  /**\r\n   * Whether there is a form validation error\r\n   */\r\n  hasFormError?: boolean;\r\n  /**\r\n   * Whether to show the error icon\r\n   */\r\n  showIcon?: boolean;\r\n  /**\r\n   * Additional CSS classes\r\n   */\r\n  className?: string;\r\n}\r\n\r\nconst ULThemeFormMessage = ({\r\n  sdkError,\r\n  hasFormError,\r\n  showIcon = true,\r\n  className,\r\n}: ULThemeFormMessageProps) => {\r\n  // Don't render if no errors at all\r\n  if (!sdkError && !hasFormError) {\r\n    return null;\r\n  }\r\n\r\n  // Always render with consistent theming and icon for ANY error\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"flex mb-2 items-center text-sm font-medium theme-universal:text-error\",\r\n        className\r\n      )}\r\n      role=\"alert\"\r\n      aria-live=\"polite\"\r\n    >\r\n      {showIcon && <AlertCircle className=\"h-4 w-4 mr-1 flex-shrink-0\" />}\r\n      {sdkError ? (\r\n        <p className=\"text-destructive text-sm theme-universal:text-error\">\r\n          {sdkError}\r\n        </p>\r\n      ) : (\r\n        <FormMessage className=\"theme-universal:text-error\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nULThemeFormMessage.displayName = \"ULThemeFormMessage\";\r\n\r\nexport { ULThemeFormMessage };\r\n","import { forwardRef } from \"react\";\r\n\r\nimport { ChevronRight } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface ULThemeCountryCodePickerProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  /**\r\n   * Selected country information\r\n   */\r\n  selectedCountry?:\r\n    | {\r\n        name: string;\r\n        code: string; // Country code like \"DZ\"\r\n        dialCode: string; // Phone code like \"+213\"\r\n        flag: string; // Flag emoji or URL\r\n      }\r\n    | undefined;\r\n  /**\r\n   * Placeholder text when no country is selected\r\n   */\r\n  placeholder?: string;\r\n  /**\r\n   * Loading state\r\n   */\r\n  isLoading?: boolean;\r\n  /**\r\n   * Full width styling\r\n   */\r\n  fullWidth?: boolean;\r\n}\r\n\r\nconst ULThemeCountryCodePicker = forwardRef<\r\n  HTMLButtonElement,\r\n  ULThemeCountryCodePickerProps\r\n>(\r\n  (\r\n    {\r\n      selectedCountry,\r\n      placeholder = \"Select Country\",\r\n      isLoading = false,\r\n      fullWidth = false,\r\n      className,\r\n      disabled,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    // Base styles with theme overrides\r\n    const baseStyles = cn(\r\n      \"inline-flex items-center justify-between px-4 py-4 text-left font-medium transition-colors duration-150 ease-in-out\",\r\n      \"theme-universal:bg-input-bg\",\r\n      \"theme-universal:text-input-text\",\r\n      \"theme-universal:border\",\r\n      \"theme-universal:border-input-border\",\r\n      \"theme-universal:text-(length:--ul-theme-font-body-text-size)\",\r\n      \"theme-universal:font-body\",\r\n      \"theme-universal:rounded-input\",\r\n      \"theme-universal:hover:border-base-focus\",\r\n      \"theme-universal:focus:outline-none theme-universal:focus:ring-2 theme-universal:focus:ring-base-focus/20\"\r\n    );\r\n\r\n    const widthStyles = fullWidth ? \"w-full\" : \"\";\r\n    const disabledStyles =\r\n      disabled || isLoading\r\n        ? \"disabled:opacity-70 cursor-not-allowed\"\r\n        : \"cursor-pointer\";\r\n\r\n    return (\r\n      <button\r\n        ref={ref}\r\n        type=\"button\"\r\n        disabled={disabled || isLoading}\r\n        className={cn(baseStyles, widthStyles, disabledStyles, className)}\r\n        {...rest}\r\n      >\r\n        <div className=\"flex items-center space-x-3 flex-1 min-w-0\">\r\n          {selectedCountry ? (\r\n            <>\r\n              {/* Flag */}\r\n              <div className=\"flex-shrink-0 w-6 h-4 flex items-center justify-center\">\r\n                {selectedCountry.flag.startsWith(\"http\") ? (\r\n                  <img\r\n                    src={selectedCountry.flag}\r\n                    alt={`${selectedCountry.name} flag`}\r\n                    className=\"w-6 h-4 object-cover rounded-sm\"\r\n                  />\r\n                ) : (\r\n                  <span className=\"text-lg\">{selectedCountry.flag}</span>\r\n                )}\r\n              </div>\r\n\r\n              {/* Country Info */}\r\n              <div className=\"flex-1 min-w-0\">\r\n                <span className=\"theme-universal:text-input-text theme-universal:font-body truncate\">\r\n                  {selectedCountry.name}, {selectedCountry.code},{\" \"}\r\n                  {selectedCountry.dialCode}\r\n                </span>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {/* Placeholder state */}\r\n              <div className=\"flex-shrink-0 w-6 h-4 theme-universal:bg-input-border rounded-sm\"></div>\r\n              <span className=\"theme-universal:text-input-labels flex-1 truncate\">\r\n                {placeholder}\r\n              </span>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Chevron */}\r\n        <div className=\"flex-shrink-0 ml-2\">\r\n          <ChevronRight\r\n            className={cn(\r\n              \"w-4 h-4 theme-universal:text-input-labels transition-transform duration-200\",\r\n              isLoading && \"animate-pulse\"\r\n            )}\r\n          />\r\n        </div>\r\n      </button>\r\n    );\r\n  }\r\n);\r\n\r\nULThemeCountryCodePicker.displayName = \"ULThemeCountryCodePicker\";\r\n\r\nexport default ULThemeCountryCodePicker;\r\n","import * as React from \"react\";\r\n\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst alertVariants = cva(\r\n  \"shadow-input-hover bg-input relative grid w-full grid-cols-[0_1fr] items-start gap-y-0.5 overflow-clip rounded-3xl p-3 text-sm has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] has-[>svg]:gap-x-3 [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"text-foreground border-b-2 border-transparent\",\r\n        info: \"text-info-foreground [&>svg]:text-info-foreground\",\r\n        success: \"text-success-foreground [&>svg]:text-success-foreground\",\r\n        warning: \"text-warning-foreground [&>svg]:text-warning-foreground\",\r\n        destructive:\r\n          \"text-destructive-foreground [&>svg]:text-destructive-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nfunction Alert({\r\n  className,\r\n  variant,\r\n  ...props\r\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\r\n  return (\r\n    <div\r\n      data-slot=\"alert\"\r\n      role=\"alert\"\r\n      className={cn(alertVariants({ variant }), className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"alert-title\"\r\n      className={cn(\r\n        \"col-start-2 line-clamp-1 flex h-auto min-h-4 leading-4.5 font-medium tracking-tight\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\nfunction AlertDescription({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"alert-description\"\r\n      className={cn(\r\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction AlertAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"absolute top-2 right-2 flex items-center space-x-4\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { Alert, AlertAction, AlertDescription, AlertTitle };\r\n","import * as React from \"react\";\r\n\r\nimport { Alert, AlertTitle } from \"@/components/ui/alert\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface ULThemeErrorProps extends React.ComponentProps<\"div\"> {\r\n  variant?: \"destructive\";\r\n}\r\n\r\nfunction ULThemeAlert({\r\n  variant = \"destructive\",\r\n  className,\r\n  ...props\r\n}: ULThemeErrorProps) {\r\n  // Variant-specific theme overrides for Auth0 styling\r\n  const variantThemeOverrides = {\r\n    destructive: cn(\r\n      \"p-4\",\r\n      \"theme-universal:bg-error\", //background-color\r\n      \"theme-universal:text-(--ul-theme-color-primary-button-label)\", //text-color\r\n      \"theme-universal:rounded-button\", //border-radius\r\n      \"theme-universal:font-body\", //font-weight\r\n      \"theme-universal:text-(length:--ul-theme-font-body-text-size)\" //font-size\r\n    ),\r\n  };\r\n\r\n  const themeClasses = cn(variant && variantThemeOverrides[variant]);\r\n\r\n  return (\r\n    <Alert\r\n      variant={variant}\r\n      className={cn(className, themeClasses)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction ULThemeAlertTitle({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"div\">) {\r\n  // Theme overrides for error title styling\r\n  const themeClasses = cn(\r\n    \"theme-universal:text-(--ul-theme-color-primary-button-label)\", //text-color\r\n    \"theme-universal:font-body\", //font-weight\r\n    \"theme-universal:text-(length:--ul-theme-font-body-text-size)\" //font-size\r\n  );\r\n\r\n  return <AlertTitle className={cn(className, themeClasses)} {...props} />;\r\n}\r\n\r\nexport { ULThemeAlert, ULThemeAlertTitle };\r\nexport default ULThemeAlert;\r\n","import { Button, type ButtonProps } from \"@/components/ui/button\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport type ULThemePrimaryButtonProps = ButtonProps;\r\n\r\nexport function ULThemePrimaryButton({\r\n  variant = \"primary\",\r\n  size = \"default\",\r\n  className,\r\n  ...props\r\n}: ULThemePrimaryButtonProps) {\r\n  // Variant-specific theme overrides for colors and states\r\n  const variantThemeOverrides = {\r\n    primary: cn(\r\n      \"p-6 border-0\",\r\n      \"cursor-pointer\",\r\n      \"theme-universal:bg-primary-button\",\r\n      \"theme-universal:text-(--ul-theme-color-primary-button-label)\", //text-color\r\n      \"theme-universal:hover:shadow-[var(--button-hover-shadow)]\",\r\n      \"theme-universal:focus:outline-none theme-universal:focus:ring-4 theme-universal:focus:ring-base-focus/15\",\r\n      \"theme-universal:disabled:bg-primary-button/70\",\r\n      \"theme-universal:disabled:border-primary-button/70\",\r\n      \"theme-universal:disabled:cursor-not-allowed\"\r\n    ),\r\n    secondary: \"\", // Add secondary overrides if needed\r\n    destructive: \"\", // Add destructive overrides if needed\r\n    outline: \"\", // Add outline overrides if needed\r\n    ghost: \"\", // Add ghost overrides if needed\r\n    link: \"\", // Add link overrides if needed\r\n  };\r\n\r\n  // Size-specific theme overrides for border radius and typography\r\n  const sizeThemeOverrides = {\r\n    default: cn(\r\n      \"theme-universal:rounded-button\",\r\n      \"theme-universal:font-button\", //font-weight\r\n      \"theme-universal:text-(length:--ul-theme-font-buttons-text-size)\" //font-size\r\n    ),\r\n    xs: cn(\r\n      \"theme-universal:rounded-button\",\r\n      \"theme-universal:font-button\",\r\n      \"theme-universal:text-(length:--ul-theme-font-buttons-text-size)\"\r\n    ),\r\n    sm: cn(\r\n      \"theme-universal:rounded-button\",\r\n      \"theme-universal:font-button\",\r\n      \"theme-universal:text-(length:--ul-theme-font-buttons-text-size)\"\r\n    ),\r\n    lg: cn(\r\n      \"theme-universal:rounded-button\",\r\n      \"theme-universal:font-button\",\r\n      \"theme-universal:text-(length:--ul-theme-font-buttons-text-size)\"\r\n    ),\r\n    icon: cn(\"theme-universal:rounded-button\"),\r\n  };\r\n\r\n  // Combine all theme classes with proper type safety\r\n  const themeClasses = cn(\r\n    variant && variantThemeOverrides[variant],\r\n    size && sizeThemeOverrides[size]\r\n  );\r\n\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      size={size}\r\n      className={cn(className, themeClasses)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n","/**\r\n * Utility functions for handling country code data from Auth0 SDK\r\n */\r\nconst COUNTRY_DATA: Record<string, { name: string; flag: string }> = {\r\n  AD: { name: \"Andorra\", flag: \"🇦🇩\" },\r\n  AE: { name: \"United Arab Emirates\", flag: \"🇦🇪\" },\r\n  AF: { name: \"Afghanistan\", flag: \"🇦🇫\" },\r\n  AG: { name: \"Antigua and Barbuda\", flag: \"🇦🇬\" },\r\n  AI: { name: \"Anguilla\", flag: \"🇦🇮\" },\r\n  AL: { name: \"Albania\", flag: \"🇦🇱\" },\r\n  AM: { name: \"Armenia\", flag: \"🇦🇲\" },\r\n  AO: { name: \"Angola\", flag: \"🇦🇴\" },\r\n  AQ: { name: \"Antarctica\", flag: \"🇦🇶\" },\r\n  AR: { name: \"Argentina\", flag: \"🇦🇷\" },\r\n  AS: { name: \"American Samoa\", flag: \"🇦🇸\" },\r\n  AT: { name: \"Austria\", flag: \"🇦🇹\" },\r\n  AU: { name: \"Australia\", flag: \"🇦🇺\" },\r\n  AW: { name: \"Aruba\", flag: \"🇦🇼\" },\r\n  AX: { name: \"Åland Islands\", flag: \"🇦🇽\" },\r\n  AZ: { name: \"Azerbaijan\", flag: \"🇦🇿\" },\r\n  BA: { name: \"Bosnia and Herzegovina\", flag: \"🇧🇦\" },\r\n  BB: { name: \"Barbados\", flag: \"🇧🇧\" },\r\n  BD: { name: \"Bangladesh\", flag: \"🇧🇩\" },\r\n  BE: { name: \"Belgium\", flag: \"🇧🇪\" },\r\n  BF: { name: \"Burkina Faso\", flag: \"🇧🇫\" },\r\n  BG: { name: \"Bulgaria\", flag: \"🇧🇬\" },\r\n  BH: { name: \"Bahrain\", flag: \"🇧🇭\" },\r\n  BI: { name: \"Burundi\", flag: \"🇧🇮\" },\r\n  BJ: { name: \"Benin\", flag: \"🇧🇯\" },\r\n  BL: { name: \"Saint Barthélemy\", flag: \"🇧🇱\" },\r\n  BM: { name: \"Bermuda\", flag: \"🇧🇲\" },\r\n  BN: { name: \"Brunei Darussalam\", flag: \"🇧🇳\" },\r\n  BO: { name: \"Bolivia, Plurinational State of\", flag: \"🇧🇴\" },\r\n  BQ: { name: \"Bonaire, Sint Eustatius and Saba\", flag: \"🇧🇶\" },\r\n  BR: { name: \"Brazil\", flag: \"🇧🇷\" },\r\n  BS: { name: \"Bahamas\", flag: \"🇧🇸\" },\r\n  BT: { name: \"Bhutan\", flag: \"🇧🇹\" },\r\n  BV: { name: \"Bouvet Island\", flag: \"🇧🇻\" },\r\n  BW: { name: \"Botswana\", flag: \"🇧🇼\" },\r\n  BY: { name: \"Belarus\", flag: \"🇧🇾\" },\r\n  BZ: { name: \"Belize\", flag: \"🇧🇿\" },\r\n  CA: { name: \"Canada\", flag: \"🇨🇦\" },\r\n  CC: { name: \"Cocos (Keeling) Islands\", flag: \"🇨🇨\" },\r\n  CD: { name: \"Congo, the Democratic Republic of the\", flag: \"🇨🇩\" },\r\n  CF: { name: \"Central African Republic\", flag: \"🇨🇫\" },\r\n  CG: { name: \"Congo\", flag: \"🇨🇬\" },\r\n  CH: { name: \"Switzerland\", flag: \"🇨🇭\" },\r\n  CI: { name: \"Côte d'Ivoire\", flag: \"🇨🇮\" },\r\n  CK: { name: \"Cook Islands\", flag: \"🇨🇰\" },\r\n  CL: { name: \"Chile\", flag: \"🇨🇱\" },\r\n  CM: { name: \"Cameroon\", flag: \"🇨🇲\" },\r\n  CN: { name: \"China\", flag: \"🇨🇳\" },\r\n  CO: { name: \"Colombia\", flag: \"🇨🇴\" },\r\n  CR: { name: \"Costa Rica\", flag: \"🇨🇷\" },\r\n  CU: { name: \"Cuba\", flag: \"🇨🇺\" },\r\n  CV: { name: \"Cape Verde\", flag: \"🇨🇻\" },\r\n  CW: { name: \"Curaçao\", flag: \"🇨🇼\" },\r\n  CX: { name: \"Christmas Island\", flag: \"🇨🇽\" },\r\n  CY: { name: \"Cyprus\", flag: \"🇨🇾\" },\r\n  CZ: { name: \"Czech Republic\", flag: \"🇨🇿\" },\r\n  DE: { name: \"Germany\", flag: \"🇩🇪\" },\r\n  DJ: { name: \"Djibouti\", flag: \"🇩🇯\" },\r\n  DK: { name: \"Denmark\", flag: \"🇩🇰\" },\r\n  DM: { name: \"Dominica\", flag: \"🇩🇲\" },\r\n  DO: { name: \"Dominican Republic\", flag: \"🇩🇴\" },\r\n  DZ: { name: \"Algeria\", flag: \"🇩🇿\" },\r\n  EC: { name: \"Ecuador\", flag: \"🇪🇨\" },\r\n  EE: { name: \"Estonia\", flag: \"🇪🇪\" },\r\n  EG: { name: \"Egypt\", flag: \"🇪🇬\" },\r\n  EH: { name: \"Western Sahara\", flag: \"🇪🇭\" },\r\n  ER: { name: \"Eritrea\", flag: \"🇪🇷\" },\r\n  ES: { name: \"Spain\", flag: \"🇪🇸\" },\r\n  ET: { name: \"Ethiopia\", flag: \"🇪🇹\" },\r\n  FI: { name: \"Finland\", flag: \"🇫🇮\" },\r\n  FJ: { name: \"Fiji\", flag: \"🇫🇯\" },\r\n  FK: { name: \"Falkland Islands (Malvinas)\", flag: \"🇫🇰\" },\r\n  FM: { name: \"Micronesia, Federated States of\", flag: \"🇫🇲\" },\r\n  FO: { name: \"Faroe Islands\", flag: \"🇫🇴\" },\r\n  FR: { name: \"France\", flag: \"🇫🇷\" },\r\n  GA: { name: \"Gabon\", flag: \"🇬🇦\" },\r\n  GB: { name: \"United Kingdom\", flag: \"🇬🇧\" },\r\n  GD: { name: \"Grenada\", flag: \"🇬🇩\" },\r\n  GE: { name: \"Georgia\", flag: \"🇬🇪\" },\r\n  GF: { name: \"French Guiana\", flag: \"🇬🇫\" },\r\n  GG: { name: \"Guernsey\", flag: \"🇬🇬\" },\r\n  GH: { name: \"Ghana\", flag: \"🇬🇭\" },\r\n  GI: { name: \"Gibraltar\", flag: \"🇬🇮\" },\r\n  GL: { name: \"Greenland\", flag: \"🇬🇱\" },\r\n  GM: { name: \"Gambia\", flag: \"🇬🇲\" },\r\n  GN: { name: \"Guinea\", flag: \"🇬🇳\" },\r\n  GP: { name: \"Guadeloupe\", flag: \"🇬🇵\" },\r\n  GQ: { name: \"Equatorial Guinea\", flag: \"🇬🇶\" },\r\n  GR: { name: \"Greece\", flag: \"🇬🇷\" },\r\n  GS: { name: \"South Georgia and the South Sandwich Islands\", flag: \"🇬🇸\" },\r\n  GT: { name: \"Guatemala\", flag: \"🇬🇹\" },\r\n  GU: { name: \"Guam\", flag: \"🇬🇺\" },\r\n  GW: { name: \"Guinea-Bissau\", flag: \"🇬🇼\" },\r\n  GY: { name: \"Guyana\", flag: \"🇬🇾\" },\r\n  HK: { name: \"Hong Kong\", flag: \"🇭🇰\" },\r\n  HM: { name: \"Heard Island and McDonald Islands\", flag: \"🇭🇲\" },\r\n  HN: { name: \"Honduras\", flag: \"🇭🇳\" },\r\n  HR: { name: \"Croatia\", flag: \"🇭🇷\" },\r\n  HT: { name: \"Haiti\", flag: \"🇭🇹\" },\r\n  HU: { name: \"Hungary\", flag: \"🇭🇺\" },\r\n  ID: { name: \"Indonesia\", flag: \"🇮🇩\" },\r\n  IE: { name: \"Ireland\", flag: \"🇮🇪\" },\r\n  IL: { name: \"Israel\", flag: \"🇮🇱\" },\r\n  IM: { name: \"Isle of Man\", flag: \"🇮🇲\" },\r\n  IN: { name: \"India\", flag: \"🇮🇳\" },\r\n  IO: { name: \"British Indian Ocean Territory\", flag: \"🇮🇴\" },\r\n  IQ: { name: \"Iraq\", flag: \"🇮🇶\" },\r\n  IR: { name: \"Iran, Islamic Republic of\", flag: \"🇮🇷\" },\r\n  IS: { name: \"Iceland\", flag: \"🇮🇸\" },\r\n  IT: { name: \"Italy\", flag: \"🇮🇹\" },\r\n  JE: { name: \"Jersey\", flag: \"🇯🇪\" },\r\n  JM: { name: \"Jamaica\", flag: \"🇯🇲\" },\r\n  JO: { name: \"Jordan\", flag: \"🇯🇴\" },\r\n  JP: { name: \"Japan\", flag: \"🇯🇵\" },\r\n  KE: { name: \"Kenya\", flag: \"🇰🇪\" },\r\n  KG: { name: \"Kyrgyzstan\", flag: \"🇰🇬\" },\r\n  KH: { name: \"Cambodia\", flag: \"🇰🇭\" },\r\n  KI: { name: \"Kiribati\", flag: \"🇰🇮\" },\r\n  KM: { name: \"Comoros\", flag: \"🇰🇲\" },\r\n  KN: { name: \"Saint Kitts and Nevis\", flag: \"🇰🇳\" },\r\n  KP: { name: \"Korea, Democratic People's Republic of\", flag: \"🇰🇵\" },\r\n  KR: { name: \"Korea, Republic of\", flag: \"🇰🇷\" },\r\n  KW: { name: \"Kuwait\", flag: \"🇰🇼\" },\r\n  KY: { name: \"Cayman Islands\", flag: \"🇰🇾\" },\r\n  KZ: { name: \"Kazakhstan\", flag: \"🇰🇿\" },\r\n  LA: { name: \"Lao People's Democratic Republic\", flag: \"🇱🇦\" },\r\n  LB: { name: \"Lebanon\", flag: \"🇱🇧\" },\r\n  LC: { name: \"Saint Lucia\", flag: \"🇱🇨\" },\r\n  LI: { name: \"Liechtenstein\", flag: \"🇱🇮\" },\r\n  LK: { name: \"Sri Lanka\", flag: \"🇱🇰\" },\r\n  LR: { name: \"Liberia\", flag: \"🇱🇷\" },\r\n  LS: { name: \"Lesotho\", flag: \"🇱🇸\" },\r\n  LT: { name: \"Lithuania\", flag: \"🇱🇹\" },\r\n  LU: { name: \"Luxembourg\", flag: \"🇱🇺\" },\r\n  LV: { name: \"Latvia\", flag: \"🇱🇻\" },\r\n  LY: { name: \"Libya\", flag: \"🇱🇾\" },\r\n  MA: { name: \"Morocco\", flag: \"🇲🇦\" },\r\n  MC: { name: \"Monaco\", flag: \"🇲🇨\" },\r\n  MD: { name: \"Moldova, Republic of\", flag: \"🇲🇩\" },\r\n  ME: { name: \"Montenegro\", flag: \"🇲🇪\" },\r\n  MF: { name: \"Saint Martin (French part)\", flag: \"🇲🇫\" },\r\n  MG: { name: \"Madagascar\", flag: \"🇲🇬\" },\r\n  MH: { name: \"Marshall Islands\", flag: \"🇲🇭\" },\r\n  MK: { name: \"Macedonia, the former Yugoslav Republic of\", flag: \"🇲🇰\" },\r\n  ML: { name: \"Mali\", flag: \"🇲🇱\" },\r\n  MM: { name: \"Myanmar\", flag: \"🇲🇲\" },\r\n  MN: { name: \"Mongolia\", flag: \"🇲🇳\" },\r\n  MO: { name: \"Macao\", flag: \"🇲🇴\" },\r\n  MP: { name: \"Northern Mariana Islands\", flag: \"🇲🇵\" },\r\n  MQ: { name: \"Martinique\", flag: \"🇲🇶\" },\r\n  MR: { name: \"Mauritania\", flag: \"🇲🇷\" },\r\n  MS: { name: \"Montserrat\", flag: \"🇲🇸\" },\r\n  MT: { name: \"Malta\", flag: \"🇲🇹\" },\r\n  MU: { name: \"Mauritius\", flag: \"🇲🇺\" },\r\n  MV: { name: \"Maldives\", flag: \"🇲🇻\" },\r\n  MW: { name: \"Malawi\", flag: \"🇲🇼\" },\r\n  MX: { name: \"Mexico\", flag: \"🇲🇽\" },\r\n  MY: { name: \"Malaysia\", flag: \"🇲🇾\" },\r\n  MZ: { name: \"Mozambique\", flag: \"🇲🇿\" },\r\n  NA: { name: \"Namibia\", flag: \"🇳🇦\" },\r\n  NC: { name: \"New Caledonia\", flag: \"🇳🇨\" },\r\n  NE: { name: \"Niger\", flag: \"🇳🇪\" },\r\n  NF: { name: \"Norfolk Island\", flag: \"🇳🇫\" },\r\n  NG: { name: \"Nigeria\", flag: \"🇳🇬\" },\r\n  NI: { name: \"Nicaragua\", flag: \"🇳🇮\" },\r\n  NL: { name: \"Netherlands\", flag: \"🇳🇱\" },\r\n  NO: { name: \"Norway\", flag: \"🇳🇴\" },\r\n  NP: { name: \"Nepal\", flag: \"🇳🇵\" },\r\n  NR: { name: \"Nauru\", flag: \"🇳🇷\" },\r\n  NU: { name: \"Niue\", flag: \"🇳🇺\" },\r\n  NZ: { name: \"New Zealand\", flag: \"🇳🇿\" },\r\n  OM: { name: \"Oman\", flag: \"🇴🇲\" },\r\n  PA: { name: \"Panama\", flag: \"🇵🇦\" },\r\n  PE: { name: \"Peru\", flag: \"🇵🇪\" },\r\n  PF: { name: \"French Polynesia\", flag: \"🇵🇫\" },\r\n  PG: { name: \"Papua New Guinea\", flag: \"🇵🇬\" },\r\n  PH: { name: \"Philippines\", flag: \"🇵🇭\" },\r\n  PK: { name: \"Pakistan\", flag: \"🇵🇰\" },\r\n  PL: { name: \"Poland\", flag: \"🇵🇱\" },\r\n  PM: { name: \"Saint Pierre and Miquelon\", flag: \"🇵🇲\" },\r\n  PN: { name: \"Pitcairn\", flag: \"🇵🇳\" },\r\n  PR: { name: \"Puerto Rico\", flag: \"🇵🇷\" },\r\n  PS: { name: \"Palestine, State of\", flag: \"🇵🇸\" },\r\n  PT: { name: \"Portugal\", flag: \"🇵🇹\" },\r\n  PW: { name: \"Palau\", flag: \"🇵🇼\" },\r\n  PY: { name: \"Paraguay\", flag: \"🇵🇾\" },\r\n  QA: { name: \"Qatar\", flag: \"🇶🇦\" },\r\n  RE: { name: \"Réunion\", flag: \"🇷🇪\" },\r\n  RO: { name: \"Romania\", flag: \"🇷🇴\" },\r\n  RS: { name: \"Serbia\", flag: \"🇷🇸\" },\r\n  RU: { name: \"Russian Federation\", flag: \"🇷🇺\" },\r\n  RW: { name: \"Rwanda\", flag: \"🇷🇼\" },\r\n  SA: { name: \"Saudi Arabia\", flag: \"🇸🇦\" },\r\n  SB: { name: \"Solomon Islands\", flag: \"🇸🇧\" },\r\n  SC: { name: \"Seychelles\", flag: \"🇸🇨\" },\r\n  SD: { name: \"Sudan\", flag: \"🇸🇩\" },\r\n  SE: { name: \"Sweden\", flag: \"🇸🇪\" },\r\n  SG: { name: \"Singapore\", flag: \"🇸🇬\" },\r\n  SH: { name: \"Saint Helena, Ascension and Tristan da Cunha\", flag: \"🇸🇭\" },\r\n  SI: { name: \"Slovenia\", flag: \"🇸🇮\" },\r\n  SJ: { name: \"Svalbard and Jan Mayen\", flag: \"🇸🇯\" },\r\n  SK: { name: \"Slovakia\", flag: \"🇸🇰\" },\r\n  SL: { name: \"Sierra Leone\", flag: \"🇸🇱\" },\r\n  SM: { name: \"San Marino\", flag: \"🇸🇲\" },\r\n  SN: { name: \"Senegal\", flag: \"🇸🇳\" },\r\n  SO: { name: \"Somalia\", flag: \"🇸🇴\" },\r\n  SR: { name: \"Suriname\", flag: \"🇸🇷\" },\r\n  SS: { name: \"South Sudan\", flag: \"🇸🇸\" },\r\n  ST: { name: \"Sao Tome and Principe\", flag: \"🇸🇹\" },\r\n  SV: { name: \"El Salvador\", flag: \"🇸🇻\" },\r\n  SX: { name: \"Sint Maarten (Dutch part)\", flag: \"🇸🇽\" },\r\n  SY: { name: \"Syrian Arab Republic\", flag: \"🇸🇾\" },\r\n  SZ: { name: \"Swaziland\", flag: \"🇸🇿\" },\r\n  TC: { name: \"Turks and Caicos Islands\", flag: \"🇹🇨\" },\r\n  TD: { name: \"Chad\", flag: \"🇹🇩\" },\r\n  TF: { name: \"French Southern Territories\", flag: \"🇹🇫\" },\r\n  TG: { name: \"Togo\", flag: \"🇹🇬\" },\r\n  TH: { name: \"Thailand\", flag: \"🇹🇭\" },\r\n  TJ: { name: \"Tajikistan\", flag: \"🇹🇯\" },\r\n  TK: { name: \"Tokelau\", flag: \"🇹🇰\" },\r\n  TL: { name: \"Timor-Leste\", flag: \"🇹🇱\" },\r\n  TM: { name: \"Turkmenistan\", flag: \"🇹🇲\" },\r\n  TN: { name: \"Tunisia\", flag: \"🇹🇳\" },\r\n  TO: { name: \"Tonga\", flag: \"🇹🇴\" },\r\n  TR: { name: \"Turkey\", flag: \"🇹🇷\" },\r\n  TT: { name: \"Trinidad and Tobago\", flag: \"🇹🇹\" },\r\n  TV: { name: \"Tuvalu\", flag: \"🇹🇻\" },\r\n  TW: { name: \"Taiwan, Province of China\", flag: \"🇹🇼\" },\r\n  TZ: { name: \"Tanzania, United Republic of\", flag: \"🇹🇿\" },\r\n  UA: { name: \"Ukraine\", flag: \"🇺🇦\" },\r\n  UG: { name: \"Uganda\", flag: \"🇺🇬\" },\r\n  UM: { name: \"United States Minor Outlying Islands\", flag: \"🇺🇲\" },\r\n  US: { name: \"United States\", flag: \"🇺🇸\" },\r\n  UY: { name: \"Uruguay\", flag: \"🇺🇾\" },\r\n  UZ: { name: \"Uzbekistan\", flag: \"🇺🇿\" },\r\n  VA: { name: \"Holy See (Vatican City State)\", flag: \"🇻🇦\" },\r\n  VC: { name: \"Saint Vincent and the Grenadines\", flag: \"🇻🇨\" },\r\n  VE: { name: \"Venezuela, Bolivarian Republic of\", flag: \"🇻🇪\" },\r\n  VG: { name: \"Virgin Islands, British\", flag: \"🇻🇬\" },\r\n  VI: { name: \"Virgin Islands, U.S.\", flag: \"🇻🇮\" },\r\n  VN: { name: \"Viet Nam\", flag: \"🇻🇳\" },\r\n  VU: { name: \"Vanuatu\", flag: \"🇻🇺\" },\r\n  WF: { name: \"Wallis and Futuna\", flag: \"🇼🇫\" },\r\n  WS: { name: \"Samoa\", flag: \"🇼🇸\" },\r\n  YE: { name: \"Yemen\", flag: \"🇾🇪\" },\r\n  YT: { name: \"Mayotte\", flag: \"🇾🇹\" },\r\n  ZA: { name: \"South Africa\", flag: \"🇿🇦\" },\r\n  ZM: { name: \"Zambia\", flag: \"🇿🇲\" },\r\n  ZW: { name: \"Zimbabwe\", flag: \"🇿🇼\" },\r\n};\r\n\r\n/**\r\n * Auth0 SDK country code structure from TransactionMembersOnLoginId\r\n * Based on: https://auth0.github.io/universal-login/interfaces/Classes.TransactionMembersOnLoginId.html\r\n */\r\nexport interface Auth0CountryCode {\r\n  code: string; // Country code like \"IN\", \"US\"\r\n  prefix: string; // Phone prefix like \"91\", \"1\"\r\n}\r\n\r\n/**\r\n * Alternative structure that might be in mock data or different SDK versions\r\n */\r\nexport interface Auth0CountryCodeAlt {\r\n  countryCode: string;\r\n  countryPrefix: string;\r\n}\r\n\r\nexport interface CountryCodePickerData {\r\n  name: string;\r\n  code: string;\r\n  dialCode: string;\r\n  flag: string;\r\n}\r\n\r\nexport function transformAuth0CountryCode(\r\n  countryCode: string | null | undefined,\r\n  countryPrefix?: string | null | undefined\r\n): CountryCodePickerData | undefined {\r\n  if (!countryCode) {\r\n    return undefined;\r\n  }\r\n\r\n  const countryInfo = COUNTRY_DATA[countryCode];\r\n\r\n  if (!countryInfo) {\r\n    // Fallback for unknown country codes\r\n    return {\r\n      name: `Country ${countryCode}`,\r\n      code: countryCode,\r\n      dialCode: countryPrefix ? `+${countryPrefix}` : \"+??\",\r\n      flag: \"🏳️\", // Generic flag\r\n    };\r\n  }\r\n\r\n  return {\r\n    name: countryInfo.name,\r\n    code: countryCode,\r\n    dialCode: countryPrefix ? `+${countryPrefix}` : \"+??\",\r\n    flag: countryInfo.flag,\r\n  };\r\n}\r\n\r\n/**\r\n * Checks if country picker should be shown - only when phone is the ONLY identifier option\r\n * @param identifiers - Array of allowed identifier types\r\n * @returns boolean indicating if country picker should be displayed\r\n */\r\nexport function isPhoneNumberSupported(identifiers: string[]): boolean {\r\n  // Show country picker only when phone is the sole identifier option\r\n  return (\r\n    identifiers.length === 1 &&\r\n    identifiers.some((identifier) => identifier.toLowerCase().includes(\"phone\"))\r\n  );\r\n}\r\n\r\nexport function getCountryName(countryCode: string): string {\r\n  return COUNTRY_DATA[countryCode]?.name || `Country ${countryCode}`;\r\n}\r\n\r\nexport function getCountryFlag(countryCode: string): string {\r\n  return COUNTRY_DATA[countryCode]?.flag || \"🏳️\";\r\n}\r\n","/**\r\n * Represents a generic SDK error object.\r\n */\r\nexport interface SdkError {\r\n  code?: string;\r\n  message: string;\r\n  field?: string;\r\n  rules?: Array<{ message: string; format?: string[] }>; // Password complexity rules\r\n  [key: string]: unknown; // Allow other properties with unknown type\r\n}\r\n\r\n/**\r\n * Finds and returns the error message for a specific field from a list of SDK errors.\r\n * @param fieldName The name of the field to find an error for.\r\n * @param errors An array of SDK error objects.\r\n * @returns The error message string if found, otherwise undefined.\r\n */\r\nexport const getFieldError = (\r\n  fieldName: string,\r\n  errors: Array<{ field?: string; message: string }>\r\n): string | undefined => {\r\n  if (!Array.isArray(errors)) {\r\n    return undefined;\r\n  }\r\n  const error = errors.find((err) => err.field === fieldName);\r\n  return error?.message;\r\n};\r\n","import type { IdentifierType } from \"@auth0/auth0-acul-js/types\";\r\n\r\ninterface IdentifierDetails {\r\n  label: string;\r\n  type: string; // HTML input type\r\n  autoComplete: IdentifierType | string; // Prefer IdentifierType when applicable\r\n}\r\n\r\n// Specific keys for placeholder texts for better type safety in the config map\r\ntype PlaceholderKey =\r\n  | \"usernameOrEmailPlaceholder\"\r\n  | \"emailPlaceholder\"\r\n  | \"phonePlaceholder\"\r\n  | \"usernameOnlyPlaceholder\"\r\n  | \"phoneOrEmailPlaceholder\"\r\n  | \"phoneOrUsernamePlaceholder\"\r\n  | \"phoneOrUsernameOrEmailPlaceholder\";\r\n\r\ninterface IdentifierConfig {\r\n  labelKey: PlaceholderKey;\r\n  labelFallback: string;\r\n  type?: string; // HTML input type\r\n  autoComplete?: IdentifierType | string; // Prefer IdentifierType when applicable\r\n}\r\n\r\n/**\r\n * Helper function to create a descriptive key for identifier combinations\r\n */\r\nconst createIdentifierKey = (\r\n  hasEmail: boolean,\r\n  hasPhone: boolean,\r\n  hasUsername: boolean\r\n): string => {\r\n  const identifiers = [];\r\n  if (hasEmail) identifiers.push(\"email\");\r\n  if (hasPhone) identifiers.push(\"phone\");\r\n  if (hasUsername) identifiers.push(\"username\");\r\n  return identifiers.join(\"-\");\r\n};\r\n\r\n/**\r\n * Determines the appropriate label, input type, and autocomplete attribute\r\n * for an identifier field based on active connection attributes and screen texts.\r\n *\r\n * @param connectionAttributes - The connection attributes from the transaction object.\r\n * @param screenTexts - The screen.texts object from Auth0 SDK instance.\r\n * @returns An object containing the label, type, and autoComplete string for the identifier field.\r\n */\r\nexport const getIdentifierDetails = (\r\n  connectionAttributes?: IdentifierType[],\r\n  screenTexts?: Record<string, string> | null // Auth0 screen.texts object\r\n): IdentifierDetails => {\r\n  // Initialize with the most common / general defaults\r\n  let finalLabel =\r\n    screenTexts?.usernameOrEmailPlaceholder || \"Username or Email Address\";\r\n  let finalType = \"text\";\r\n  let finalAutoComplete: IdentifierType | string = \"username\";\r\n\r\n  if (connectionAttributes) {\r\n    const hasEmail = connectionAttributes.includes(\"email\");\r\n    const hasPhone = connectionAttributes.includes(\"phone\");\r\n    const hasUsername = connectionAttributes.includes(\"username\");\r\n\r\n    // Create a descriptive key based on active identifiers\r\n    const identifierKey = createIdentifierKey(hasEmail, hasPhone, hasUsername);\r\n\r\n    const configMap: Record<string, IdentifierConfig> = {\r\n      email: {\r\n        labelKey: \"emailPlaceholder\",\r\n        labelFallback: screenTexts?.emailPlaceholder || \"Email Address\",\r\n        type: \"email\",\r\n        autoComplete: \"email\",\r\n      },\r\n      phone: {\r\n        labelKey: \"phonePlaceholder\",\r\n        labelFallback: screenTexts?.phonePlaceholder || \"Phone Number\",\r\n        type: \"tel\",\r\n        autoComplete: \"tel\",\r\n      },\r\n      username: {\r\n        labelKey: \"usernameOnlyPlaceholder\",\r\n        labelFallback: screenTexts?.usernameOnlyPlaceholder || \"Username\",\r\n        autoComplete: \"username\",\r\n      },\r\n      \"email-phone\": {\r\n        labelKey: \"phoneOrEmailPlaceholder\",\r\n        labelFallback:\r\n          screenTexts?.phoneOrEmailPlaceholder ||\r\n          \"Phone Number or Email Address\",\r\n        autoComplete: \"username\",\r\n      },\r\n      \"email-username\": {\r\n        labelKey: \"usernameOrEmailPlaceholder\",\r\n        labelFallback:\r\n          screenTexts?.usernameOrEmailPlaceholder ||\r\n          \"Username or Email Address\",\r\n        autoComplete: \"username\",\r\n      },\r\n      \"phone-username\": {\r\n        labelKey: \"phoneOrUsernamePlaceholder\",\r\n        labelFallback:\r\n          screenTexts?.phoneOrUsernamePlaceholder || \"Phone Number or Username\",\r\n        autoComplete: \"username\",\r\n      },\r\n      \"email-phone-username\": {\r\n        labelKey: \"phoneOrUsernameOrEmailPlaceholder\",\r\n        labelFallback:\r\n          screenTexts?.phoneOrUsernameOrEmailPlaceholder ||\r\n          \"Phone, Username, or Email\",\r\n        autoComplete: \"username\",\r\n      },\r\n    };\r\n\r\n    const config = configMap[identifierKey];\r\n\r\n    if (config) {\r\n      finalLabel = config.labelFallback;\r\n      if (config.type) {\r\n        finalType = config.type;\r\n      }\r\n      if (config.autoComplete) {\r\n        finalAutoComplete = config.autoComplete;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Append asterisk for required field indication, common pattern\r\n  if (!finalLabel.endsWith(\"*\")) {\r\n    finalLabel += \"*\";\r\n  }\r\n\r\n  return {\r\n    label: finalLabel,\r\n    type: finalType,\r\n    autoComplete: finalAutoComplete,\r\n  };\r\n};\r\n","import { useForm } from \"react-hook-form\";\r\n\r\nimport type {\r\n  Error,\r\n  TransactionMembersOnLoginId,\r\n} from \"@auth0/auth0-acul-js/types\";\r\n\r\nimport { ULThemeFloatingLabelField } from \"@/components/form/ULThemeFloatingLabelField\";\r\nimport { ULThemeFormMessage } from \"@/components/form/ULThemeFormMessage\";\r\nimport { Form, FormField, FormItem } from \"@/components/ui/form\";\r\nimport ULThemeCountryCodePicker from \"@/components/ULThemeCountryCodePicker\";\r\nimport { ULThemeAlert, ULThemeAlertTitle } from \"@/components/ULThemeError\";\r\nimport ULThemeLink from \"@/components/ULThemeLink\";\r\nimport { ULThemePrimaryButton } from \"@/components/ULThemePrimaryButton\";\r\nimport {\r\n  isPhoneNumberSupported,\r\n  transformAuth0CountryCode,\r\n} from \"@/utils/helpers/countryUtils\";\r\nimport { getFieldError } from \"@/utils/helpers/errorUtils\";\r\nimport { getIdentifierDetails } from \"@/utils/helpers/identifierUtils\";\r\nimport { rebaseLinkToCurrentOrigin } from \"@/utils/helpers/urlUtils\";\r\n\r\nimport { useLoginIdManager } from \"../hooks/useLoginIdManager\";\r\n\r\ninterface LoginIdFormData {\r\n  identifier: string;\r\n}\r\n\r\nfunction IdentifierForm() {\r\n  const {\r\n    handleLoginId,\r\n    errors,\r\n    resetPasswordLink,\r\n    isForgotPasswordEnabled,\r\n    loginIdInstance,\r\n    texts,\r\n    handlePickCountryCode,\r\n  } = useLoginIdManager();\r\n\r\n  const form = useForm<LoginIdFormData>({\r\n    defaultValues: {\r\n      identifier: \"\",\r\n    },\r\n  });\r\n\r\n  const {\r\n    formState: { isSubmitting },\r\n  } = form;\r\n\r\n  // Handle text fallbacks in component\r\n  const buttonText = texts?.buttonText || \"Continue\";\r\n  const forgotPasswordText = texts?.forgotPasswordText || \"Forgot Password?\";\r\n\r\n  // Get general errors (not field-specific)\r\n  const generalErrors =\r\n    errors?.filter((error: Error) => !error.field || error.field === null) ||\r\n    [];\r\n\r\n  const identifierSDKError =\r\n    getFieldError(\"identifier\", errors) ||\r\n    getFieldError(\"email\", errors) ||\r\n    getFieldError(\"phone\", errors) ||\r\n    getFieldError(\"username\", errors);\r\n\r\n  // Get allowed identifiers directly from SDK\r\n  const allowedIdentifiers =\r\n    loginIdInstance?.transaction?.allowedIdentifiers || [];\r\n\r\n  const {\r\n    label: identifierLabel,\r\n    type: identifierType,\r\n    autoComplete: identifierAutoComplete,\r\n  } = getIdentifierDetails(allowedIdentifiers, texts);\r\n\r\n  // Proper submit handler with form data\r\n  const onSubmit = async (data: LoginIdFormData) => {\r\n    await handleLoginId(data.identifier);\r\n  };\r\n\r\n  const localizedResetPasswordLink =\r\n    resetPasswordLink && rebaseLinkToCurrentOrigin(resetPasswordLink);\r\n\r\n  const shouldShowCountryPicker = isPhoneNumberSupported(allowedIdentifiers);\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-2\">\r\n        {/* General alerts at the top */}\r\n        {generalErrors.length > 0 && (\r\n          <div className=\"space-y-3 mb-4\">\r\n            {generalErrors.map((error: Error, index: number) => (\r\n              <ULThemeAlert key={index} variant=\"destructive\">\r\n                <ULThemeAlertTitle>{error.message}</ULThemeAlertTitle>\r\n              </ULThemeAlert>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Country Code Picker - only show if phone numbers are supported */}\r\n        {shouldShowCountryPicker && (\r\n          <div className=\"mb-4\">\r\n            <ULThemeCountryCodePicker\r\n              selectedCountry={transformAuth0CountryCode(\r\n                (loginIdInstance?.transaction as TransactionMembersOnLoginId)\r\n                  ?.countryCode,\r\n                (loginIdInstance?.transaction as TransactionMembersOnLoginId)\r\n                  ?.countryPrefix\r\n              )}\r\n              onClick={handlePickCountryCode}\r\n              fullWidth\r\n              placeholder=\"Select Country\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Identifier input field */}\r\n        <FormField\r\n          control={form.control}\r\n          name=\"identifier\"\r\n          rules={{\r\n            required: \"This field is required\",\r\n            maxLength: {\r\n              value: 100,\r\n              message: \"Maximum 100 characters allowed\",\r\n            },\r\n          }}\r\n          render={({ field, fieldState }) => (\r\n            <FormItem>\r\n              <ULThemeFloatingLabelField\r\n                {...field}\r\n                label={identifierLabel}\r\n                type={identifierType}\r\n                autoFocus={true}\r\n                autoComplete={identifierAutoComplete}\r\n                error={!!fieldState.error || !!identifierSDKError}\r\n              />\r\n              <ULThemeFormMessage\r\n                sdkError={identifierSDKError}\r\n                hasFormError={!!fieldState.error}\r\n              />\r\n            </FormItem>\r\n          )}\r\n        />\r\n\r\n        {/* Forgot Password link */}\r\n        <div className=\"text-left mb-4\">\r\n          {isForgotPasswordEnabled && localizedResetPasswordLink && (\r\n            <ULThemeLink href={localizedResetPasswordLink}>\r\n              {forgotPasswordText}\r\n            </ULThemeLink>\r\n          )}\r\n        </div>\r\n\r\n        {/* Submit button */}\r\n        <ULThemePrimaryButton\r\n          type=\"submit\"\r\n          className=\"w-full\"\r\n          disabled={isSubmitting}\r\n        >\r\n          {buttonText}\r\n        </ULThemePrimaryButton>\r\n      </form>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default IdentifierForm;\r\n","import ULThemeCard from \"@/components/ULThemeCard\";\r\nimport ULThemePageLayout from \"@/components/ULThemePageLayout\";\r\nimport ULThemeSeparator from \"@/components/ULThemeSeparator\";\r\nimport { SocialConnection } from \"@/utils/helpers/socialUtils\";\r\nimport { extractTokenValue } from \"@/utils/helpers/tokenUtils\";\r\nimport { applyAuth0Theme } from \"@/utils/theme/themeEngine\";\r\n\r\nimport AlternativeLogins from \"./components/AlternativeLogins\";\r\nimport Footer from \"./components/Footer\";\r\nimport Header from \"./components/Header\";\r\nimport IdentifierForm from \"./components/IdentifierForm\";\r\nimport { useLoginIdManager } from \"./hooks/useLoginIdManager\";\r\n\r\nfunction LoginIdScreen() {\r\n  // Extracting attributes from hook made out of LoginIdInstance class of Auth0 JS SDK\r\n  const { loginIdInstance, texts, isPasskeyEnabled } = useLoginIdManager();\r\n\r\n  // Fetching List of Social Connections\r\n  const socialConnectionsList = loginIdInstance?.transaction\r\n    ?.alternateConnections as SocialConnection[] | undefined;\r\n\r\n  // Check whether separator component needs to be rendered based on passkey or other social connections\r\n  const showSeparator =\r\n    isPasskeyEnabled ||\r\n    (socialConnectionsList && socialConnectionsList.length > 0);\r\n\r\n  // Other Texts\r\n  const separatorText = texts?.separatorText || \"OR\";\r\n  document.title = texts?.pageTitle || \"Login\";\r\n\r\n  // Apply theme from SDK instance when screen loads\r\n  applyAuth0Theme(loginIdInstance);\r\n\r\n  // Extracting Tenant setting for social login component alignment on the layout via theme token\r\n  const socialLoginAlignment = extractTokenValue(\r\n    \"--ul-theme-widget-social-buttons-layout\"\r\n  );\r\n\r\n  const renderSocialLogins = (alignment: \"top\" | \"bottom\") => (\r\n    <>\r\n      {alignment === \"bottom\" && showSeparator && (\r\n        <ULThemeSeparator text={separatorText} />\r\n      )}\r\n      <AlternativeLogins connections={socialConnectionsList} />\r\n      {alignment === \"top\" && showSeparator && (\r\n        <ULThemeSeparator text={separatorText} />\r\n      )}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    // Applying UDS theme overrides using the \"theme-universal\" class\r\n    <div style={{ backgroundColor: \"red\" }}>\r\n      <ULThemePageLayout className=\"theme-universal\">\r\n        <ULThemeCard className=\"w-full max-w-[400px] gap-0\">\r\n          <Header />\r\n          {socialLoginAlignment === \"top\" && renderSocialLogins(\"top\")}\r\n          <IdentifierForm />\r\n          <Footer />\r\n          {socialLoginAlignment === \"bottom\" && renderSocialLogins(\"bottom\")}\r\n        </ULThemeCard>\r\n      </ULThemePageLayout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginIdScreen;\r\n","import { useMemo } from \"react\";\r\n\r\nimport LoginPassword from \"@auth0/auth0-acul-js/login-password\";\r\nimport type { ScreenMembersOnLoginPassword } from \"@auth0/auth0-acul-js/types\";\r\n\r\nimport { executeSafely } from \"@/utils/helpers/executeSafely\";\r\n\r\n/**\r\n * Custom hook to manage the LoginPassword screen functionality.\r\n * This hook provides methods and properties to handle login with password,\r\n * federated login, and other related functionalities like CAPTCHA and error handling.\r\n */\r\nexport const useLoginPasswordManager = () => {\r\n  // Initialize the LoginPassword instance\r\n  const loginPasswordInstance = useMemo(() => new LoginPassword(), []);\r\n\r\n  // Extract transaction and screen properties from the LoginPassword instance\r\n  const { transaction, screen } = loginPasswordInstance;\r\n\r\n  // Extract relevant flags from the transaction object\r\n  const { isSignupEnabled, isForgotPasswordEnabled, isPasskeyEnabled } =\r\n    transaction;\r\n\r\n  // Extract relevant properties from the screen object\r\n  const {\r\n    signupLink,\r\n    resetPasswordLink,\r\n    texts,\r\n    captchaImage,\r\n    editIdentifierLink,\r\n    links,\r\n    data,\r\n  } = screen;\r\n\r\n  /**\r\n   * Handles the login process using a username and password.\r\n   * Optionally includes a CAPTCHA value if required.\r\n   *\r\n   * @param loginId - The username or email address of the user.\r\n   * @param password - The password of the user.\r\n   * @param captcha - (Optional) The CAPTCHA value if required.\r\n   * @returns A promise that resolves when the login process is complete.\r\n   */\r\n  const handleLoginPassword = async (\r\n    loginId: string,\r\n    password: string,\r\n    captcha?: string\r\n  ): Promise<void> => {\r\n    const options: { username: string; password: string; captcha?: string } = {\r\n      username: loginId?.trim() || \"\",\r\n      password: password?.trim() || \"\",\r\n    };\r\n\r\n    // Include CAPTCHA in the options if available and provided\r\n    if (screen.isCaptchaAvailable && captcha?.trim()) {\r\n      options.captcha = captcha.trim();\r\n    }\r\n\r\n    // Execute the login process safely and log any errors\r\n    executeSafely(\r\n      `LoginPassword with options: ${JSON.stringify(options)}`,\r\n      () => loginPasswordInstance.login(options)\r\n    );\r\n  };\r\n\r\n  return {\r\n    loginPasswordInstance,\r\n    handleLoginPassword,\r\n    texts: (texts || {}) as ScreenMembersOnLoginPassword[\"texts\"],\r\n    isSignupEnabled: isSignupEnabled === true,\r\n    isForgotPasswordEnabled: isForgotPasswordEnabled === true,\r\n    isPasskeyEnabled: isPasskeyEnabled === true,\r\n    isCaptchaAvailable: screen.isCaptchaAvailable === true,\r\n    errors: loginPasswordInstance.getErrors(),\r\n    links,\r\n    editIdentifierLink,\r\n    signupLink,\r\n    resetPasswordLink,\r\n    captchaImage,\r\n    data,\r\n  };\r\n};\r\n","import ULThemeLink from \"@/components/ULThemeLink\";\r\nimport { rebaseLinkToCurrentOrigin } from \"@/utils/helpers/urlUtils\";\r\n\r\nimport { useLoginPasswordManager } from \"../hooks/useLoginPasswordManager\";\r\n\r\nfunction Footer() {\r\n  const { isSignupEnabled, signupLink, texts } = useLoginPasswordManager();\r\n\r\n  if (!isSignupEnabled) {\r\n    return null;\r\n  }\r\n\r\n  const localizedSignupLink = rebaseLinkToCurrentOrigin(signupLink);\r\n\r\n  // Handle text fallbacks in component\r\n  const footerText = texts?.footerText || \"Don't have an account?\";\r\n  const footerLinkText = texts?.footerLinkText || \"Sign up\";\r\n\r\n  return (\r\n    <div className=\"mt-4 text-left\">\r\n      <span className=\"text-sm pr-1\">{footerText}</span>\r\n      {localizedSignupLink && (\r\n        <ULThemeLink href={localizedSignupLink}>{footerLinkText}</ULThemeLink>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import ULThemeLogo from \"@/components/ULThemeLogo\";\r\nimport ULThemeSubtitle from \"@/components/ULThemeSubtitle\";\r\nimport ULThemeTitle from \"@/components/ULThemeTitle\";\r\n\r\nimport { useLoginPasswordManager } from \"../hooks/useLoginPasswordManager\";\r\n\r\nfunction Header() {\r\n  const { texts } = useLoginPasswordManager();\r\n\r\n  // Handle text fallbacks in component\r\n  const logoAltText = texts?.logoAltText || \"Application Logo\";\r\n\r\n  return (\r\n    <>\r\n      <ULThemeLogo altText={logoAltText}></ULThemeLogo>\r\n      <ULThemeTitle>{texts?.title || \"Welcome\"}</ULThemeTitle>\r\n      <ULThemeSubtitle>\r\n        {texts?.description ||\r\n          \"Enter your password for My Company to continue to My App\"}\r\n      </ULThemeSubtitle>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Control, FieldValues, Path, RegisterOptions } from \"react-hook-form\";\r\n\r\nimport { ULThemeFloatingLabelField } from \"@/components/form/ULThemeFloatingLabelField\";\r\nimport { ULThemeFormMessage } from \"@/components/form/ULThemeFormMessage\";\r\nimport { FormField, FormItem } from \"@/components/ui/form\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface CaptchaProps<T extends FieldValues = FieldValues> {\r\n  label: string;\r\n  imageUrl: string;\r\n  imageAltText: string;\r\n  name: Path<T>;\r\n  control: Control<T>;\r\n  rules?: RegisterOptions<T>;\r\n  sdkError?: string;\r\n  className?: string;\r\n}\r\n\r\nconst Captcha = <T extends FieldValues = FieldValues>({\r\n  name,\r\n  control,\r\n  rules,\r\n  label,\r\n  imageUrl,\r\n  imageAltText,\r\n  sdkError,\r\n  className,\r\n}: CaptchaProps<T>) => {\r\n  // Container styles with theme\r\n  const containerStyles = cn(\"space-y-2\", className);\r\n\r\n  // Image container styles with theme\r\n  const imageContainerStyles = cn(\r\n    \"flex justify-center p-8 rounded\",\r\n    \"theme-universal:bg-input-bg\",\r\n    \"theme-universal:border\",\r\n    \"theme-universal:border-input-border\",\r\n    \"theme-universal:rounded-input\"\r\n  );\r\n\r\n  if (!imageUrl) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={containerStyles}>\r\n      <div className={imageContainerStyles}>\r\n        <img src={imageUrl} alt={imageAltText} className=\"object-contain\" />\r\n      </div>\r\n      <FormField\r\n        control={control}\r\n        name={name}\r\n        rules={rules}\r\n        render={({ field, fieldState }) => (\r\n          <FormItem>\r\n            <ULThemeFloatingLabelField\r\n              {...field}\r\n              label={label}\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              error={!!fieldState.error || !!sdkError}\r\n            />\r\n            <ULThemeFormMessage\r\n              className=\"mt-1\"\r\n              sdkError={sdkError}\r\n              hasFormError={!!fieldState.error}\r\n            />\r\n          </FormItem>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Captcha;\r\n","\"use client\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport { Tooltip as TooltipPrimitive } from \"@base-ui-components/react/tooltip\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction TooltipProvider({\r\n  delay: delayDuration = 0,\r\n  ...props\r\n}: React.ComponentProps<typeof TooltipPrimitive.Provider>) {\r\n  return (\r\n    <TooltipPrimitive.Provider\r\n      data-slot=\"tooltip-provider\"\r\n      delay={delayDuration}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Tooltip({\r\n  ...props\r\n}: React.ComponentProps<typeof TooltipPrimitive.Root>) {\r\n  return (\r\n    <TooltipProvider>\r\n      <TooltipPrimitive.Root data-slot=\"tooltip\" {...props} />\r\n    </TooltipProvider>\r\n  );\r\n}\r\n\r\nfunction TooltipTrigger({\r\n  ...props\r\n}: React.ComponentProps<typeof TooltipPrimitive.Trigger>) {\r\n  return <TooltipPrimitive.Trigger data-slot=\"tooltip-trigger\" {...props} />;\r\n}\r\n\r\nfunction TooltipContent({\r\n  className,\r\n  arrow,\r\n  side,\r\n  sideOffset = 8,\r\n  children,\r\n  ...props\r\n}: React.ComponentProps<typeof TooltipPrimitive.Positioner> &\r\n  React.ComponentProps<typeof TooltipPrimitive.Popup> & { arrow?: boolean }) {\r\n  return (\r\n    <TooltipPrimitive.Portal>\r\n      <TooltipPrimitive.Positioner side={side} sideOffset={sideOffset}>\r\n        <TooltipPrimitive.Popup\r\n          data-slot=\"tooltip-content\"\r\n          className={cn(\r\n            \"bg-popover text-popover-foreground data-open:animate-in data-open:fade-in-0 data-open:zoom-in-95 data-closed:animate-out data-closed:fade-out-0 data-closed:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 shadow-bevel-lg z-50 w-fit origin-(--radix-tooltip-content-transform-origin) rounded-xl px-2 py-1 text-sm text-balance\",\r\n            className\r\n          )}\r\n          {...props}\r\n        >\r\n          {children}\r\n          {arrow ? (\r\n            <TooltipPrimitive.Arrow className=\"bg-primary fill-primary z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]\" />\r\n          ) : null}\r\n        </TooltipPrimitive.Popup>\r\n      </TooltipPrimitive.Positioner>\r\n    </TooltipPrimitive.Portal>\r\n  );\r\n}\r\n\r\nexport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger };\r\n","import { useState } from \"react\";\r\n\r\nimport { Eye, EyeOff } from \"lucide-react\";\r\n\r\nimport {\r\n  ULThemeFloatingLabelField,\r\n  type ULThemeFloatingLabelFieldProps,\r\n} from \"@/components/form/ULThemeFloatingLabelField\";\r\nimport {\r\n  Tooltip,\r\n  TooltipContent,\r\n  TooltipTrigger,\r\n} from \"@/components/ui/tooltip\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface ULThemePasswordFieldProps\r\n  extends Omit<ULThemeFloatingLabelFieldProps, \"type\" | \"endAdornment\"> {\r\n  onVisibilityToggle?: (isVisible: boolean) => void;\r\n  buttonClassName?: string;\r\n}\r\n\r\nexport const ULThemePasswordField = ({\r\n  onVisibilityToggle,\r\n  buttonClassName,\r\n  ...props\r\n}: ULThemePasswordFieldProps) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    const newState = !showPassword;\r\n    setShowPassword(newState);\r\n    onVisibilityToggle?.(newState);\r\n  };\r\n\r\n  const passwordButton = (\r\n    <Tooltip>\r\n      <TooltipTrigger\r\n        type=\"button\"\r\n        onClick={handleToggle}\r\n        className={cn(\r\n          // Layout & Positioning\r\n          \"cursor-pointer h-full w-full min-w-[44px] mr-[-5px]\",\r\n\r\n          // Border Radius - matches input field\r\n          \"theme-universal:rounded-r-input theme-universal:rounded-l-none\",\r\n\r\n          // Colors\r\n          \"theme-universal:text-input-labels\",\r\n          \"theme-universal:hover:text-input-text\",\r\n\r\n          // Transitions\r\n          \"transition-colors\",\r\n\r\n          // Focus States\r\n          \"theme-universal:focus:bg-base-focus/15 theme-universal:focus-visible:ring-0 theme-universal:focus-visible:ring-offset-0\",\r\n\r\n          // Layout\r\n          \"flex items-center justify-center\",\r\n\r\n          // Button-like styles\r\n          \"bg-transparent border-none outline-none\",\r\n\r\n          buttonClassName\r\n        )}\r\n        aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n      >\r\n        {showPassword ? <EyeOff /> : <Eye />}\r\n      </TooltipTrigger>\r\n      <TooltipContent\r\n        sideOffset={0}\r\n        className=\"bg-black text-white -mb-2 ml-0.5\"\r\n      >\r\n        {showPassword ? \"Hide password\" : \"Show password\"}\r\n      </TooltipContent>\r\n    </Tooltip>\r\n  );\r\n\r\n  return (\r\n    <ULThemeFloatingLabelField\r\n      {...props}\r\n      type={showPassword ? \"text\" : \"password\"}\r\n      endAdornment={passwordButton}\r\n    />\r\n  );\r\n};\r\n\r\nULThemePasswordField.displayName = \"ULThemePasswordField\";\r\n","import { useForm } from \"react-hook-form\";\r\n\r\nimport type { Error } from \"@auth0/auth0-acul-js/types\";\r\n\r\nimport Captcha from \"@/components/Captcha\";\r\nimport {\r\n  ULThemeFloatingLabelField,\r\n  ULThemeFormMessage,\r\n} from \"@/components/form\";\r\nimport { Form, FormField, FormItem } from \"@/components/ui/form\";\r\nimport { ULThemeAlert, ULThemeAlertTitle } from \"@/components/ULThemeError\";\r\nimport ULThemeLink from \"@/components/ULThemeLink\";\r\nimport { ULThemePasswordField } from \"@/components/ULThemePasswordField\";\r\nimport { ULThemePrimaryButton } from \"@/components/ULThemePrimaryButton\";\r\nimport { getFieldError } from \"@/utils/helpers/errorUtils\";\r\nimport { getIdentifierDetails } from \"@/utils/helpers/identifierUtils\";\r\nimport { rebaseLinkToCurrentOrigin } from \"@/utils/helpers/urlUtils\";\r\n\r\nimport { useLoginPasswordManager } from \"../hooks/useLoginPasswordManager\";\r\n\r\ninterface LoginPasswordFormData {\r\n  username: string;\r\n  password: string;\r\n  captcha?: string;\r\n}\r\n\r\n/**\r\n * IdentifierForm Component\r\n *\r\n * This component renders the login form for the LoginPassword screen.\r\n * It includes fields for username, password, and CAPTCHA (if required),\r\n * along with error handling and support for editing identifiers.\r\n */\r\nfunction IdentifierForm() {\r\n  // Extract necessary methods and properties from the custom hook\r\n  const {\r\n    links,\r\n    data,\r\n    handleLoginPassword,\r\n    errors,\r\n    isCaptchaAvailable,\r\n    captchaImage,\r\n    resetPasswordLink,\r\n    isForgotPasswordEnabled,\r\n    loginPasswordInstance,\r\n    texts,\r\n  } = useLoginPasswordManager();\r\n\r\n  // Initialize the form using react-hook-form\r\n  const form = useForm<LoginPasswordFormData>({\r\n    defaultValues: {\r\n      username: data?.username || \"\",\r\n      password: \"\",\r\n      captcha: \"\",\r\n    },\r\n  });\r\n\r\n  const {\r\n    formState: { isSubmitting },\r\n  } = form;\r\n\r\n  // Handle text fallbacks for button and field labels\r\n  const buttonText = texts?.buttonText || \"Continue\";\r\n  const passwordLabelText = texts?.passwordPlaceholder || \"Password\";\r\n  const captchaLabel = texts?.captchaCodePlaceholder?.concat(\"*\") || \"CAPTCHA*\";\r\n  const captchaImageAlt = \"CAPTCHA challenge\"; // Default fallback\r\n  const forgotPasswordText = texts?.forgotPasswordText || \"Forgot Password?\";\r\n\r\n  // Extract general errors (not field-specific) from the SDK\r\n  const generalErrors =\r\n    errors?.filter((error: Error) => !error.field || error.field === null) ||\r\n    [];\r\n\r\n  // Extract field-specific errors for username, password, and CAPTCHA\r\n  const usernameSDKError =\r\n    getFieldError(\"username\", errors) || getFieldError(\"email\", errors);\r\n  const passwordSDKError = getFieldError(\"password\", errors);\r\n  const captchaSDKError = getFieldError(\"captcha\", errors);\r\n\r\n  // Get allowed identifiers (e.g., email, username, phone) from the SDK\r\n  const allowedIdentifiers =\r\n    loginPasswordInstance?.transaction?.getAllowedIdentifiers() || [];\r\n\r\n  // Get password policy (e.g., minimum length) from the SDK\r\n  const passwordPolicy =\r\n    loginPasswordInstance?.transaction?.getPasswordPolicy();\r\n\r\n  // Determine the label and type for the username field based on allowed identifiers\r\n  const { label: usernameLabel, type: usernameType } = getIdentifierDetails(\r\n    allowedIdentifiers,\r\n    texts\r\n  );\r\n\r\n  /**\r\n   * Handles form submission.\r\n   *\r\n   * @param data - The form data containing username, password, and optional CAPTCHA.\r\n   */\r\n  const onSubmit = async (data: LoginPasswordFormData) => {\r\n    await handleLoginPassword(data.username, data.password, data.captcha);\r\n  };\r\n\r\n  // Rebase the reset password link to the current origin\r\n  const localizedResetPasswordLink =\r\n    resetPasswordLink && rebaseLinkToCurrentOrigin(resetPasswordLink);\r\n\r\n  // Rebase the edit identifier link to the current origin\r\n  const editIdentifierLink =\r\n    rebaseLinkToCurrentOrigin(links?.edit_identifier) || \"\";\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-2\">\r\n        {/* General error messages */}\r\n        {generalErrors.length > 0 && (\r\n          <div className=\"space-y-3 mb-4\">\r\n            {generalErrors.map((error: Error, index: number) => (\r\n              <ULThemeAlert key={index}>\r\n                <ULThemeAlertTitle>{error.message}</ULThemeAlertTitle>\r\n              </ULThemeAlert>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Username input field */}\r\n        <FormField\r\n          control={form.control}\r\n          name=\"username\"\r\n          render={({ field, fieldState }) => (\r\n            <FormItem>\r\n              <ULThemeFloatingLabelField\r\n                {...field}\r\n                label={usernameLabel}\r\n                type={usernameType}\r\n                value={data?.username || \"\"}\r\n                error={!!fieldState.error || !!usernameSDKError}\r\n                readOnly={true}\r\n                endAdornment={\r\n                  <ULThemeLink href={editIdentifierLink}>\r\n                    {texts?.editEmailText || \"Edit\"}\r\n                  </ULThemeLink>\r\n                }\r\n                className=\"pr-[16px]\"\r\n              />\r\n              <ULThemeFormMessage\r\n                sdkError={usernameSDKError}\r\n                hasFormError={!!fieldState.error}\r\n              />\r\n            </FormItem>\r\n          )}\r\n        />\r\n\r\n        {/* Password input field */}\r\n        <FormField\r\n          control={form.control}\r\n          name=\"password\"\r\n          rules={{\r\n            required: \"Password is required\",\r\n            maxLength: {\r\n              value: 200,\r\n              message: \"Maximum 200 characters allowed\",\r\n            },\r\n            minLength: passwordPolicy?.minLength\r\n              ? {\r\n                  value: passwordPolicy.minLength,\r\n                  message: `Password must be at least ${passwordPolicy.minLength} characters`,\r\n                }\r\n              : undefined,\r\n          }}\r\n          render={({ field, fieldState }) => (\r\n            <FormItem>\r\n              <ULThemePasswordField\r\n                {...field}\r\n                label={passwordLabelText}\r\n                autoFocus={true}\r\n                autoComplete=\"current-password\"\r\n                error={!!fieldState.error || !!passwordSDKError}\r\n              />\r\n              <ULThemeFormMessage\r\n                sdkError={passwordSDKError}\r\n                hasFormError={!!fieldState.error}\r\n              />\r\n            </FormItem>\r\n          )}\r\n        />\r\n\r\n        {/* CAPTCHA Box */}\r\n        {isCaptchaAvailable &&\r\n          (passwordSDKError || captchaSDKError || generalErrors.length > 0) && (\r\n            <Captcha\r\n              control={form.control}\r\n              name=\"captcha\"\r\n              label={captchaLabel}\r\n              imageUrl={captchaImage || \"\"}\r\n              imageAltText={captchaImageAlt}\r\n              className=\"mb-4\"\r\n              sdkError={captchaSDKError}\r\n              rules={{\r\n                required: \"Please complete the CAPTCHA\",\r\n                maxLength: {\r\n                  value: 15,\r\n                  message: \"CAPTCHA too long\",\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n\r\n        {/* Forgot Password link */}\r\n        <div className=\"text-left mb-4\">\r\n          {isForgotPasswordEnabled && localizedResetPasswordLink && (\r\n            <ULThemeLink href={localizedResetPasswordLink}>\r\n              {forgotPasswordText}\r\n            </ULThemeLink>\r\n          )}\r\n        </div>\r\n\r\n        {/* Submit button */}\r\n        <ULThemePrimaryButton\r\n          type=\"submit\"\r\n          className=\"w-full\"\r\n          disabled={isSubmitting}\r\n        >\r\n          {buttonText}\r\n        </ULThemePrimaryButton>\r\n      </form>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default IdentifierForm;\r\n","import ULThemeCard from \"@/components/ULThemeCard\";\r\nimport ULThemePageLayout from \"@/components/ULThemePageLayout\";\r\nimport { applyAuth0Theme } from \"@/utils/theme/themeEngine\";\r\n\r\nimport Footer from \"./components/Footer\";\r\nimport Header from \"./components/Header\";\r\nimport IdentifierForm from \"./components/IdentifierForm\";\r\nimport { useLoginPasswordManager } from \"./hooks/useLoginPasswordManager\";\r\n\r\nfunction LoginPasswordScreen() {\r\n  // Extracting attributes from hook made out of LoginPasswordInstance class of Auth0 JS SDK\r\n  const { loginPasswordInstance } = useLoginPasswordManager();\r\n\r\n  // Apply theme from SDK instance when screen loads\r\n  applyAuth0Theme(loginPasswordInstance);\r\n\r\n  return (\r\n    // Applying UDS theme overrides using the \"theme-universal\" class\r\n    <ULThemePageLayout className=\"theme-universal\">\r\n      <ULThemeCard className=\"w-full max-w-[400px] gap-0\">\r\n        <Header />\r\n        <IdentifierForm />\r\n        <Footer />\r\n      </ULThemeCard>\r\n    </ULThemePageLayout>\r\n  );\r\n}\r\n\r\nexport default LoginPasswordScreen;\r\n","/**\r\n * In a development environment, this utility dynamically loads a mock JSON file\r\n * based on the `VITE_SCREEN_NAME` environment variable and sets it to the\r\n * global `universal_login_context` object. This allows for rapid UI\r\n * development and testing of screen-specific components.\r\n *\r\n * Assumes `scripts/dev-screen.js` (in dev mode) has validated `VITE_SCREEN_NAME`\r\n * and the existence of the corresponding mock JSON file.\r\n */\r\nexport async function loadAndSetMockContext(): Promise<void> {\r\n  if (!import.meta.env.DEV) {\r\n    return;\r\n  }\r\n\r\n  const screenName = import.meta.env.VITE_SCREEN_NAME;\r\n\r\n  if (!screenName) {\r\n    console.error(\r\n      \"DEV_ERROR: VITE_SCREEN_NAME not set. Use 'npm run screen <screen-name>'. Defaulting to empty context for dev.\"\r\n    );\r\n    // @ts-expect-error - It's safe to assign an empty object here because the\r\n    // themeEngine, the primary consumer, is now robust enough to handle it.\r\n    window.universal_login_context = {};\r\n    return;\r\n  }\r\n\r\n  try {\r\n    console.log(`[DEV] Loading mock data for screen: ${screenName}...`);\r\n    // Dynamically import the mock data file for the specified screen\r\n    const mockDataModule = await import(`../../mock-data/${screenName}.json`);\r\n    console.log(`[DEV] Successfully loaded mock data for: ${screenName}`);\r\n    window.universal_login_context = mockDataModule.default;\r\n  } catch (error) {\r\n    console.error(\r\n      `DEV_ERROR: Failed to load mock data for '${screenName}.json'. ` +\r\n        `Ensure file exists. Dev script should have caught this. Error:`,\r\n      error\r\n    );\r\n    // @ts-expect-error - It's safe to assign an empty object here because the\r\n    // themeEngine, the primary consumer, is now robust enough to handle it.\r\n    window.universal_login_context = {};\r\n  }\r\n}\r\n","import { lazy } from \"react\";\r\n\r\nconst SCREEN_COMPONENTS: Record<string, React.ComponentType> = {\r\n  \"login-id\": lazy(() => import(\"@/screens/login-id\")),\r\n  login: lazy(() => import(\"@/screens/login\")),\r\n  \"login-password\": lazy(() => import(\"@/screens/login-password\")),\r\n};\r\n\r\nexport const getScreenComponent = (\r\n  screenName: string\r\n): React.ComponentType | null => {\r\n  return SCREEN_COMPONENTS[screenName] || null;\r\n};\r\n","import { Suspense, useEffect, useState } from \"react\";\r\n\r\nimport { getCurrentScreen } from \"@auth0/auth0-acul-js\";\r\n\r\nimport { getScreenComponent } from \"@/utils/screen/screenLoader\";\r\n\r\nconst App = () => {\r\n  const [screen, setScreen] = useState(\"login-id\");\r\n\r\n  useEffect(() => {\r\n    const current = getCurrentScreen();\r\n    setScreen(current || \"login-id\");\r\n  }, []);\r\n\r\n  const ScreenComponent = getScreenComponent(screen);\r\n\r\n  return (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      {ScreenComponent ? (\r\n        <ScreenComponent />\r\n      ) : (\r\n        <div>Screen &quot;{screen}&quot; not implemented yet</div>\r\n      )}\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport { loadAndSetMockContext } from \"@/utils/screen/mockContextLoader\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App.tsx\";\r\n\r\nasync function initializeApp() {\r\n  await loadAndSetMockContext();\r\n\r\n  /**\r\n   * ACUL Integration Note:\r\n   * The following lines handle the specific way this React application is integrated\r\n   * into Auth0's Universal Login page. Auth0 provides the base HTML DOM.\r\n   * This script then creates a 'div' (rootElement),\r\n   * appends it to Auth0's document.body, and then mounts the React application onto this div.\r\n   * This differs from typical setups where an index.html is bundled directly with the app.\r\n   */\r\n  const rootElement = document.createElement(\"div\");\r\n  rootElement.id = \"root\";\r\n\r\n  document.body.appendChild(rootElement);\r\n\r\n  createRoot(document.getElementById(\"root\")!).render(\r\n    <StrictMode>\r\n      <App />\r\n    </StrictMode>\r\n  );\r\n}\r\n\r\ninitializeApp();\r\n"],"file":"index.htq3QW6u.js"}