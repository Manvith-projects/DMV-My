{"version":3,"mappings":"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","names":["cn","inputs","twMerge","clsx","ULThemePageLayout","children","className","rest","rootClasses","jsxs","jsx","LoginScreen","useEffect","showPassword","setShowPassword","useState","togglePassword","e","Card","props","ULThemeCard","themeClasses","flattenColors","colors","result","calculateBorderRadius","style","defaultRadius","fallbackRadius","flattenBorders","borders","buttonBorderRadius","inputBorderRadius","flattenFonts","fonts","processFontType","fontData","fontType","sizePercent","calculatedSize","remValue","flattenPageBackground","pageBackground","layoutMap","flattenWidget","widget","positionMap","alignmentMap","currentThemeCache","PRECEDENCE_VARIABLE_MAPPING","applyAuth0Theme","screenInstance","clearThemeCache","themeData","extractThemeData","applyThemeVariables","theme","settingsVars","extractBrandingOverrides","themeVars","extractThemeVariables","organizationVars","branding","overrides","applyMappedOverrides","source","mapping","authPath","cssVar","value","getNestedValue","obj","path","current","key","newTheme","changedVars","findChangedVariables","updateDOMVariables","updateThemeCache","changed","varName","variables","documentStyle","linkVariants","cva","Link","variant","underline","ref","extractTokenValue","ULThemeLink","disabled","baseStyles","disabledStyles","variantThemeOverrides","linkStyleValue","rebaseLinkToCurrentOrigin","originalLink","targetOrigin","url","error","executeSafely","actionDescription","actionFn","useLoginPasswordManager","loginPasswordInstance","useMemo","LoginPassword","transaction","screen","isSignupEnabled","isForgotPasswordEnabled","isPasskeyEnabled","signupLink","resetPasswordLink","texts","captchaImage","editIdentifierLink","links","data","loginId","password","captcha","options","Footer","localizedSignupLink","footerText","footerLinkText","Avatar","AvatarPrimitive.Root","AvatarImage","AvatarPrimitive.Image","ULThemeLogo","imageUrl","altText","themedLogoSrcValue","isLogoHidden","themedStylesAvatar","themedStylesAvatarImg","logoSrc","ULThemeSubtitle","ULThemeTitle","Header","logoAltText","Fragment","floatingLabelFieldVariants","FloatingLabelField","React.forwardRef","size","helperText","label","startAdornment","endAdornment","focused","setFocused","React.useState","hasValue","setHasValue","isDisabled","handleFocus","handleBlur","handleChange","isLabelFloating","FieldPrimitive.Root","FieldPrimitive.Label","FieldPrimitive.Control","Form","FormProvider","FormFieldContext","React.createContext","FormField","Controller","useFormField","fieldContext","React.useContext","itemContext","FormItemContext","getFieldState","useFormContext","formState","useFormState","fieldState","id","FormItem","React.useId","FormMessage","formMessageId","body","ulThemeFloatingLabelFieldVariants","ULThemeFloatingLabelField","wrapperClassName","formItemId","effectiveVariant","themeOverrides","BaseFloatingLabelField","ULThemeFormMessage","sdkError","hasFormError","showIcon","AlertCircle","Captcha","name","control","rules","imageAltText","containerStyles","imageContainerStyles","field","alertVariants","Alert","AlertTitle","ULThemeAlert","ULThemeAlertTitle","TooltipProvider","delayDuration","TooltipPrimitive.Provider","Tooltip","TooltipPrimitive.Root","TooltipTrigger","TooltipPrimitive.Trigger","TooltipContent","arrow","side","sideOffset","TooltipPrimitive.Portal","TooltipPrimitive.Positioner","TooltipPrimitive.Popup","TooltipPrimitive.Arrow","ULThemePasswordField","onVisibilityToggle","buttonClassName","handleToggle","newState","passwordButton","EyeOff","Eye","buttonVariants","Button","render","defaultProps","useRender","ULThemePrimaryButton","sizeThemeOverrides","getFieldError","fieldName","errors","err","createIdentifierKey","hasEmail","hasPhone","hasUsername","identifiers","getIdentifierDetails","connectionAttributes","screenTexts","finalLabel","finalType","finalAutoComplete","identifierKey","config","IdentifierForm","handleLoginPassword","isCaptchaAvailable","form","useForm","isSubmitting","buttonText","passwordLabelText","captchaLabel","captchaImageAlt","forgotPasswordText","generalErrors","usernameSDKError","passwordSDKError","captchaSDKError","allowedIdentifiers","passwordPolicy","usernameLabel","usernameType","onSubmit","localizedResetPasswordLink","index","LoginPasswordScreen","loadAndSetMockContext","SCREEN_COMPONENTS","lazy","__vitePreload","index$1","index$2","getScreenComponent","screenName","App","setScreen","getCurrentScreen","ScreenComponent","Suspense","initializeApp","rootElement","createRoot","StrictMode"],"ignoreList":[],"sources":["../../../src/lib/utils.ts","../../../src/components/ULThemePageLayout.tsx","../../../src/screens/login/index.tsx","../../../src/screens/login-id/index.tsx","../../../src/components/ui/card.tsx","../../../src/components/ULThemeCard.tsx","../../../src/utils/theme/themeFlatteners.ts","../../../src/utils/theme/themeEngine.ts","../../../src/components/ui/link.tsx","../../../src/utils/helpers/tokenUtils.ts","../../../src/components/ULThemeLink.tsx","../../../src/utils/helpers/urlUtils.ts","../../../src/utils/helpers/executeSafely.ts","../../../src/screens/login-password/hooks/useLoginPasswordManager.ts","../../../src/screens/login-password/components/Footer.tsx","../../../src/components/ui/avatar.tsx","../../../src/components/ULThemeLogo.tsx","../../../src/components/ULThemeSubtitle.tsx","../../../src/components/ULThemeTitle.tsx","../../../src/screens/login-password/components/Header.tsx","../../../src/components/ui/floating-label-field.tsx","../../../src/components/ui/form.tsx","../../../src/components/form/ULThemeFloatingLabelField.tsx","../../../src/components/form/ULThemeFormMessage.tsx","../../../src/components/Captcha.tsx","../../../src/components/ui/alert.tsx","../../../src/components/ULThemeError.tsx","../../../src/components/ui/tooltip.tsx","../../../src/components/ULThemePasswordField.tsx","../../../src/components/ui/button.tsx","../../../src/components/ULThemePrimaryButton.tsx","../../../src/utils/helpers/errorUtils.ts","../../../src/utils/helpers/identifierUtils.ts","../../../src/screens/login-password/components/IdentifierForm.tsx","../../../src/screens/login-password/index.tsx","../../../src/utils/screen/mockContextLoader.ts","../../../src/utils/screen/screenLoader.ts","../../../src/App.tsx","../../../src/main.tsx"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n","import type { HTMLAttributes, ReactNode } from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface ULThemePageLayoutProps extends HTMLAttributes<HTMLDivElement> {\r\n  /**\r\n   * The content of the layout.\r\n   */\r\n  children: ReactNode;\r\n  /**\r\n   * Optional class names for additional styling or overriding default styles.\r\n   */\r\n  className?: string;\r\n}\r\n\r\nconst ULThemePageLayout = ({\r\n  children,\r\n  className,\r\n  ...rest\r\n}: ULThemePageLayoutProps) => {\r\n  // Use theme token utilities for page alignment and background.\r\n  const rootClasses = cn(\"w-full min-h-screen\", \"justify-page-layout\", className);\r\n\r\n  return (\r\n    <div className={rootClasses} {...rest}>\r\n      {/* UL top blue header\r\n          Color/gradient comes from `.ul-topbar` rules in `src/index.css` (uses hard-coded gradient)\r\n          Logo image is read from the UL theme CSS variable `--ul-theme-widget-logo-url` set in `:root` of `src/index.css`.\r\n      */}\r\n      <div className=\"ul-topbar\">\r\n        <div className=\"container mx-auto py-9 px-6 flex items-center justify-between h-14\">\r\n          <div className=\"flex items-center\">\r\n            {/* Logo container\r\n                Background image reads from CSS variable `--ul-theme-widget-logo-url` (defined in `src/index.css` :root). The sizing/positioning is controlled by `.ul-logo` styles.\r\n            */}\r\n            <div\r\n              className=\"ul-logo bg-no-repeat bg-contain\"\r\n              style={{\r\n                backgroundImage:\r\n                  \"url('https://www.dmv.ca.gov/imageserver/theme_10up/images/logo-ca-gov.svg')\",\r\n                height: \"36px\",\r\n                width: \"160px\",\r\n              }}\r\n              aria-hidden\r\n            />\r\n            <div\r\n              // remove visual gap by nudging the second logo left\r\n              className=\"ul-logo bg-no-repeat bg-contain -ml-20\"\r\n              style={{\r\n                backgroundImage:\r\n                  \"url('https://www.dmv.ca.gov/imageserver/theme_10up/images/logo-ca-dmv-white.svg')\",\r\n                height: \"36px\",\r\n                width: \"160px\",\r\n              }}\r\n              aria-hidden\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-4\">\r\n            {/* Global logo (globe icon) placed before Translate button */}\r\n            <span className=\"bg-white p-1 rounded-full\" aria-hidden=\"true\">\r\n              <i\r\n                className=\"fa-solid fa-globe\"\r\n                style={{ color: \"#000\" }}\r\n                aria-hidden=\"true\"\r\n              ></i>\r\n            </span>\r\n            <button className=\"translate-btn\">Translate</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* White nav strip with centered Home text */}\r\n      {/* Navigation strip\r\n          Background is white set by `.ul-nav` rules in `src/index.css` (keeps the centered white bar below the blue header).\r\n      */}\r\n      <div className=\"ul-nav\">\r\n        <div className=\"container mx-auto px-6\">\r\n          <div className=\"py-4 text-center font-bold\">Home</div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Hero/banner area\r\n          Visual color/illustration is applied via `.ul-hero` rules in `src/index.css` which set gradients and the angled white strip (::after).\r\n          If provided, the theme token `--ul-theme-page-bg-background-image-url` (in `:root` of `src/index.css` or injected by theme engine) will set a background image via the inline style here.\r\n          The `hero-title` text color/size is controlled by `.ul-hero .hero-title` rules in `src/index.css`.\r\n      */}\r\n      <div\r\n        className=\"ul-hero\"\r\n        style={{\r\n          position: \"relative\", // ensure stacking context for overlap\r\n          zIndex: 1,\r\n          backgroundImage: `url('https://www.dmv.ca.gov/imageserver/theme_10up/images/hero-mountains.png')`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          clipPath: \"polygon(0 0, 100% 0, 100% 69%, 0 98%)\",\r\n          minHeight: \"400px\",\r\n        }}\r\n      >\r\n        <div className=\"container mx-auto px-9 relative bg-cover\">\r\n          <div className=\"absolute inset-0 flex items-start justify-start\">\r\n            <h1\r\n              className=\"hero-title m-10\"\r\n              style={{ fontFamily: \"tt-commons-800-italic, sans-serif\" }}\r\n            >\r\n              LOG IN\r\n            </h1>\r\n          </div>\r\n        </div>\r\n            </div>\r\n\r\n      {/* Screen content inserted here */}\r\n      {/* Main content wrapper\r\n          Make the content overlap the hero by using a negative top margin and higher z-index.\r\n          You can adjust the `marginTop` value to control how much the content overlays the hero.\r\n      */}\r\n      <div\r\n        className=\"ul-content relative w-full\"\r\n        style={{\r\n          marginTop: \"-150px\", // negative margin to lift content over the hero\r\n          zIndex: 20,\r\n        }}\r\n      >\r\n        {/* Wider container so screens can occupy more horizontal space (now using `max-w-7xl`) */}\r\n        <div className=\"container mx-auto px-6 w-full max-w-7xl\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ULThemePageLayout;\r\n","import { useEffect, useState } from \"react\";\r\nimport ULThemePageLayout from \"@/components/ULThemePageLayout\";\r\n\r\nfunction LoginScreen() {\r\n  useEffect(() => {\r\n    document.title = \"Login\";\r\n  }, []);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const togglePassword = () => setShowPassword((s) => !s);\r\n\r\n  return (\r\n    <ULThemePageLayout className=\"theme-universal\">\r\n      <div className=\"login-page min-h-screen flex flex-col z-30\">\r\n        {/* Header and hero are supplied by the UL theme wrapper; screens should only render screen-level containers */}\r\n\r\n        {/* Centered card */}\r\n        <main className=\"container mx-auto px-6 -mt-16 mb-16 z-30 max-w-7xl\">\r\n          <div className=\"max-w-7xl mx-auto\">\r\n            <div className=\"login-card bg-white rounded overflow-hidden w-full\">\r\n              <div className=\"p-6\">\r\n                <h2 className=\"welcome-title\">Welcome Back</h2>\r\n                <hr className=\"divider mb-4\" />\r\n\r\n                <form className=\"login-container\" onSubmit={(e) => e.preventDefault()}>\r\n                  <div className=\"wallet-login mb-4 flex items-start gap-3\">\r\n                    <div className=\"wallet-icon h-10 w-10 rounded overflow-hidden bg-white flex items-center justify-center\">\r\n                      <img\r\n                        src=\"https://cdn.dmv.ca.gov/dmv-cdn/prod/isam/images/mdl/ca-dmv-wallet-icon.png\"\r\n                        alt=\"CA DMV Wallet\"\r\n                        className=\"h-full w-full object-contain\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                        <a href=\"#\" className=\"wallet-link text-link font-medium links\" >Log in with CA DMV Wallet App</a>\r\n                      <div className=\"wallet-subtitle text-xs text-muted\">No password needed</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"section-title mb-3\">MyDMV</div>\r\n\r\n                 \r\n\r\n                  <p className=\"register-text mb-4 small-note\">\r\n                    <strong>Not Registered?</strong> In order to log in, you will first need to <a href=\"#\" className=\"text-link underline links\">create an account</a>.\r\n                  </p>\r\n\r\n                  <div className=\"form-group mb-4\">\r\n                    <label htmlFor=\"email\" className=\"form-label label-text\">Email</label>\r\n                    <input id=\"email\" name=\"email\" type=\"email\" className=\"form-input input-field w-full\" placeholder=\"Email\" />\r\n                    <a href=\"#\" className=\"helper-link text-link mt-2 inline-block links\">No longer have access to your email address?</a>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-4\">\r\n                    <label htmlFor=\"password\" className=\"form-label label-text\">Password</label>\r\n                    <div className=\"password-wrapper relative\">\r\n                      <input id=\"password\" name=\"password\" type={showPassword ? \"text\" : \"password\"} className=\"form-input input-field w-full pr-10\" placeholder=\"Password\" />\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={togglePassword}\r\n                        className=\"toggle-password absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400\"\r\n                        aria-label=\"Show password\"\r\n                      >\r\n                        👁️\r\n                      </button>\r\n                    </div>\r\n                    <a href=\"#\" className=\"helper-link text-link mt-2 inline-block links\">Forgot your password?</a>\r\n                  </div>\r\n\r\n                  <div className=\"mb-6\">\r\n                    <button type=\"submit\" className=\"login-button\">Log In</button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n\r\n        <footer className=\"mt-auto\"></footer>\r\n      </div>\r\n    </ULThemePageLayout>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import { useEffect, useState } from \"react\";\n\nimport ULThemePageLayout from \"@/components/ULThemePageLayout\";\n\nfunction LoginScreen() {\n  useEffect(() => {\n    document.title = \"Login\";\n  }, []);\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePassword = () => setShowPassword((s) => !s);\n\n  return (\n    <ULThemePageLayout className=\"theme-universal\">\n      <div className=\"login-page min-h-screen flex flex-col z-30\">\n        {/* Header and hero are supplied by the UL theme wrapper; screens should only render screen-level containers */}\n\n        {/* Centered card */}\n        <main className=\"container mx-auto px-6 -mt-16 mb-16 z-30 max-w-8xl\">\n          <div className=\"max-w-7xl mx-auto\">\n            <div className=\"login-card bg-white rounded overflow-hidden w-full\">\n              <div className=\"p-6\">\n                <h2 className=\"welcome-title\">Welcome Back</h2>\n                <hr className=\"divider mb-4\" />\n\n                <form\n                  className=\"login-container\"\n                  onSubmit={(e) => e.preventDefault()}\n                >\n                  <div className=\"wallet-login mb-4 flex items-start gap-3\">\n                    <div className=\"wallet-icon h-10 w-10 rounded overflow-hidden bg-white flex items-center justify-center\">\n                      <img\n                        src=\"https://cdn.dmv.ca.gov/dmv-cdn/prod/isam/images/mdl/ca-dmv-wallet-icon.png\"\n                        alt=\"CA DMV Wallet\"\n                        className=\"h-full w-full object-contain\"\n                      />\n                    </div>\n                    <div>\n                      <a\n                        href=\"#\"\n                        className=\"wallet-link text-link font-medium links\"\n                      >\n                        Log in with CA DMV Wallet App\n                      </a>\n                      <div className=\"wallet-subtitle text-xs text-muted\">\n                        No password needed\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"section-title mb-3\">MyDMV</div>\n\n                  <p className=\"register-text mb-4 small-note\">\n                    <strong>Not Registered?</strong> In order to log in, you\n                    will first need to{\" \"}\n                    <a href=\"#\" className=\"text-link underline links\">\n                      create an account\n                    </a>\n                    .\n                  </p>\n\n                  <div className=\"form-group mb-4\">\n                    <label htmlFor=\"email\" className=\"form-label label-text\">\n                      Email\n                    </label>\n                    <input\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      className=\"form-input input-field w-full\"\n                      placeholder=\"Email\"\n                    />\n                    <a\n                      href=\"#\"\n                      className=\"helper-link text-link mt-2 inline-block links\"\n                    >\n                      No longer have access to your email address?\n                    </a>\n                  </div>\n\n                  <div className=\"form-group mb-4\">\n                    <label htmlFor=\"password\" className=\"form-label label-text\">\n                      Password\n                    </label>\n                    <div className=\"password-wrapper relative\">\n                      <input\n                        id=\"password\"\n                        name=\"password\"\n                        type={showPassword ? \"text\" : \"password\"}\n                        className=\"form-input input-field w-full pr-10\"\n                        placeholder=\"Password\"\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={togglePassword}\n                        className=\"toggle-password absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400\"\n                        aria-label={\n                          showPassword ? \"Hide password\" : \"Show password\"\n                        }\n                      >\n                        <i className=\"fa-regular fa-eye\" aria-hidden=\"true\"></i>\n                      </button>\n                    </div>\n                    <a\n                      href=\"#\"\n                      className=\"helper-link text-link mt-2 inline-block links\"\n                    >\n                      Forgot your password?\n                    </a>\n                  </div>\n\n                  <div className=\"mb-6\">\n                    <button type=\"submit\" className=\"login-button\">\n                      Log In\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </main>\n\n        <footer className=\"mt-auto\"></footer>\n      </div>\n    </ULThemePageLayout>\n  );\n}\n\nexport default LoginScreen;\n","import * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground shadow-bevel-2xl flex flex-col gap-6 rounded-4xl py-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardAction,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n};\r\n","import { cn } from \"@/lib/utils\";\r\n\r\nimport { Card } from \"./ui/card\";\r\n\r\nexport interface ULThemeCardProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  /**\r\n   * The content of the card element.\r\n   */\r\n  children: React.ReactNode;\r\n  /**\r\n   * Optional class names for additional styling or overriding default styles.\r\n   */\r\n  className?: string;\r\n}\r\n\r\nconst ULThemeCard = ({ children, className, ...rest }: ULThemeCardProps) => {\r\n  const themeClasses = cn(\r\n    \"px-10\",\r\n    \"py-10\",\r\n    \"theme-universal:bg-widget-bg\",\r\n    \"theme-universal:border-(--color-widget-border)\",\r\n    \"theme-universal:rounded-widget\",\r\n    \"theme-universal:shadow-widget\",\r\n    \"theme-universal:border-(length:--border-widget)\",\r\n    className\r\n  );\r\n\r\n  return (\r\n    <Card className={themeClasses} {...rest}>\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ULThemeCard;\r\n","/**\r\n * This module handles the conversion of Auth0 branding data structures into\r\n * CSS custom properties (variables) with proper unit conversions and formatting.\r\n *\r\n * KEY RESPONSIBILITIES:\r\n * - Convert Auth0 nested objects to flat CSS variable mappings\r\n * - Apply proper unit conversions (percentages to rem, numbers to px, etc.)\r\n * - Handle special formatting for URLs, shadows, and layout values\r\n * - Maintain consistent naming convention: --ul-theme-{category}-{property}\r\n *\r\n * UNIT CONVERSION EXAMPLES:\r\n * - Font sizes: 150% → 1.5rem, 87.5% → 0.875rem\r\n * - Font weights: true → 700, false → 400\r\n * - URLs: \"url\" → \"url\" (quoted for CSS)\r\n *\r\n * USAGE FLOW:\r\n * Branding Data from ACUL SDK → Flattener Functions → CSS Variables → DOM Injection\r\n *\r\n */\r\n\r\ninterface ColorData {\r\n  primary_button?: string;\r\n  primary_button_label?: string;\r\n  secondary_button_border?: string;\r\n  secondary_button_label?: string;\r\n  base_focus_color?: string;\r\n  base_hover_color?: string;\r\n  links_focused_components?: string;\r\n  header?: string;\r\n  body_text?: string;\r\n  widget_background?: string;\r\n  widget_border?: string;\r\n  input_labels_placeholders?: string;\r\n  input_filled_text?: string;\r\n  input_border?: string;\r\n  input_background?: string;\r\n  icons?: string;\r\n  error?: string;\r\n  success?: string;\r\n  captcha_widget_theme?: string;\r\n}\r\n\r\ninterface BorderData {\r\n  button_border_radius?: number;\r\n  buttons_style?: string;\r\n  input_border_radius?: number;\r\n  inputs_style?: string;\r\n  widget_corner_radius?: number;\r\n  button_border_weight?: number;\r\n  input_border_weight?: number;\r\n  widget_border_weight?: number;\r\n  show_widget_shadow?: boolean;\r\n}\r\n\r\ninterface FontData {\r\n  reference_text_size?: number;\r\n  title?: {\r\n    size?: number;\r\n    bold?: boolean;\r\n  };\r\n  subtitle?: {\r\n    size?: number;\r\n    bold?: boolean;\r\n  };\r\n  body_text?: {\r\n    size?: number;\r\n    bold?: boolean;\r\n  };\r\n  buttons_text?: {\r\n    size?: number;\r\n    bold?: boolean;\r\n  };\r\n  input_labels?: {\r\n    size?: number;\r\n    bold?: boolean;\r\n  };\r\n  links?: {\r\n    size?: number;\r\n    bold?: boolean;\r\n  };\r\n  links_style?: string;\r\n}\r\n\r\ninterface WidgetData {\r\n  logo_position?: string;\r\n  logo_url?: string;\r\n  logo_height?: number;\r\n  header_text_alignment?: string;\r\n  social_buttons_layout?: string;\r\n}\r\n\r\n/**\r\n * Flatten color data to CSS variables\r\n */\r\nexport function flattenColors(colors: ColorData): Record<string, string> {\r\n  const result: Record<string, string> = {};\r\n\r\n  if (colors.primary_button)\r\n    result[\"--ul-theme-color-primary-button\"] = colors.primary_button;\r\n  if (colors.primary_button_label)\r\n    result[\"--ul-theme-color-primary-button-label\"] =\r\n      colors.primary_button_label;\r\n  if (colors.secondary_button_border)\r\n    result[\"--ul-theme-color-secondary-button-border\"] =\r\n      colors.secondary_button_border;\r\n  if (colors.secondary_button_label)\r\n    result[\"--ul-theme-color-secondary-button-label\"] =\r\n      colors.secondary_button_label;\r\n  if (colors.base_focus_color)\r\n    result[\"--ul-theme-color-base-focus-color\"] = colors.base_focus_color;\r\n  if (colors.base_hover_color)\r\n    result[\"--ul-theme-color-base-hover-color\"] = colors.base_hover_color;\r\n  if (colors.links_focused_components)\r\n    result[\"--ul-theme-color-links-focused-components\"] =\r\n      colors.links_focused_components;\r\n  if (colors.header) result[\"--ul-theme-color-header\"] = colors.header;\r\n  if (colors.body_text) result[\"--ul-theme-color-body-text\"] = colors.body_text;\r\n  if (colors.widget_background)\r\n    result[\"--ul-theme-color-widget-background\"] = colors.widget_background;\r\n  if (colors.widget_border)\r\n    result[\"--ul-theme-color-widget-border\"] = colors.widget_border;\r\n  if (colors.input_labels_placeholders)\r\n    result[\"--ul-theme-color-input-labels-placeholders\"] =\r\n      colors.input_labels_placeholders;\r\n  if (colors.input_filled_text)\r\n    result[\"--ul-theme-color-input-filled-text\"] = colors.input_filled_text;\r\n  if (colors.input_border)\r\n    result[\"--ul-theme-color-input-border\"] = colors.input_border;\r\n  if (colors.input_background)\r\n    result[\"--ul-theme-color-input-background\"] = colors.input_background;\r\n  if (colors.icons) result[\"--ul-theme-color-icons\"] = colors.icons;\r\n  if (colors.error) result[\"--ul-theme-color-error\"] = colors.error;\r\n  if (colors.success) result[\"--ul-theme-color-success\"] = colors.success;\r\n  if (colors.captcha_widget_theme)\r\n    result[\"--ul-theme-color-captcha-widget-theme\"] =\r\n      colors.captcha_widget_theme;\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Helper function to calculate border radius based on style\r\n */\r\nfunction calculateBorderRadius(\r\n  style: string,\r\n  defaultRadius: number | undefined,\r\n  fallbackRadius: number = 10\r\n): number {\r\n  switch (style) {\r\n    case \"pill\":\r\n      return 9999;\r\n    case \"sharp\":\r\n      return 0;\r\n    case \"rounded\":\r\n    default:\r\n      return defaultRadius || fallbackRadius;\r\n  }\r\n}\r\n\r\n/**\r\n * Flatten border data to CSS variables with proper unit conversions\r\n */\r\nexport function flattenBorders(borders: BorderData): Record<string, string> {\r\n  const result: Record<string, string> = {};\r\n\r\n  // Calculate border radius values based on style, with automatic assignment\r\n  const buttonBorderRadius = borders.buttons_style\r\n    ? calculateBorderRadius(borders.buttons_style, borders.button_border_radius)\r\n    : borders.button_border_radius;\r\n\r\n  const inputBorderRadius = borders.inputs_style\r\n    ? calculateBorderRadius(borders.inputs_style, borders.input_border_radius)\r\n    : borders.input_border_radius;\r\n\r\n  if (buttonBorderRadius !== undefined)\r\n    result[\"--ul-theme-border-button-border-radius\"] =\r\n      `${buttonBorderRadius}px`;\r\n  if (inputBorderRadius !== undefined)\r\n    result[\"--ul-theme-border-input-border-radius\"] = `${inputBorderRadius}px`;\r\n  if (borders.widget_corner_radius)\r\n    result[\"--ul-theme-border-widget-corner-radius\"] =\r\n      `${borders.widget_corner_radius}px`;\r\n\r\n  // Border weight values need px units\r\n  if (borders.button_border_weight !== undefined)\r\n    result[\"--ul-theme-border-button-border-weight\"] =\r\n      `${borders.button_border_weight}px`;\r\n  if (borders.input_border_weight !== undefined)\r\n    result[\"--ul-theme-border-input-border-weight\"] =\r\n      `${borders.input_border_weight}px`;\r\n  if (borders.widget_border_weight !== undefined)\r\n    result[\"--ul-theme-border-widget-border-weight\"] =\r\n      `${borders.widget_border_weight}px`;\r\n\r\n  // Style values are already strings\r\n  if (borders.buttons_style)\r\n    result[\"--ul-theme-border-buttons-style\"] = borders.buttons_style;\r\n  if (borders.inputs_style)\r\n    result[\"--ul-theme-border-inputs-style\"] = borders.inputs_style;\r\n\r\n  // Boolean/numeric values for shadow - convert boolean to actual shadow values\r\n  if (borders.show_widget_shadow !== undefined)\r\n    result[\"--ul-theme-border-show-widget-shadow\"] = borders.show_widget_shadow\r\n      ? \"0px 12px 40px 0px rgba(0, 0, 0, 0.12)\"\r\n      : \"none\";\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Flatten font data to CSS variables with proper unit conversions\r\n */\r\nexport function flattenFonts(fonts: FontData): Record<string, string> {\r\n  const result: Record<string, string> = {};\r\n\r\n  // Reference text size is in pixels\r\n  if (fonts.reference_text_size)\r\n    result[\"--ul-theme-font-reference-text-size\"] =\r\n      `${fonts.reference_text_size}px`;\r\n\r\n  // Helper function to process font size and weight for each font type\r\n  const processFontType = (\r\n    fontData: { size?: number; bold?: boolean } | undefined,\r\n    fontType: string\r\n  ): void => {\r\n    if (fontData?.size) {\r\n      const sizePercent = fontData.size as number;\r\n\r\n      // Universal percentage-based sizing: ALL font types calculate as percentage of reference_text_size\r\n      if (fonts.reference_text_size) {\r\n        const referenceSize = fonts.reference_text_size as number;\r\n        const calculatedSize = (referenceSize * sizePercent) / 100;\r\n        result[`--ul-theme-font-${fontType}-size`] = `${calculatedSize}px`;\r\n      } else {\r\n        // Fallback: convert percentage to rem if no reference size available\r\n        const remValue = sizePercent / 100;\r\n        result[`--ul-theme-font-${fontType}-size`] = `${remValue}rem`;\r\n      }\r\n    }\r\n\r\n    if (fontData?.bold !== undefined) {\r\n      result[`--ul-theme-font-${fontType}-weight`] = fontData.bold\r\n        ? \"700\"\r\n        : \"400\";\r\n    }\r\n  };\r\n\r\n  processFontType(fonts.title, \"title\");\r\n  processFontType(fonts.subtitle, \"subtitle\");\r\n  processFontType(fonts.body_text, \"body-text\");\r\n  processFontType(fonts.buttons_text, \"buttons-text\");\r\n  processFontType(fonts.input_labels, \"input-labels\");\r\n  processFontType(fonts.links, \"links\");\r\n\r\n  // Links style (normal/italic)\r\n  if (fonts.links_style)\r\n    result[\"--ul-theme-font-links-style\"] = fonts.links_style;\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Flatten page background data to CSS variables\r\n */\r\nexport function flattenPageBackground(pageBackground: {\r\n  background_color?: string;\r\n  background_image_url?: string;\r\n  page_layout?: string;\r\n}): Record<string, string> {\r\n  const result: Record<string, string> = {};\r\n\r\n  if (pageBackground.background_color)\r\n    result[\"--ul-theme-page-bg-background-color\"] =\r\n      pageBackground.background_color;\r\n  if (pageBackground.background_image_url) {\r\n    result[\"--ul-theme-page-bg-background-image-url\"] =\r\n      pageBackground.background_image_url === null ||\r\n      pageBackground.background_image_url === \"\"\r\n        ? \"none\"\r\n        : `url(\"${pageBackground.background_image_url}\")`;\r\n  }\r\n  if (pageBackground.page_layout) {\r\n    // Convert to CSS justify-content values for use with arbitrary properties\r\n    const layoutMap: Record<string, string> = {\r\n      center: \"center\",\r\n      left: \"flex-start\",\r\n      right: \"flex-end\",\r\n    };\r\n    result[\"--ul-theme-page-bg-page-layout\"] =\r\n      layoutMap[pageBackground.page_layout] || \"center\";\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Flatten widget data to CSS variables with proper unit conversions\r\n */\r\nexport function flattenWidget(widget: WidgetData): Record<string, string> {\r\n  const result: Record<string, string> = {};\r\n\r\n  // Logo Source URL\r\n  if (widget.logo_url)\r\n    result[\"--ul-theme-widget-logo-url\"] = `\"${widget.logo_url}\"`;\r\n\r\n  // Logo height needs px units\r\n  if (widget.logo_height)\r\n    result[\"--ul-theme-widget-logo-height\"] = `${widget.logo_height}px`;\r\n\r\n  // Logo position: convert Auth0 values to Tailwind justify values\r\n  if (widget.logo_position) {\r\n    // Convert to Tailwind semantic variable\r\n    const positionMap: Record<string, string> = {\r\n      center: \"center\",\r\n      left: \"flex-start\",\r\n      right: \"flex-end\",\r\n      none: \"none\",\r\n    };\r\n    result[\"--ul-theme-widget-logo-position\"] =\r\n      positionMap[widget.logo_position] || \"center\";\r\n  }\r\n\r\n  // Header text alignment: convert Auth0 values to CSS text-align values\r\n  if (widget.header_text_alignment) {\r\n    result[\"--ul-theme-widget-header-text-alignment\"] =\r\n      widget.header_text_alignment;\r\n\r\n    // Convert to CSS text-align values for use with arbitrary properties\r\n    const alignmentMap: Record<string, string> = {\r\n      center: \"center\",\r\n      left: \"left\",\r\n      right: \"right\",\r\n    };\r\n    result[\"--text-align-header\"] =\r\n      alignmentMap[widget.header_text_alignment] || \"center\";\r\n  }\r\n  if (widget.social_buttons_layout)\r\n    result[\"--ul-theme-widget-social-buttons-layout\"] =\r\n      widget.social_buttons_layout;\r\n\r\n  return result;\r\n}\r\n","/**\r\n * This module is the main orchestrator for the Auth0 theme system.\r\n *\r\n * KEY RESPONSIBILITIES:\r\n * - Extract theme data from Auth0 screen instances with proper precedence\r\n * - Coordinate theme flattening and CSS variable generation\r\n * - Handle precedence system: Organization > Theme > Settings\r\n *\r\n * PRECEDENCE SYSTEM:\r\n * 1. Settings (lowest priority) - screenInstance.branding.settings\r\n * 2. Theme (medium priority) - screenInstance.branding.themes.default\r\n * 3. Organization (highest priority) - screenInstance.organization.branding\r\n *\r\n * USAGE PATTERN:\r\n * ```typescript\r\n * // In any Auth0 screen component\r\n * import { applyAuth0Theme } from \"@/utils/theme\";\r\n *\r\n * function LoginScreen() {\r\n *   const { screenInstance } = useScreenManager();\r\n *   applyAuth0Theme(screenInstance); // Apply theme when screen loads\r\n *   return <div>...</div>;\r\n * }\r\n * ```\r\n *\r\n * FLOW:\r\n * Screen Instance from ACUL SDK → Theme Extraction → Flattening → Change Detection → DOM Update\r\n */\r\n\r\nimport type {\r\n  BrandingMembers,\r\n  OrganizationMembers,\r\n} from \"@auth0/auth0-acul-js/types\";\r\n\r\nimport {\r\n  flattenBorders,\r\n  flattenColors,\r\n  flattenFonts,\r\n  flattenPageBackground,\r\n  flattenWidget,\r\n} from \"./themeFlatteners\";\r\n\r\ninterface Auth0ScreenInstance {\r\n  branding?: BrandingMembers;\r\n  organization?: OrganizationMembers;\r\n}\r\n\r\n// Cache for performance optimization - tracks current theme state\r\nlet currentThemeCache: Record<string, string> = {};\r\n\r\n// Essential variable mappings for precedence overrides\r\n// Maps Auth0 data paths to CSS variable names\r\nconst PRECEDENCE_VARIABLE_MAPPING = {\r\n  \"colors.primary\": \"--ul-theme-color-primary-button\",\r\n  \"colors.page_background\": \"--ul-theme-page-bg-background-color\",\r\n  logoUrl: \"--ul-theme-widget-logo-url\",\r\n} as const;\r\n\r\n/**\r\n * Main theme application function\r\n * Applies Auth0 branding data as CSS variables with proper precedence\r\n * USAGE PATTERN:\r\n * ```typescript\r\n * // In any Auth0 screen component\r\n * import { applyAuth0Theme } from \"@/utils/theme\";\r\n *\r\n * function LoginScreen() {\r\n *   const { screenInstance } = useScreenManager();\r\n *   applyAuth0Theme(screenInstance); // Apply theme when screen loads\r\n *   return <div>...</div>;\r\n * }\r\n * ```\r\n */\r\nexport function applyAuth0Theme(screenInstance: Auth0ScreenInstance): void {\r\n  if (!screenInstance?.branding) {\r\n    return;\r\n  }\r\n\r\n  clearThemeCache();\r\n  const themeData = extractThemeData(screenInstance);\r\n  applyThemeVariables(themeData);\r\n}\r\n\r\n/**\r\n * Extracts and merges theme data with precedence handling\r\n * Precedence order (lowest to highest): Settings -> Theme -> Organization\r\n */\r\nfunction extractThemeData(\r\n  screenInstance: Auth0ScreenInstance\r\n): Record<string, string> {\r\n  const theme =\r\n    screenInstance.branding?.themes?.default || ({} as Record<string, unknown>);\r\n\r\n  const settingsVars = extractBrandingOverrides(\r\n    screenInstance.branding?.settings as Record<string, unknown> | undefined\r\n  );\r\n  const themeVars = extractThemeVariables(theme as Record<string, unknown>);\r\n  const organizationVars = extractBrandingOverrides(\r\n    screenInstance.organization?.branding as Record<string, unknown> | undefined\r\n  );\r\n\r\n  return { ...settingsVars, ...themeVars, ...organizationVars };\r\n}\r\n\r\n/**\r\n * Extracts core theme variables from theme object\r\n */\r\nfunction extractThemeVariables(\r\n  theme: Record<string, unknown>\r\n): Record<string, string> {\r\n  return {\r\n    ...flattenColors(theme.colors || {}),\r\n    ...flattenBorders(theme.borders || {}),\r\n    ...flattenFonts(theme.fonts || {}),\r\n    ...flattenPageBackground(\r\n      theme.pageBackground || theme.page_background || {}\r\n    ),\r\n    ...flattenWidget(theme.widget || {}),\r\n  };\r\n}\r\n\r\n/**\r\n * Extracts branding overrides from settings or organization data\r\n * Handles both settings and organization sources with the same logic\r\n */\r\nfunction extractBrandingOverrides(\r\n  branding: Record<string, unknown> | undefined\r\n): Record<string, string> {\r\n  const overrides: Record<string, string> = {};\r\n\r\n  if (branding) {\r\n    applyMappedOverrides(branding, PRECEDENCE_VARIABLE_MAPPING, overrides);\r\n  }\r\n\r\n  return overrides;\r\n}\r\n\r\n/**\r\n * Applies mapped overrides from source object to overrides object\r\n * Handles special formatting for specific CSS variables\r\n */\r\nfunction applyMappedOverrides(\r\n  source: Record<string, unknown>,\r\n  mapping: Record<string, string>,\r\n  overrides: Record<string, string>\r\n): void {\r\n  Object.entries(mapping).forEach(([authPath, cssVar]) => {\r\n    const value = getNestedValue(source, authPath);\r\n    if (value && typeof value === \"string\") {\r\n      // Handle special formatting for specific variables\r\n      if (cssVar === \"--ul-theme-widget-logo-url\") {\r\n        overrides[cssVar] = `\"${value}\"`;\r\n      } else if (cssVar === \"--ul-theme-widget-logo-height\") {\r\n        // Logo height needs px units\r\n        overrides[cssVar] = typeof value === \"number\" ? `${value}px` : value;\r\n      } else {\r\n        overrides[cssVar] = value;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction getNestedValue(\r\n  obj: Record<string, unknown>,\r\n  path: string\r\n): string | undefined {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  return path.split(\".\").reduce((current: any, key) => current?.[key], obj) as\r\n    | string\r\n    | undefined;\r\n}\r\n\r\n/**\r\n * Applies theme variables to DOM with performance optimization\r\n * Only updates variables that have actually changed\r\n */\r\nfunction applyThemeVariables(newTheme: Record<string, string>): void {\r\n  const changedVars = findChangedVariables(newTheme);\r\n\r\n  if (Object.keys(changedVars).length === 0) {\r\n    return;\r\n  }\r\n\r\n  updateDOMVariables(changedVars);\r\n  updateThemeCache(changedVars);\r\n}\r\n\r\n/**\r\n * Identifies which variables have changed compared to cache\r\n */\r\nfunction findChangedVariables(\r\n  newTheme: Record<string, string>\r\n): Record<string, string> {\r\n  const changed: Record<string, string> = {};\r\n\r\n  Object.entries(newTheme).forEach(([varName, value]) => {\r\n    if (currentThemeCache[varName] !== value) {\r\n      changed[varName] = value;\r\n    }\r\n  });\r\n\r\n  return changed;\r\n}\r\n\r\n/**\r\n * Updates CSS custom properties in the DOM\r\n */\r\nfunction updateDOMVariables(variables: Record<string, string>): void {\r\n  const documentStyle = document.documentElement.style;\r\n\r\n  Object.entries(variables).forEach(([varName, value]) => {\r\n    documentStyle.setProperty(varName, value);\r\n  });\r\n}\r\n\r\nfunction updateThemeCache(changedVars: Record<string, string>): void {\r\n  currentThemeCache = { ...currentThemeCache, ...changedVars };\r\n}\r\n\r\nexport function clearThemeCache(): void {\r\n  currentThemeCache = {};\r\n}\r\n\r\nexport const getCaptchaTheme = (\r\n  theme: \"light\" | \"dark\" | \"auto\" | undefined\r\n) => {\r\n  if (theme === \"auto\") {\r\n    if (\r\n      window.matchMedia &&\r\n      window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n    ) {\r\n      return \"dark\";\r\n    }\r\n    return \"light\";\r\n  }\r\n  return theme || \"light\";\r\n};\r\n","import * as React from \"react\";\r\n\r\nimport { cva, VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst linkVariants = cva(\r\n  \"focus-within:ring-ring inline-flex items-center gap-2 rounded-md py-0.5 underline-offset-4 transition-colors focus:ring-3 focus-visible:outline-hidden\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        destructive: \"text-destructive hover:text-destructive/90\",\r\n        muted: \"text-muted hover:text-muted/80\",\r\n        primary: \"text-primary hover:text-primary/90\",\r\n      },\r\n      underline: {\r\n        none: \"no-underline\",\r\n        hover: \"no-underline hover:underline\",\r\n        always: \"underline\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"primary\",\r\n      underline: \"always\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface LinkProps\r\n  extends React.AnchorHTMLAttributes<HTMLAnchorElement>,\r\n    VariantProps<typeof linkVariants> {\r\n  /**\r\n   * Optional ref for the link element.\r\n   */\r\n  ref?: React.Ref<HTMLAnchorElement>;\r\n}\r\n\r\nfunction Link({\r\n  className,\r\n  children,\r\n  variant,\r\n  underline,\r\n  ref,\r\n  ...props\r\n}: LinkProps) {\r\n  return (\r\n    <a\r\n      ref={ref}\r\n      className={cn(linkVariants({ variant, underline }), className)}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </a>\r\n  );\r\n}\r\n\r\nexport { Link };\r\n","/**\r\n *  Extract and return the Token CSS Variable data from the token string\r\n */\r\nexport const extractTokenValue = (varName: string): string => {\r\n  return getComputedStyle(document.documentElement)\r\n    .getPropertyValue(varName)\r\n    .trim()\r\n    .replace(/^\"(.*)\"$/, \"$1\"); // Remove quotes\r\n};\r\n","import * as React from \"react\";\r\n\r\nimport { Link, type LinkProps } from \"@/components/ui/link\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { extractTokenValue } from \"@/utils/helpers/tokenUtils\";\r\n\r\nexport interface ULThemeLinkProps extends LinkProps {\r\n  /**\r\n   * The content of the link element.\r\n   */\r\n  children: React.ReactNode;\r\n  /**\r\n   * Additional class names for custom styling.\r\n   */\r\n  className?: string;\r\n  /**\r\n   * Optional flag to disable the link.\r\n   */\r\n  disabled?: boolean;\r\n  /**\r\n   * Optional ref for the link element.\r\n   */\r\n  ref?: React.Ref<HTMLAnchorElement>;\r\n}\r\n\r\nconst ULThemeLink = ({\r\n  children,\r\n  className,\r\n  disabled = false,\r\n  ref,\r\n  ...props\r\n}: ULThemeLinkProps) => {\r\n  // Base component styles\r\n  const baseStyles =\r\n    \"text-link-focus text-(length:--ul-theme-font-links-size) font-(weight:--ul-theme-font-links-weight) focus:rounded-(--ul-theme-border-links-border-radius) hover:text-link-focus/80\";\r\n\r\n  // Disabled state styles\r\n  const disabledStyles = disabled\r\n    ? \"pointer-events-none text-muted cursor-not-allowed\"\r\n    : \"\";\r\n\r\n  // UL theme overrides\r\n  const variantThemeOverrides =\r\n    \"theme-universal:focus:outline-none theme-universal:focus:ring-4 theme-universal:focus:ring-base-focus/15 theme-universal:focus:bg-base-focus/15\"; // focus base color\r\n\r\n  // Using extractTokenValue utility to extract the link style variant type from the CSS variable\r\n  const linkStyleValue =\r\n    extractTokenValue(\"--ul-theme-font-links-style\") === \"normal\"\r\n      ? \"none\"\r\n      : \"always\";\r\n\r\n  return (\r\n    <Link\r\n      ref={ref}\r\n      className={cn(\r\n        baseStyles,\r\n        disabledStyles,\r\n        variantThemeOverrides,\r\n        className\r\n      )}\r\n      underline={linkStyleValue}\r\n      aria-disabled={disabled}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ULThemeLink;\r\n","/**\r\n * Takes a URL (absolute or relative) and rebases it to the current window's origin,\r\n * preserving the path and query parameters.\r\n */\r\nexport const rebaseLinkToCurrentOrigin = (\r\n  originalLink: string | undefined | null\r\n): string | undefined | null => {\r\n  if (typeof window === \"undefined\" || !originalLink) {\r\n    return originalLink;\r\n  }\r\n\r\n  const targetOrigin = window.location.origin;\r\n\r\n  try {\r\n    // Handle absolute URLs\r\n    if (\r\n      originalLink.startsWith(\"http://\") ||\r\n      originalLink.startsWith(\"https://\")\r\n    ) {\r\n      const url = new URL(originalLink);\r\n      return targetOrigin + url.pathname + url.search + url.hash;\r\n    }\r\n\r\n    // Handle root-relative URLs (starting with /)\r\n    if (originalLink.startsWith(\"/\")) {\r\n      const url = new URL(originalLink, targetOrigin);\r\n      return targetOrigin + url.pathname + url.search + url.hash;\r\n    }\r\n\r\n    // Handle relative URLs (no leading slash)\r\n    // Treat as relative to current path\r\n    const url = new URL(originalLink, window.location.href);\r\n    return targetOrigin + url.pathname + url.search + url.hash;\r\n  } catch (error) {\r\n    console.error(\"Failed to rebase URL:\", error, { originalLink });\r\n    return originalLink;\r\n  }\r\n};\r\n","/**\r\n * In development mode, logs the intended action.\r\n */\r\nexport const executeSafely = <R>(\r\n  actionDescription: string,\r\n  actionFn: () => R\r\n): R | void => {\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    console.log(`[DEV ONLY] ${actionDescription}`);\r\n  } else {\r\n    return actionFn();\r\n  }\r\n};\r\n","import { useMemo } from \"react\";\r\n\r\nimport LoginPassword from \"@auth0/auth0-acul-js/login-password\";\r\nimport type { ScreenMembersOnLoginPassword } from \"@auth0/auth0-acul-js/types\";\r\n\r\nimport { executeSafely } from \"@/utils/helpers/executeSafely\";\r\n\r\n/**\r\n * Custom hook to manage the LoginPassword screen functionality.\r\n * This hook provides methods and properties to handle login with password,\r\n * federated login, and other related functionalities like CAPTCHA and error handling.\r\n */\r\nexport const useLoginPasswordManager = () => {\r\n  // Initialize the LoginPassword instance\r\n  const loginPasswordInstance = useMemo(() => new LoginPassword(), []);\r\n\r\n  // Extract transaction and screen properties from the LoginPassword instance\r\n  const { transaction, screen } = loginPasswordInstance;\r\n\r\n  // Extract relevant flags from the transaction object\r\n  const { isSignupEnabled, isForgotPasswordEnabled, isPasskeyEnabled } =\r\n    transaction;\r\n\r\n  // Extract relevant properties from the screen object\r\n  const {\r\n    signupLink,\r\n    resetPasswordLink,\r\n    texts,\r\n    captchaImage,\r\n    editIdentifierLink,\r\n    links,\r\n    data,\r\n  } = screen;\r\n\r\n  /**\r\n   * Handles the login process using a username and password.\r\n   * Optionally includes a CAPTCHA value if required.\r\n   *\r\n   * @param loginId - The username or email address of the user.\r\n   * @param password - The password of the user.\r\n   * @param captcha - (Optional) The CAPTCHA value if required.\r\n   * @returns A promise that resolves when the login process is complete.\r\n   */\r\n  const handleLoginPassword = async (\r\n    loginId: string,\r\n    password: string,\r\n    captcha?: string\r\n  ): Promise<void> => {\r\n    const options: { username: string; password: string; captcha?: string } = {\r\n      username: loginId?.trim() || \"\",\r\n      password: password?.trim() || \"\",\r\n    };\r\n\r\n    // Include CAPTCHA in the options if available and provided\r\n    if (screen.isCaptchaAvailable && captcha?.trim()) {\r\n      options.captcha = captcha.trim();\r\n    }\r\n\r\n    // Execute the login process safely and log any errors\r\n    executeSafely(\r\n      `LoginPassword with options: ${JSON.stringify(options)}`,\r\n      () => loginPasswordInstance.login(options)\r\n    );\r\n  };\r\n\r\n  return {\r\n    loginPasswordInstance,\r\n    handleLoginPassword,\r\n    texts: (texts || {}) as ScreenMembersOnLoginPassword[\"texts\"],\r\n    isSignupEnabled: isSignupEnabled === true,\r\n    isForgotPasswordEnabled: isForgotPasswordEnabled === true,\r\n    isPasskeyEnabled: isPasskeyEnabled === true,\r\n    isCaptchaAvailable: screen.isCaptchaAvailable === true,\r\n    errors: loginPasswordInstance.getErrors(),\r\n    links,\r\n    editIdentifierLink,\r\n    signupLink,\r\n    resetPasswordLink,\r\n    captchaImage,\r\n    data,\r\n  };\r\n};\r\n","import ULThemeLink from \"@/components/ULThemeLink\";\r\nimport { rebaseLinkToCurrentOrigin } from \"@/utils/helpers/urlUtils\";\r\n\r\nimport { useLoginPasswordManager } from \"../hooks/useLoginPasswordManager\";\r\n\r\nfunction Footer() {\r\n  const { isSignupEnabled, signupLink, texts } = useLoginPasswordManager();\r\n\r\n  if (!isSignupEnabled) {\r\n    return null;\r\n  }\r\n\r\n  const localizedSignupLink = rebaseLinkToCurrentOrigin(signupLink);\r\n\r\n  // Handle text fallbacks in component\r\n  const footerText = texts?.footerText || \"Don't have an account?\";\r\n  const footerLinkText = texts?.footerLinkText || \"Sign up\";\r\n\r\n  return (\r\n    <div className=\"mt-4 text-left\">\r\n      <span className=\"text-sm pr-1\">{footerText}</span>\r\n      {localizedSignupLink && (\r\n        <ULThemeLink href={localizedSignupLink}>{footerLinkText}</ULThemeLink>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import * as React from \"react\";\r\n\r\nimport { Avatar as AvatarPrimitive } from \"@base-ui-components/react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Avatar({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AvatarPrimitive.Root>) {\r\n  return (\r\n    <AvatarPrimitive.Root\r\n      data-slot=\"avatar\"\r\n      className={cn(\r\n        \"relative flex size-8 shrink-0 overflow-hidden rounded-full\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction AvatarImage({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AvatarPrimitive.Image>) {\r\n  return (\r\n    <AvatarPrimitive.Image\r\n      data-slot=\"avatar-image\"\r\n      className={cn(\"aspect-square size-full\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction AvatarFallback({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\r\n  return (\r\n    <AvatarPrimitive.Fallback\r\n      data-slot=\"avatar-fallback\"\r\n      className={cn(\r\n        \"bg-muted flex size-full items-center justify-center rounded-full\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { Avatar, AvatarFallback, AvatarImage };\r\n","import { cn } from \"@/lib/utils\";\r\nimport { extractTokenValue } from \"@/utils/helpers/tokenUtils\";\r\n\r\nimport { Avatar, AvatarImage } from \"./ui/avatar\";\r\n\r\nexport interface ULThemeLogoProps\r\n  extends React.HTMLAttributes<HTMLSpanElement> {\r\n  /**\r\n   * Optional image url of the logo.\r\n   */\r\n  imageUrl?: string;\r\n  /**\r\n   * Alt Text for the logo image\r\n   */\r\n  altText: string;\r\n  /**\r\n   * Optional Classes for custom overrides\r\n   */\r\n  className?: string;\r\n}\r\n\r\nconst ULThemeLogo = ({\r\n  imageUrl,\r\n  altText,\r\n  className,\r\n  ...rest\r\n}: ULThemeLogoProps) => {\r\n  // Using extractTokenValue utility to extract the logo URL, Logo Visible flags from CSS variable\r\n  const themedLogoSrcValue = extractTokenValue(\"--ul-theme-widget-logo-url\");\r\n  const isLogoHidden =\r\n    extractTokenValue(\"--ul-theme-widget-logo-position\") === \"none\";\r\n  const themedStylesAvatar = \"flex flex-wrap justify-widget-logo\";\r\n  const themedStylesAvatarImg = \"h-(--height-widget-logo)\";\r\n  const logoSrc = themedLogoSrcValue || imageUrl;\r\n\r\n  return (\r\n    !isLogoHidden && (\r\n      <div className={cn(themedStylesAvatar, className)}>\r\n        <Avatar className=\"size-auto rounded-none\">\r\n          <AvatarImage\r\n            src={logoSrc}\r\n            alt={altText}\r\n            className={cn(themedStylesAvatarImg)}\r\n            loading=\"eager\" // Default should load an image immediately\r\n            decoding=\"async\" // Decode the image asynchronously\r\n            fetchPriority=\"high\" // Fetch the image at a high priority\r\n            {...rest}\r\n          />\r\n        </Avatar>\r\n      </div>\r\n    )\r\n  );\r\n};\r\nexport default ULThemeLogo;\r\n","import type { HTMLAttributes, ReactNode } from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface ULThemeSubtitleProps extends HTMLAttributes<HTMLDivElement> {\r\n  /**\r\n   * The subtitle of the screen.\r\n   */\r\n  children: ReactNode;\r\n  /**\r\n   * Optional class names for additional styling or overriding default styles.\r\n   */\r\n  className?: string;\r\n}\r\n\r\nconst ULThemeSubtitle = ({\r\n  children,\r\n  className,\r\n  ...rest\r\n}: ULThemeSubtitleProps) => {\r\n  const themedStyles =\r\n    \"mb-4 text-body-text justify-text-header text-(length:--ul-theme-font-subtitle-size) font-subtitle\";\r\n\r\n  return (\r\n    <p className={cn(themedStyles, className)} {...rest}>\r\n      {children}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default ULThemeSubtitle;\r\n","import type { HTMLAttributes, ReactNode } from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface ULThemeTitleProps extends HTMLAttributes<HTMLDivElement> {\r\n  /**\r\n   * The title of the screen.\r\n   */\r\n  children: ReactNode;\r\n  /**\r\n   * Optional class names for additional styling or overriding default styles.\r\n   */\r\n  className?: string;\r\n}\r\n\r\nconst ULThemeTitle = ({ children, className, ...rest }: ULThemeTitleProps) => {\r\n  const themedStyles =\r\n    \"mt-6 mb-4 text-header justify-text-header text-(length:--ul-theme-font-title-size) font-title\";\r\n\r\n  return (\r\n    <h1 className={cn(themedStyles, className)} {...rest}>\r\n      {children}\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default ULThemeTitle;\r\n","import ULThemeLogo from \"@/components/ULThemeLogo\";\r\nimport ULThemeSubtitle from \"@/components/ULThemeSubtitle\";\r\nimport ULThemeTitle from \"@/components/ULThemeTitle\";\r\n\r\nimport { useLoginPasswordManager } from \"../hooks/useLoginPasswordManager\";\r\n\r\nfunction Header() {\r\n  const { texts } = useLoginPasswordManager();\r\n\r\n  // Handle text fallbacks in component\r\n  const logoAltText = texts?.logoAltText || \"Application Logo\";\r\n\r\n  return (\r\n    <>\r\n      <ULThemeLogo altText={logoAltText}></ULThemeLogo>\r\n      <ULThemeTitle>{texts?.title || \"Welcome\"}</ULThemeTitle>\r\n      <ULThemeSubtitle>\r\n        {texts?.description ||\r\n          \"Enter your password for My Company to continue to My App\"}\r\n      </ULThemeSubtitle>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import * as React from \"react\";\r\n\r\nimport { Field as FieldPrimitive } from \"@base-ui-components/react\";\r\nimport { cva, VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst floatingLabelFieldVariants = cva(\r\n  \"bg-input aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive theme-default:active:scale-[0.99] relative box-border inline-flex w-full shrink-0 cursor-text items-center justify-center text-sm transition-[color,box-shadow] duration-150 ease-in-out outline-none disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"text-input-foreground shadow-input-resting hover:shadow-input-hover focus-within:ring-ring focus-within:ring-4\",\r\n        error:\r\n          \"text-destructive-foreground shadow-input-destructive-resting hover:shadow-input-destructive-hover focus-within:ring-destructive-border/15 focus-within:ring-4\",\r\n      },\r\n      size: {\r\n        default: \"h-14 rounded-2xl\",\r\n        sm: \"h-12 rounded-2xl\",\r\n        lg: \"h-16 rounded-2xl\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface FloatingLabelFieldProps\r\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\"> {\r\n  label: string;\r\n  error?: boolean;\r\n  helperText?: string;\r\n  size?: VariantProps<typeof floatingLabelFieldVariants>[\"size\"];\r\n  variant?: VariantProps<typeof floatingLabelFieldVariants>[\"variant\"];\r\n  startAdornment?: React.ReactNode;\r\n  endAdornment?: React.ReactNode;\r\n}\r\n\r\nconst FloatingLabelField = React.forwardRef<\r\n  HTMLInputElement,\r\n  FloatingLabelFieldProps\r\n>(\r\n  (\r\n    {\r\n      className,\r\n      variant,\r\n      size,\r\n      error,\r\n      helperText,\r\n      label,\r\n      startAdornment,\r\n      endAdornment,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const [focused, setFocused] = React.useState(false);\r\n    const [hasValue, setHasValue] = React.useState(\r\n      Boolean(props.value || props.defaultValue)\r\n    );\r\n    const isDisabled = props.disabled;\r\n\r\n    const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\r\n      setFocused(true);\r\n      props.onFocus?.(e);\r\n    };\r\n\r\n    const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\r\n      setFocused(false);\r\n      setHasValue(Boolean(e.target.value));\r\n      props.onBlur?.(e);\r\n    };\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setHasValue(Boolean(e.target.value));\r\n      props.onChange?.(e);\r\n    };\r\n\r\n    const isLabelFloating = focused || hasValue;\r\n\r\n    return (\r\n      <div>\r\n        <FieldPrimitive.Root\r\n          className={cn(\r\n            floatingLabelFieldVariants({\r\n              variant: error ? \"error\" : variant,\r\n              size,\r\n            }),\r\n            \"group relative items-end gap-0.5\",\r\n            isDisabled &&\r\n              \"bg-input-muted text-input-foreground cursor-not-allowed opacity-50\",\r\n            isDisabled && variant === \"default\" && \"bg-input-muted\",\r\n            startAdornment && \"pl-[5px]\",\r\n            endAdornment && \"pr-[5px]\",\r\n            className\r\n          )}\r\n        >\r\n          <FieldPrimitive.Label\r\n            htmlFor={props.id}\r\n            className={cn(\r\n              \"pointer-events-none absolute top-1/2 left-4 z-[10] -translate-y-1/2 text-sm transition-all duration-150 ease-in-out origin-left\",\r\n              startAdornment && \"left-0\",\r\n              // Floating state - position within border area\r\n              isLabelFloating &&\r\n                \"scale-80 -translate-y-[1.18rem] top-2 z-10 bg-input px-1\",\r\n              error ? \"text-destructive-foreground\" : \"text-muted-foreground\",\r\n              focused && !error && \"text-primary\"\r\n            )}\r\n          >\r\n            {label}\r\n          </FieldPrimitive.Label>\r\n          {startAdornment && (\r\n            <div className=\"flex h-full items-center justify-center [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\r\n              {startAdornment}\r\n            </div>\r\n          )}\r\n          <div className=\"relative flex-1\">\r\n            <FieldPrimitive.Control\r\n              id={props.id}\r\n              className={cn(\r\n                \"h-14 w-full flex-1 rounded-2xl bg-transparent px-3 py-4 outline-none file:border-0 file:bg-transparent file:text-sm file:font-medium\",\r\n                // Override browser autofill styles without blocking borders\r\n                \"autofill:bg-transparent\",\r\n                \"autofill:[-webkit-text-fill-color:inherit]\",\r\n                \"autofill:[transition:background-color_9999s_ease-in-out_0s]\",\r\n                isDisabled &&\r\n                  \"bg-input-muted text-input-foreground cursor-not-allowed opacity-50\",\r\n                startAdornment ? \"rounded-l-none pl-0\" : \"pl-3\",\r\n                endAdornment ? \"rounded-r-none pr-0\" : \"pr-3\",\r\n                size === \"sm\" && \"h-12 py-3 text-sm\",\r\n                size === \"lg\" && \"h-16 py-5 text-base\"\r\n              )}\r\n              // Spread props first, then override with our handlers\r\n              // This ensures our focus/blur handlers take precedence over React Hook Form's\r\n              // allowing proper floating label state management\r\n              {...props}\r\n              ref={ref}\r\n              onFocus={handleFocus}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          {endAdornment && (\r\n            <div className=\"flex h-full items-center justify-center [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\r\n              {endAdornment}\r\n            </div>\r\n          )}\r\n        </FieldPrimitive.Root>\r\n        {helperText && (\r\n          <p\r\n            className={cn(\r\n              \"mt-1.5 text-xs\",\r\n              error ? \"text-destructive-foreground\" : \"text-muted-foreground\"\r\n            )}\r\n          >\r\n            {helperText}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nFloatingLabelField.displayName = \"FloatingLabelField\";\r\n\r\nexport { FloatingLabelField, floatingLabelFieldVariants };\r\n","\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport {\r\n  Controller,\r\n  type ControllerProps,\r\n  type FieldPath,\r\n  type FieldValues,\r\n  FormProvider,\r\n  useFormContext,\r\n  useFormState,\r\n} from \"react-hook-form\";\r\n\r\nimport { Field as FieldPrimitive } from \"@base-ui-components/react\";\r\n\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Form = FormProvider;\r\n\r\ntype FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\r\n> = {\r\n  name: TName;\r\n};\r\n\r\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\r\n  {} as FormFieldContextValue\r\n);\r\n\r\nconst FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  );\r\n};\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext);\r\n  const itemContext = React.useContext(FormItemContext);\r\n  const { getFieldState } = useFormContext();\r\n  const formState = useFormState({ name: fieldContext.name });\r\n  const fieldState = getFieldState(fieldContext.name, formState);\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\");\r\n  }\r\n\r\n  const { id } = itemContext;\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  };\r\n};\r\n\r\ntype FormItemContextValue = {\r\n  id: string;\r\n};\r\n\r\nconst FormItemContext = React.createContext<FormItemContextValue>(\r\n  {} as FormItemContextValue\r\n);\r\n\r\nfunction FormItem({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  const id = React.useId();\r\n\r\n  return (\r\n    <FormItemContext.Provider value={{ id }}>\r\n      <FieldPrimitive.Root\r\n        data-slot=\"form-item\"\r\n        className={cn(\"grid\", className)}\r\n        {...props}\r\n      />\r\n    </FormItemContext.Provider>\r\n  );\r\n}\r\n\r\nfunction FormLabel({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof FieldPrimitive.Label>) {\r\n  const { error, formItemId } = useFormField();\r\n\r\n  return (\r\n    <Label\r\n      data-slot=\"form-label\"\r\n      data-error={!!error}\r\n      className={cn(\"data-[error=true]:text-destructive\", className)}\r\n      htmlFor={formItemId}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction FormControl({\r\n  children,\r\n  ...props\r\n}: React.ComponentProps<typeof FieldPrimitive.Control> & {\r\n  children: React.ReactElement<Record<string, unknown>>;\r\n}) {\r\n  const { error, formItemId, formDescriptionId, formMessageId } =\r\n    useFormField();\r\n\r\n  return (\r\n    <FieldPrimitive.Control\r\n      data-slot=\"form-control\"\r\n      id={formItemId}\r\n      aria-describedby={\r\n        !error\r\n          ? `${formDescriptionId}`\r\n          : `${formDescriptionId} ${formMessageId}`\r\n      }\r\n      aria-invalid={!!error}\r\n      render={children}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction FormDescription({ className, ...props }: React.ComponentProps<\"p\">) {\r\n  const { formDescriptionId } = useFormField();\r\n\r\n  return (\r\n    <p\r\n      data-slot=\"form-description\"\r\n      id={formDescriptionId}\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction FormMessage({ className, ...props }: React.ComponentProps<\"p\">) {\r\n  const { error, formMessageId } = useFormField();\r\n  const body = error ? String(error?.message ?? \"\") : props.children;\r\n\r\n  if (!body) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <p\r\n      data-slot=\"form-message\"\r\n      id={formMessageId}\r\n      className={cn(\"text-destructive text-sm\", className)}\r\n      {...props}\r\n    >\r\n      {body}\r\n    </p>\r\n  );\r\n}\r\n\r\nexport {\r\n  Form,\r\n  FormControl,\r\n  FormDescription,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n  useFormField,\r\n};\r\n","import { cva } from \"class-variance-authority\";\r\n\r\nimport {\r\n  FloatingLabelField as BaseFloatingLabelField,\r\n  type FloatingLabelFieldProps as BaseFloatingLabelFieldProps,\r\n} from \"@/components/ui/floating-label-field\";\r\nimport { useFormField } from \"@/components/ui/form\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst ulThemeFloatingLabelFieldVariants = cva(\r\n  [\r\n    // Layout & Spacing\r\n    \"mb-2\",\r\n\r\n    // Base Background & Colors\r\n    \"theme-universal:bg-input-bg\",\r\n    \"theme-universal:text-input-text\",\r\n\r\n    // Border Styling\r\n    \"theme-universal:border-(length:--ul-theme-border-input-border-weight)\",\r\n    \"theme-universal:border-input-border\",\r\n\r\n    // Border Radius\r\n    \"theme-universal:rounded-input\",\r\n\r\n    // Typography - Input Text\r\n    \"theme-universal:text-(length:--ul-theme-font-body-text-size)\",\r\n    \"theme-universal:font-body-text\",\r\n\r\n    // Placeholder Styling\r\n    \"theme-universal:placeholder:text-input-labels\",\r\n    \"theme-universal:[&_input]:placeholder:text-input-labels\",\r\n    \"theme-universal:placeholder:text-(length:--ul-theme-font-input-labels-size)\",\r\n    \"theme-universal:[&_input]:placeholder:text-(length:--ul-theme-font-input-labels-size)\",\r\n    \"theme-universal:placeholder:font-input-label\",\r\n    \"theme-universal:[&_input]:placeholder:font-input-label\",\r\n\r\n    // Floating Label Background\r\n    \"theme-universal:[&_label]:bg-input-bg\",\r\n\r\n    // Floating Label - Base Styling (applies to all labels)\r\n    \"theme-universal:[&_label]:text-input-labels\",\r\n    \"theme-universal:[&_label]:text-(length:--ul-theme-font-input-labels-size)\",\r\n    \"theme-universal:[&_label]:font-input-label\",\r\n  ],\r\n  {\r\n    variants: {\r\n      themeState: {\r\n        default: [\r\n          // Focus States - Default\r\n          \"theme-universal:focus-within:border-base-focus\",\r\n          \"theme-universal:focus-within:ring-0\",\r\n\r\n          // Focus Label States - Override label color when focused\r\n          \"theme-universal:focus-within:[&_label]:text-base-focus\",\r\n        ],\r\n        error: [\r\n          // Error States\r\n          \"theme-universal:text-error\",\r\n          \"theme-universal:border-error\",\r\n          \"theme-universal:focus-within:border-error\",\r\n          \"theme-universal:focus-within:ring-0\",\r\n\r\n          // Error Label States - Force override using color CSS property\r\n          \"theme-universal:[&_label]:text-error\",\r\n        ],\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      themeState: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface ULThemeFloatingLabelFieldProps\r\n  extends BaseFloatingLabelFieldProps {\r\n  /**\r\n   * Additional wrapper class for form field container\r\n   */\r\n  wrapperClassName?: string;\r\n}\r\n\r\nfunction ULThemeFloatingLabelField({\r\n  className,\r\n  variant = \"default\",\r\n  size = \"default\",\r\n  wrapperClassName,\r\n  error,\r\n  ...props\r\n}: ULThemeFloatingLabelFieldProps) {\r\n  // Get the form field context for proper ID association\r\n  const { formItemId } = useFormField();\r\n\r\n  // Determine variant based on error prop\r\n  const effectiveVariant = error ? \"error\" : variant;\r\n\r\n  // Generate theme classes using CVA - automatically use error state when error prop is true\r\n  const themeOverrides = ulThemeFloatingLabelFieldVariants({\r\n    themeState: error ? \"error\" : \"default\",\r\n  });\r\n\r\n  return (\r\n    <div className={cn(\"w-full\", wrapperClassName)}>\r\n      <BaseFloatingLabelField\r\n        id={formItemId}\r\n        className={cn(className, themeOverrides)}\r\n        variant={effectiveVariant}\r\n        size={size}\r\n        error={error}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nULThemeFloatingLabelField.displayName = \"ULThemeFloatingLabelField\";\r\n\r\nexport { ULThemeFloatingLabelField };\r\n","import { AlertCircle } from \"lucide-react\";\r\n\r\nimport { FormMessage } from \"@/components/ui/form\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface ULThemeFormMessageProps {\r\n  /**\r\n   * SDK error message (takes precedence over form validation errors)\r\n   */\r\n  sdkError?: string;\r\n  /**\r\n   * Whether there is a form validation error\r\n   */\r\n  hasFormError?: boolean;\r\n  /**\r\n   * Whether to show the error icon\r\n   */\r\n  showIcon?: boolean;\r\n  /**\r\n   * Additional CSS classes\r\n   */\r\n  className?: string;\r\n}\r\n\r\nconst ULThemeFormMessage = ({\r\n  sdkError,\r\n  hasFormError,\r\n  showIcon = true,\r\n  className,\r\n}: ULThemeFormMessageProps) => {\r\n  // Don't render if no errors at all\r\n  if (!sdkError && !hasFormError) {\r\n    return null;\r\n  }\r\n\r\n  // Always render with consistent theming and icon for ANY error\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"flex mb-2 items-center text-sm font-medium theme-universal:text-error\",\r\n        className\r\n      )}\r\n      role=\"alert\"\r\n      aria-live=\"polite\"\r\n    >\r\n      {showIcon && <AlertCircle className=\"h-4 w-4 mr-1 flex-shrink-0\" />}\r\n      {sdkError ? (\r\n        <p className=\"text-destructive text-sm theme-universal:text-error\">\r\n          {sdkError}\r\n        </p>\r\n      ) : (\r\n        <FormMessage className=\"theme-universal:text-error\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nULThemeFormMessage.displayName = \"ULThemeFormMessage\";\r\n\r\nexport { ULThemeFormMessage };\r\n","import { Control, FieldValues, Path, RegisterOptions } from \"react-hook-form\";\r\n\r\nimport { ULThemeFloatingLabelField } from \"@/components/form/ULThemeFloatingLabelField\";\r\nimport { ULThemeFormMessage } from \"@/components/form/ULThemeFormMessage\";\r\nimport { FormField, FormItem } from \"@/components/ui/form\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface CaptchaProps<T extends FieldValues = FieldValues> {\r\n  label: string;\r\n  imageUrl: string;\r\n  imageAltText: string;\r\n  name: Path<T>;\r\n  control: Control<T>;\r\n  rules?: RegisterOptions<T>;\r\n  sdkError?: string;\r\n  className?: string;\r\n}\r\n\r\nconst Captcha = <T extends FieldValues = FieldValues>({\r\n  name,\r\n  control,\r\n  rules,\r\n  label,\r\n  imageUrl,\r\n  imageAltText,\r\n  sdkError,\r\n  className,\r\n}: CaptchaProps<T>) => {\r\n  // Container styles with theme\r\n  const containerStyles = cn(\"space-y-2\", className);\r\n\r\n  // Image container styles with theme\r\n  const imageContainerStyles = cn(\r\n    \"flex justify-center p-8 rounded\",\r\n    \"theme-universal:bg-input-bg\",\r\n    \"theme-universal:border\",\r\n    \"theme-universal:border-input-border\",\r\n    \"theme-universal:rounded-input\"\r\n  );\r\n\r\n  if (!imageUrl) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={containerStyles}>\r\n      <div className={imageContainerStyles}>\r\n        <img src={imageUrl} alt={imageAltText} className=\"object-contain\" />\r\n      </div>\r\n      <FormField\r\n        control={control}\r\n        name={name}\r\n        rules={rules}\r\n        render={({ field, fieldState }) => (\r\n          <FormItem>\r\n            <ULThemeFloatingLabelField\r\n              {...field}\r\n              label={label}\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              error={!!fieldState.error || !!sdkError}\r\n            />\r\n            <ULThemeFormMessage\r\n              className=\"mt-1\"\r\n              sdkError={sdkError}\r\n              hasFormError={!!fieldState.error}\r\n            />\r\n          </FormItem>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Captcha;\r\n","import * as React from \"react\";\r\n\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst alertVariants = cva(\r\n  \"shadow-input-hover bg-input relative grid w-full grid-cols-[0_1fr] items-start gap-y-0.5 overflow-clip rounded-3xl p-3 text-sm has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] has-[>svg]:gap-x-3 [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"text-foreground border-b-2 border-transparent\",\r\n        info: \"text-info-foreground [&>svg]:text-info-foreground\",\r\n        success: \"text-success-foreground [&>svg]:text-success-foreground\",\r\n        warning: \"text-warning-foreground [&>svg]:text-warning-foreground\",\r\n        destructive:\r\n          \"text-destructive-foreground [&>svg]:text-destructive-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nfunction Alert({\r\n  className,\r\n  variant,\r\n  ...props\r\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\r\n  return (\r\n    <div\r\n      data-slot=\"alert\"\r\n      role=\"alert\"\r\n      className={cn(alertVariants({ variant }), className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"alert-title\"\r\n      className={cn(\r\n        \"col-start-2 line-clamp-1 flex h-auto min-h-4 leading-4.5 font-medium tracking-tight\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\nfunction AlertDescription({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"alert-description\"\r\n      className={cn(\r\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction AlertAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"absolute top-2 right-2 flex items-center space-x-4\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { Alert, AlertAction, AlertDescription, AlertTitle };\r\n","import * as React from \"react\";\r\n\r\nimport { Alert, AlertTitle } from \"@/components/ui/alert\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface ULThemeErrorProps extends React.ComponentProps<\"div\"> {\r\n  variant?: \"destructive\";\r\n}\r\n\r\nfunction ULThemeAlert({\r\n  variant = \"destructive\",\r\n  className,\r\n  ...props\r\n}: ULThemeErrorProps) {\r\n  // Variant-specific theme overrides for Auth0 styling\r\n  const variantThemeOverrides = {\r\n    destructive: cn(\r\n      \"p-4\",\r\n      \"theme-universal:bg-error\", //background-color\r\n      \"theme-universal:text-(--ul-theme-color-primary-button-label)\", //text-color\r\n      \"theme-universal:rounded-button\", //border-radius\r\n      \"theme-universal:font-body\", //font-weight\r\n      \"theme-universal:text-(length:--ul-theme-font-body-text-size)\" //font-size\r\n    ),\r\n  };\r\n\r\n  const themeClasses = cn(variant && variantThemeOverrides[variant]);\r\n\r\n  return (\r\n    <Alert\r\n      variant={variant}\r\n      className={cn(className, themeClasses)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction ULThemeAlertTitle({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"div\">) {\r\n  // Theme overrides for error title styling\r\n  const themeClasses = cn(\r\n    \"theme-universal:text-(--ul-theme-color-primary-button-label)\", //text-color\r\n    \"theme-universal:font-body\", //font-weight\r\n    \"theme-universal:text-(length:--ul-theme-font-body-text-size)\" //font-size\r\n  );\r\n\r\n  return <AlertTitle className={cn(className, themeClasses)} {...props} />;\r\n}\r\n\r\nexport { ULThemeAlert, ULThemeAlertTitle };\r\nexport default ULThemeAlert;\r\n","\"use client\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport { Tooltip as TooltipPrimitive } from \"@base-ui-components/react/tooltip\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction TooltipProvider({\r\n  delay: delayDuration = 0,\r\n  ...props\r\n}: React.ComponentProps<typeof TooltipPrimitive.Provider>) {\r\n  return (\r\n    <TooltipPrimitive.Provider\r\n      data-slot=\"tooltip-provider\"\r\n      delay={delayDuration}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Tooltip({\r\n  ...props\r\n}: React.ComponentProps<typeof TooltipPrimitive.Root>) {\r\n  return (\r\n    <TooltipProvider>\r\n      <TooltipPrimitive.Root data-slot=\"tooltip\" {...props} />\r\n    </TooltipProvider>\r\n  );\r\n}\r\n\r\nfunction TooltipTrigger({\r\n  ...props\r\n}: React.ComponentProps<typeof TooltipPrimitive.Trigger>) {\r\n  return <TooltipPrimitive.Trigger data-slot=\"tooltip-trigger\" {...props} />;\r\n}\r\n\r\nfunction TooltipContent({\r\n  className,\r\n  arrow,\r\n  side,\r\n  sideOffset = 8,\r\n  children,\r\n  ...props\r\n}: React.ComponentProps<typeof TooltipPrimitive.Positioner> &\r\n  React.ComponentProps<typeof TooltipPrimitive.Popup> & { arrow?: boolean }) {\r\n  return (\r\n    <TooltipPrimitive.Portal>\r\n      <TooltipPrimitive.Positioner side={side} sideOffset={sideOffset}>\r\n        <TooltipPrimitive.Popup\r\n          data-slot=\"tooltip-content\"\r\n          className={cn(\r\n            \"bg-popover text-popover-foreground data-open:animate-in data-open:fade-in-0 data-open:zoom-in-95 data-closed:animate-out data-closed:fade-out-0 data-closed:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 shadow-bevel-lg z-50 w-fit origin-(--radix-tooltip-content-transform-origin) rounded-xl px-2 py-1 text-sm text-balance\",\r\n            className\r\n          )}\r\n          {...props}\r\n        >\r\n          {children}\r\n          {arrow ? (\r\n            <TooltipPrimitive.Arrow className=\"bg-primary fill-primary z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]\" />\r\n          ) : null}\r\n        </TooltipPrimitive.Popup>\r\n      </TooltipPrimitive.Positioner>\r\n    </TooltipPrimitive.Portal>\r\n  );\r\n}\r\n\r\nexport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger };\r\n","import { useState } from \"react\";\r\n\r\nimport { Eye, EyeOff } from \"lucide-react\";\r\n\r\nimport {\r\n  ULThemeFloatingLabelField,\r\n  type ULThemeFloatingLabelFieldProps,\r\n} from \"@/components/form/ULThemeFloatingLabelField\";\r\nimport {\r\n  Tooltip,\r\n  TooltipContent,\r\n  TooltipTrigger,\r\n} from \"@/components/ui/tooltip\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface ULThemePasswordFieldProps\r\n  extends Omit<ULThemeFloatingLabelFieldProps, \"type\" | \"endAdornment\"> {\r\n  onVisibilityToggle?: (isVisible: boolean) => void;\r\n  buttonClassName?: string;\r\n}\r\n\r\nexport const ULThemePasswordField = ({\r\n  onVisibilityToggle,\r\n  buttonClassName,\r\n  ...props\r\n}: ULThemePasswordFieldProps) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    const newState = !showPassword;\r\n    setShowPassword(newState);\r\n    onVisibilityToggle?.(newState);\r\n  };\r\n\r\n  const passwordButton = (\r\n    <Tooltip>\r\n      <TooltipTrigger\r\n        type=\"button\"\r\n        onClick={handleToggle}\r\n        className={cn(\r\n          // Layout & Positioning\r\n          \"cursor-pointer h-full w-full min-w-[44px] mr-[-5px]\",\r\n\r\n          // Border Radius - matches input field\r\n          \"theme-universal:rounded-r-input theme-universal:rounded-l-none\",\r\n\r\n          // Colors\r\n          \"theme-universal:text-input-labels\",\r\n          \"theme-universal:hover:text-input-text\",\r\n\r\n          // Transitions\r\n          \"transition-colors\",\r\n\r\n          // Focus States\r\n          \"theme-universal:focus:bg-base-focus/15 theme-universal:focus-visible:ring-0 theme-universal:focus-visible:ring-offset-0\",\r\n\r\n          // Layout\r\n          \"flex items-center justify-center\",\r\n\r\n          // Button-like styles\r\n          \"bg-transparent border-none outline-none\",\r\n\r\n          buttonClassName\r\n        )}\r\n        aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n      >\r\n        {showPassword ? <EyeOff /> : <Eye />}\r\n      </TooltipTrigger>\r\n      <TooltipContent\r\n        sideOffset={0}\r\n        className=\"bg-black text-white -mb-2 ml-0.5\"\r\n      >\r\n        {showPassword ? \"Hide password\" : \"Show password\"}\r\n      </TooltipContent>\r\n    </Tooltip>\r\n  );\r\n\r\n  return (\r\n    <ULThemeFloatingLabelField\r\n      {...props}\r\n      type={showPassword ? \"text\" : \"password\"}\r\n      endAdornment={passwordButton}\r\n    />\r\n  );\r\n};\r\n\r\nULThemePasswordField.displayName = \"ULThemePasswordField\";\r\n","\"use client\";\r\n\r\nimport { useRender } from \"@base-ui-components/react/use-render\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst buttonVariants = cva(\r\n  \"focus-visible:ring-ring aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive theme-default:active:scale-[0.99] relative box-border inline-flex shrink-0 items-center justify-center gap-2 overflow-hidden text-sm font-medium whitespace-nowrap transition-all duration-150 ease-in-out outline-none focus-visible:ring-4 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        primary:\r\n          \"shadow-button-resting hover:shadow-button-hover hover:border-primary/50 border-primary bg-primary text-primary-foreground hover:bg-primary/90 theme-default:before:from-primary-foreground/0 theme-default:before:to-primary-foreground/15 theme-default:before:absolute theme-default:before:top-0 theme-default:before:left-0 theme-default:before:block theme-default:before:h-full theme-default:before:w-full theme-default:before:bg-gradient-to-t theme-default:before:content-[''] border\",\r\n        outline:\r\n          \"dark:bg-muted/50 hover:text-accent-foreground shadow-button-outlined-resting hover:shadow-button-outlined-hover hover:border-accent bg-background hover:bg-muted text-primary border-primary/35 theme-default:before:from-primary/5 theme-default:before:to-primary/0 theme-default:before:absolute theme-default:before:top-0 theme-default:before:left-0 theme-default:before:block theme-default:before:h-full theme-default:before:w-full theme-default:before:bg-gradient-to-t theme-default:before:content-[''] border\",\r\n        ghost: \"hover:bg-muted text-primary bg-transparent\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90 shadow-button-destructive-resting hover:shadow-button-destructive-hover border-destructive-border/25 hover:border-destructive-border/50 theme-default:before:to-primary-foreground/50 theme-default:before:absolute theme-default:before:top-0 theme-default:before:left-0 theme-default:before:block theme-default:before:h-full theme-default:before:w-full theme-default:before:bg-gradient-to-t theme-default:before:content-[''] theme-default:border\",\r\n        link: \"text-foreground underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 rounded-2xl px-4 py-2.5 has-[>svg]:px-3\",\r\n        xs: \"h-7 rounded-md px-2 py-1.5 text-xs has-[>svg]:px-2\",\r\n        sm: \"h-8 gap-1.5 rounded-xl px-3 py-2 text-xs has-[>svg]:px-2.5\",\r\n        lg: \"h-12 rounded-3xl px-6 py-3 text-base has-[>svg]:px-4\",\r\n        icon: \"size-7 rounded-xl\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"primary\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface ButtonProps\r\n  extends useRender.ComponentProps<\"button\">,\r\n    VariantProps<typeof buttonVariants> {}\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  render = <button />,\r\n  ...props\r\n}: ButtonProps) {\r\n  const defaultProps: useRender.ElementProps<\"button\"> = {\r\n    className: cn(buttonVariants({ variant, size }), className),\r\n  };\r\n\r\n  return useRender({\r\n    render,\r\n    props: { ...defaultProps, ...props },\r\n  });\r\n}\r\n\r\nexport { Button, buttonVariants };\r\n","import { Button, type ButtonProps } from \"@/components/ui/button\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport type ULThemePrimaryButtonProps = ButtonProps;\r\n\r\nexport function ULThemePrimaryButton({\r\n  variant = \"primary\",\r\n  size = \"default\",\r\n  className,\r\n  ...props\r\n}: ULThemePrimaryButtonProps) {\r\n  // Variant-specific theme overrides for colors and states\r\n  const variantThemeOverrides = {\r\n    primary: cn(\r\n      \"p-6 border-0\",\r\n      \"cursor-pointer\",\r\n      \"theme-universal:bg-primary-button\",\r\n      \"theme-universal:text-(--ul-theme-color-primary-button-label)\", //text-color\r\n      \"theme-universal:hover:shadow-[var(--button-hover-shadow)]\",\r\n      \"theme-universal:focus:outline-none theme-universal:focus:ring-4 theme-universal:focus:ring-base-focus/15\",\r\n      \"theme-universal:disabled:bg-primary-button/70\",\r\n      \"theme-universal:disabled:border-primary-button/70\",\r\n      \"theme-universal:disabled:cursor-not-allowed\"\r\n    ),\r\n    secondary: \"\", // Add secondary overrides if needed\r\n    destructive: \"\", // Add destructive overrides if needed\r\n    outline: \"\", // Add outline overrides if needed\r\n    ghost: \"\", // Add ghost overrides if needed\r\n    link: \"\", // Add link overrides if needed\r\n  };\r\n\r\n  // Size-specific theme overrides for border radius and typography\r\n  const sizeThemeOverrides = {\r\n    default: cn(\r\n      \"theme-universal:rounded-button\",\r\n      \"theme-universal:font-button\", //font-weight\r\n      \"theme-universal:text-(length:--ul-theme-font-buttons-text-size)\" //font-size\r\n    ),\r\n    xs: cn(\r\n      \"theme-universal:rounded-button\",\r\n      \"theme-universal:font-button\",\r\n      \"theme-universal:text-(length:--ul-theme-font-buttons-text-size)\"\r\n    ),\r\n    sm: cn(\r\n      \"theme-universal:rounded-button\",\r\n      \"theme-universal:font-button\",\r\n      \"theme-universal:text-(length:--ul-theme-font-buttons-text-size)\"\r\n    ),\r\n    lg: cn(\r\n      \"theme-universal:rounded-button\",\r\n      \"theme-universal:font-button\",\r\n      \"theme-universal:text-(length:--ul-theme-font-buttons-text-size)\"\r\n    ),\r\n    icon: cn(\"theme-universal:rounded-button\"),\r\n  };\r\n\r\n  // Combine all theme classes with proper type safety\r\n  const themeClasses = cn(\r\n    variant && variantThemeOverrides[variant],\r\n    size && sizeThemeOverrides[size]\r\n  );\r\n\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      size={size}\r\n      className={cn(className, themeClasses)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n","/**\r\n * Represents a generic SDK error object.\r\n */\r\nexport interface SdkError {\r\n  code?: string;\r\n  message: string;\r\n  field?: string;\r\n  rules?: Array<{ message: string; format?: string[] }>; // Password complexity rules\r\n  [key: string]: unknown; // Allow other properties with unknown type\r\n}\r\n\r\n/**\r\n * Finds and returns the error message for a specific field from a list of SDK errors.\r\n * @param fieldName The name of the field to find an error for.\r\n * @param errors An array of SDK error objects.\r\n * @returns The error message string if found, otherwise undefined.\r\n */\r\nexport const getFieldError = (\r\n  fieldName: string,\r\n  errors: Array<{ field?: string; message: string }>\r\n): string | undefined => {\r\n  if (!Array.isArray(errors)) {\r\n    return undefined;\r\n  }\r\n  const error = errors.find((err) => err.field === fieldName);\r\n  return error?.message;\r\n};\r\n","import type { IdentifierType } from \"@auth0/auth0-acul-js/types\";\r\n\r\ninterface IdentifierDetails {\r\n  label: string;\r\n  type: string; // HTML input type\r\n  autoComplete: IdentifierType | string; // Prefer IdentifierType when applicable\r\n}\r\n\r\n// Specific keys for placeholder texts for better type safety in the config map\r\ntype PlaceholderKey =\r\n  | \"usernameOrEmailPlaceholder\"\r\n  | \"emailPlaceholder\"\r\n  | \"phonePlaceholder\"\r\n  | \"usernameOnlyPlaceholder\"\r\n  | \"phoneOrEmailPlaceholder\"\r\n  | \"phoneOrUsernamePlaceholder\"\r\n  | \"phoneOrUsernameOrEmailPlaceholder\";\r\n\r\ninterface IdentifierConfig {\r\n  labelKey: PlaceholderKey;\r\n  labelFallback: string;\r\n  type?: string; // HTML input type\r\n  autoComplete?: IdentifierType | string; // Prefer IdentifierType when applicable\r\n}\r\n\r\n/**\r\n * Helper function to create a descriptive key for identifier combinations\r\n */\r\nconst createIdentifierKey = (\r\n  hasEmail: boolean,\r\n  hasPhone: boolean,\r\n  hasUsername: boolean\r\n): string => {\r\n  const identifiers = [];\r\n  if (hasEmail) identifiers.push(\"email\");\r\n  if (hasPhone) identifiers.push(\"phone\");\r\n  if (hasUsername) identifiers.push(\"username\");\r\n  return identifiers.join(\"-\");\r\n};\r\n\r\n/**\r\n * Determines the appropriate label, input type, and autocomplete attribute\r\n * for an identifier field based on active connection attributes and screen texts.\r\n *\r\n * @param connectionAttributes - The connection attributes from the transaction object.\r\n * @param screenTexts - The screen.texts object from Auth0 SDK instance.\r\n * @returns An object containing the label, type, and autoComplete string for the identifier field.\r\n */\r\nexport const getIdentifierDetails = (\r\n  connectionAttributes?: IdentifierType[],\r\n  screenTexts?: Record<string, string> | null // Auth0 screen.texts object\r\n): IdentifierDetails => {\r\n  // Initialize with the most common / general defaults\r\n  let finalLabel =\r\n    screenTexts?.usernameOrEmailPlaceholder || \"Username or Email Address\";\r\n  let finalType = \"text\";\r\n  let finalAutoComplete: IdentifierType | string = \"username\";\r\n\r\n  if (connectionAttributes) {\r\n    const hasEmail = connectionAttributes.includes(\"email\");\r\n    const hasPhone = connectionAttributes.includes(\"phone\");\r\n    const hasUsername = connectionAttributes.includes(\"username\");\r\n\r\n    // Create a descriptive key based on active identifiers\r\n    const identifierKey = createIdentifierKey(hasEmail, hasPhone, hasUsername);\r\n\r\n    const configMap: Record<string, IdentifierConfig> = {\r\n      email: {\r\n        labelKey: \"emailPlaceholder\",\r\n        labelFallback: screenTexts?.emailPlaceholder || \"Email Address\",\r\n        type: \"email\",\r\n        autoComplete: \"email\",\r\n      },\r\n      phone: {\r\n        labelKey: \"phonePlaceholder\",\r\n        labelFallback: screenTexts?.phonePlaceholder || \"Phone Number\",\r\n        type: \"tel\",\r\n        autoComplete: \"tel\",\r\n      },\r\n      username: {\r\n        labelKey: \"usernameOnlyPlaceholder\",\r\n        labelFallback: screenTexts?.usernameOnlyPlaceholder || \"Username\",\r\n        autoComplete: \"username\",\r\n      },\r\n      \"email-phone\": {\r\n        labelKey: \"phoneOrEmailPlaceholder\",\r\n        labelFallback:\r\n          screenTexts?.phoneOrEmailPlaceholder ||\r\n          \"Phone Number or Email Address\",\r\n        autoComplete: \"username\",\r\n      },\r\n      \"email-username\": {\r\n        labelKey: \"usernameOrEmailPlaceholder\",\r\n        labelFallback:\r\n          screenTexts?.usernameOrEmailPlaceholder ||\r\n          \"Username or Email Address\",\r\n        autoComplete: \"username\",\r\n      },\r\n      \"phone-username\": {\r\n        labelKey: \"phoneOrUsernamePlaceholder\",\r\n        labelFallback:\r\n          screenTexts?.phoneOrUsernamePlaceholder || \"Phone Number or Username\",\r\n        autoComplete: \"username\",\r\n      },\r\n      \"email-phone-username\": {\r\n        labelKey: \"phoneOrUsernameOrEmailPlaceholder\",\r\n        labelFallback:\r\n          screenTexts?.phoneOrUsernameOrEmailPlaceholder ||\r\n          \"Phone, Username, or Email\",\r\n        autoComplete: \"username\",\r\n      },\r\n    };\r\n\r\n    const config = configMap[identifierKey];\r\n\r\n    if (config) {\r\n      finalLabel = config.labelFallback;\r\n      if (config.type) {\r\n        finalType = config.type;\r\n      }\r\n      if (config.autoComplete) {\r\n        finalAutoComplete = config.autoComplete;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Append asterisk for required field indication, common pattern\r\n  if (!finalLabel.endsWith(\"*\")) {\r\n    finalLabel += \"*\";\r\n  }\r\n\r\n  return {\r\n    label: finalLabel,\r\n    type: finalType,\r\n    autoComplete: finalAutoComplete,\r\n  };\r\n};\r\n","import { useForm } from \"react-hook-form\";\r\n\r\nimport type { Error } from \"@auth0/auth0-acul-js/types\";\r\n\r\nimport Captcha from \"@/components/Captcha\";\r\nimport {\r\n  ULThemeFloatingLabelField,\r\n  ULThemeFormMessage,\r\n} from \"@/components/form\";\r\nimport { Form, FormField, FormItem } from \"@/components/ui/form\";\r\nimport { ULThemeAlert, ULThemeAlertTitle } from \"@/components/ULThemeError\";\r\nimport ULThemeLink from \"@/components/ULThemeLink\";\r\nimport { ULThemePasswordField } from \"@/components/ULThemePasswordField\";\r\nimport { ULThemePrimaryButton } from \"@/components/ULThemePrimaryButton\";\r\nimport { getFieldError } from \"@/utils/helpers/errorUtils\";\r\nimport { getIdentifierDetails } from \"@/utils/helpers/identifierUtils\";\r\nimport { rebaseLinkToCurrentOrigin } from \"@/utils/helpers/urlUtils\";\r\n\r\nimport { useLoginPasswordManager } from \"../hooks/useLoginPasswordManager\";\r\n\r\ninterface LoginPasswordFormData {\r\n  username: string;\r\n  password: string;\r\n  captcha?: string;\r\n}\r\n\r\n/**\r\n * IdentifierForm Component\r\n *\r\n * This component renders the login form for the LoginPassword screen.\r\n * It includes fields for username, password, and CAPTCHA (if required),\r\n * along with error handling and support for editing identifiers.\r\n */\r\nfunction IdentifierForm() {\r\n  // Extract necessary methods and properties from the custom hook\r\n  const {\r\n    links,\r\n    data,\r\n    handleLoginPassword,\r\n    errors,\r\n    isCaptchaAvailable,\r\n    captchaImage,\r\n    resetPasswordLink,\r\n    isForgotPasswordEnabled,\r\n    loginPasswordInstance,\r\n    texts,\r\n  } = useLoginPasswordManager();\r\n\r\n  // Initialize the form using react-hook-form\r\n  const form = useForm<LoginPasswordFormData>({\r\n    defaultValues: {\r\n      username: data?.username || \"\",\r\n      password: \"\",\r\n      captcha: \"\",\r\n    },\r\n  });\r\n\r\n  const {\r\n    formState: { isSubmitting },\r\n  } = form;\r\n\r\n  // Handle text fallbacks for button and field labels\r\n  const buttonText = texts?.buttonText || \"Continue\";\r\n  const passwordLabelText = texts?.passwordPlaceholder || \"Password\";\r\n  const captchaLabel = texts?.captchaCodePlaceholder?.concat(\"*\") || \"CAPTCHA*\";\r\n  const captchaImageAlt = \"CAPTCHA challenge\"; // Default fallback\r\n  const forgotPasswordText = texts?.forgotPasswordText || \"Forgot Password?\";\r\n\r\n  // Extract general errors (not field-specific) from the SDK\r\n  const generalErrors =\r\n    errors?.filter((error: Error) => !error.field || error.field === null) ||\r\n    [];\r\n\r\n  // Extract field-specific errors for username, password, and CAPTCHA\r\n  const usernameSDKError =\r\n    getFieldError(\"username\", errors) || getFieldError(\"email\", errors);\r\n  const passwordSDKError = getFieldError(\"password\", errors);\r\n  const captchaSDKError = getFieldError(\"captcha\", errors);\r\n\r\n  // Get allowed identifiers (e.g., email, username, phone) from the SDK\r\n  const allowedIdentifiers =\r\n    loginPasswordInstance?.transaction?.getAllowedIdentifiers() || [];\r\n\r\n  // Get password policy (e.g., minimum length) from the SDK\r\n  const passwordPolicy =\r\n    loginPasswordInstance?.transaction?.getPasswordPolicy();\r\n\r\n  // Determine the label and type for the username field based on allowed identifiers\r\n  const { label: usernameLabel, type: usernameType } = getIdentifierDetails(\r\n    allowedIdentifiers,\r\n    texts\r\n  );\r\n\r\n  /**\r\n   * Handles form submission.\r\n   *\r\n   * @param data - The form data containing username, password, and optional CAPTCHA.\r\n   */\r\n  const onSubmit = async (data: LoginPasswordFormData) => {\r\n    await handleLoginPassword(data.username, data.password, data.captcha);\r\n  };\r\n\r\n  // Rebase the reset password link to the current origin\r\n  const localizedResetPasswordLink =\r\n    resetPasswordLink && rebaseLinkToCurrentOrigin(resetPasswordLink);\r\n\r\n  // Rebase the edit identifier link to the current origin\r\n  const editIdentifierLink =\r\n    rebaseLinkToCurrentOrigin(links?.edit_identifier) || \"\";\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-2\">\r\n        {/* General error messages */}\r\n        {generalErrors.length > 0 && (\r\n          <div className=\"space-y-3 mb-4\">\r\n            {generalErrors.map((error: Error, index: number) => (\r\n              <ULThemeAlert key={index}>\r\n                <ULThemeAlertTitle>{error.message}</ULThemeAlertTitle>\r\n              </ULThemeAlert>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Username input field */}\r\n        <FormField\r\n          control={form.control}\r\n          name=\"username\"\r\n          render={({ field, fieldState }) => (\r\n            <FormItem>\r\n              <ULThemeFloatingLabelField\r\n                {...field}\r\n                label={usernameLabel}\r\n                type={usernameType}\r\n                value={data?.username || \"\"}\r\n                error={!!fieldState.error || !!usernameSDKError}\r\n                readOnly={true}\r\n                endAdornment={\r\n                  <ULThemeLink href={editIdentifierLink}>\r\n                    {texts?.editEmailText || \"Edit\"}\r\n                  </ULThemeLink>\r\n                }\r\n                className=\"pr-[16px]\"\r\n              />\r\n              <ULThemeFormMessage\r\n                sdkError={usernameSDKError}\r\n                hasFormError={!!fieldState.error}\r\n              />\r\n            </FormItem>\r\n          )}\r\n        />\r\n\r\n        {/* Password input field */}\r\n        <FormField\r\n          control={form.control}\r\n          name=\"password\"\r\n          rules={{\r\n            required: \"Password is required\",\r\n            maxLength: {\r\n              value: 200,\r\n              message: \"Maximum 200 characters allowed\",\r\n            },\r\n            minLength: passwordPolicy?.minLength\r\n              ? {\r\n                  value: passwordPolicy.minLength,\r\n                  message: `Password must be at least ${passwordPolicy.minLength} characters`,\r\n                }\r\n              : undefined,\r\n          }}\r\n          render={({ field, fieldState }) => (\r\n            <FormItem>\r\n              <ULThemePasswordField\r\n                {...field}\r\n                label={passwordLabelText}\r\n                autoFocus={true}\r\n                autoComplete=\"current-password\"\r\n                error={!!fieldState.error || !!passwordSDKError}\r\n              />\r\n              <ULThemeFormMessage\r\n                sdkError={passwordSDKError}\r\n                hasFormError={!!fieldState.error}\r\n              />\r\n            </FormItem>\r\n          )}\r\n        />\r\n\r\n        {/* CAPTCHA Box */}\r\n        {isCaptchaAvailable &&\r\n          (passwordSDKError || captchaSDKError || generalErrors.length > 0) && (\r\n            <Captcha\r\n              control={form.control}\r\n              name=\"captcha\"\r\n              label={captchaLabel}\r\n              imageUrl={captchaImage || \"\"}\r\n              imageAltText={captchaImageAlt}\r\n              className=\"mb-4\"\r\n              sdkError={captchaSDKError}\r\n              rules={{\r\n                required: \"Please complete the CAPTCHA\",\r\n                maxLength: {\r\n                  value: 15,\r\n                  message: \"CAPTCHA too long\",\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n\r\n        {/* Forgot Password link */}\r\n        <div className=\"text-left mb-4\">\r\n          {isForgotPasswordEnabled && localizedResetPasswordLink && (\r\n            <ULThemeLink href={localizedResetPasswordLink}>\r\n              {forgotPasswordText}\r\n            </ULThemeLink>\r\n          )}\r\n        </div>\r\n\r\n        {/* Submit button */}\r\n        <ULThemePrimaryButton\r\n          type=\"submit\"\r\n          className=\"w-full\"\r\n          disabled={isSubmitting}\r\n        >\r\n          {buttonText}\r\n        </ULThemePrimaryButton>\r\n      </form>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default IdentifierForm;\r\n","import ULThemeCard from \"@/components/ULThemeCard\";\r\nimport ULThemePageLayout from \"@/components/ULThemePageLayout\";\r\nimport { applyAuth0Theme } from \"@/utils/theme/themeEngine\";\r\n\r\nimport Footer from \"./components/Footer\";\r\nimport Header from \"./components/Header\";\r\nimport IdentifierForm from \"./components/IdentifierForm\";\r\nimport { useLoginPasswordManager } from \"./hooks/useLoginPasswordManager\";\r\n\r\nfunction LoginPasswordScreen() {\r\n  // Extracting attributes from hook made out of LoginPasswordInstance class of Auth0 JS SDK\r\n  const { loginPasswordInstance } = useLoginPasswordManager();\r\n\r\n  // Apply theme from SDK instance when screen loads\r\n  applyAuth0Theme(loginPasswordInstance);\r\n\r\n  return (\r\n    // Applying UDS theme overrides using the \"theme-universal\" class\r\n    <ULThemePageLayout className=\"theme-universal\">\r\n      <ULThemeCard className=\"w-full max-w-[400px] gap-0\">\r\n        <Header />\r\n        <IdentifierForm />\r\n        <Footer />\r\n      </ULThemeCard>\r\n    </ULThemePageLayout>\r\n  );\r\n}\r\n\r\nexport default LoginPasswordScreen;\r\n","/**\r\n * In a development environment, this utility dynamically loads a mock JSON file\r\n * based on the `VITE_SCREEN_NAME` environment variable and sets it to the\r\n * global `universal_login_context` object. This allows for rapid UI\r\n * development and testing of screen-specific components.\r\n *\r\n * Assumes `scripts/dev-screen.js` (in dev mode) has validated `VITE_SCREEN_NAME`\r\n * and the existence of the corresponding mock JSON file.\r\n */\r\nexport async function loadAndSetMockContext(): Promise<void> {\r\n  if (!import.meta.env.DEV) {\r\n    return;\r\n  }\r\n\r\n  const screenName = import.meta.env.VITE_SCREEN_NAME;\r\n\r\n  if (!screenName) {\r\n    console.error(\r\n      \"DEV_ERROR: VITE_SCREEN_NAME not set. Use 'npm run screen <screen-name>'. Defaulting to empty context for dev.\"\r\n    );\r\n    // @ts-expect-error - It's safe to assign an empty object here because the\r\n    // themeEngine, the primary consumer, is now robust enough to handle it.\r\n    window.universal_login_context = {};\r\n    return;\r\n  }\r\n\r\n  try {\r\n    console.log(`[DEV] Loading mock data for screen: ${screenName}...`);\r\n    // Dynamically import the mock data file for the specified screen\r\n    const mockDataModule = await import(`../../mock-data/${screenName}.json`);\r\n    console.log(`[DEV] Successfully loaded mock data for: ${screenName}`);\r\n    window.universal_login_context = mockDataModule.default;\r\n  } catch (error) {\r\n    console.error(\r\n      `DEV_ERROR: Failed to load mock data for '${screenName}.json'. ` +\r\n        `Ensure file exists. Dev script should have caught this. Error:`,\r\n      error\r\n    );\r\n    // @ts-expect-error - It's safe to assign an empty object here because the\r\n    // themeEngine, the primary consumer, is now robust enough to handle it.\r\n    window.universal_login_context = {};\r\n  }\r\n}\r\n","import { lazy } from \"react\";\r\n\r\nconst SCREEN_COMPONENTS: Record<string, React.ComponentType> = {\r\n  \"login-id\": lazy(() => import(\"@/screens/login-id\")),\r\n  login: lazy(() => import(\"@/screens/login\")),\r\n  \"login-password\": lazy(() => import(\"@/screens/login-password\")),\r\n};\r\n\r\nexport const getScreenComponent = (\r\n  screenName: string\r\n): React.ComponentType | null => {\r\n  return SCREEN_COMPONENTS[screenName] || null;\r\n};\r\n","import { Suspense, useEffect, useState } from \"react\";\r\n\r\nimport { getCurrentScreen } from \"@auth0/auth0-acul-js\";\r\n\r\nimport { getScreenComponent } from \"@/utils/screen/screenLoader\";\r\n\r\nconst App = () => {\r\n  const [screen, setScreen] = useState(\"login-id\");\r\n\r\n  useEffect(() => {\r\n    const current = getCurrentScreen();\r\n    setScreen(current || \"login-id\");\r\n  }, []);\r\n\r\n  const ScreenComponent = getScreenComponent(screen);\r\n\r\n  return (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      {ScreenComponent ? (\r\n        <ScreenComponent />\r\n      ) : (\r\n        <div>Screen &quot;{screen}&quot; not implemented yet</div>\r\n      )}\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport { loadAndSetMockContext } from \"@/utils/screen/mockContextLoader\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App.tsx\";\r\n\r\nasync function initializeApp() {\r\n  await loadAndSetMockContext();\r\n\r\n  /**\r\n   * ACUL Integration Note:\r\n   * The following lines handle the specific way this React application is integrated\r\n   * into Auth0's Universal Login page. Auth0 provides the base HTML DOM.\r\n   * This script then creates a 'div' (rootElement),\r\n   * appends it to Auth0's document.body, and then mounts the React application onto this div.\r\n   * This differs from typical setups where an index.html is bundled directly with the app.\r\n   */\r\n  const rootElement = document.createElement(\"div\");\r\n  rootElement.id = \"root\";\r\n\r\n  document.body.appendChild(rootElement);\r\n\r\n  createRoot(document.getElementById(\"root\")!).render(\r\n    <StrictMode>\r\n      <App />\r\n    </StrictMode>\r\n  );\r\n}\r\n\r\ninitializeApp();\r\n"],"file":"index.BXLHV7bZ.js"}